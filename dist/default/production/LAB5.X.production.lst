

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Nov 23 21:30:03 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65  0000                     
    66                           ; Version 2.10
    67                           ; Generated 31/07/2019 GMT
    68                           ; 
    69                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F8722 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     
   101                           	psect	idataBANK0
   102  003074                     __pidataBANK0:
   103                           	opt callstack 0
   104                           
   105                           ;initializer for heater_heatpumper@check_off
   106  003074  0001               	dw	1
   107                           
   108                           ;initializer for _time_each_state
   109  003076  0014               	dw	20
   110                           
   111                           ;initializer for _head
   112  003078  FFFF               	dw	65535
   113                           
   114                           ;initializer for _count
   115  00307A  0001               	dw	1
   116  0000                     _TMR0	set	4054
   117  0000                     _TMR1L	set	4046
   118  0000                     _TMR1H	set	4047
   119  0000                     _PIR1bits	set	3998
   120  0000                     _T1CON	set	4045
   121  0000                     _PORTDbits	set	3971
   122  0000                     _T0CON	set	4053
   123  0000                     _ADCON1	set	4033
   124  0000                     _TRISDbits	set	3989
   125  0000                     _TRISBbits	set	3987
   126  0000                     _OSCTUNE	set	3995
   127  0000                     _OSCCON	set	4051
   128  0000                     _LATDbits	set	3980
   129  0000                     _PORTBbits	set	3969
   130  0000                     _PORTAbits	set	3968
   131  0000                     _PIE1bits	set	3997
   132  0000                     _INTCONbits	set	4082
   133  0000                     _LATCbits	set	3979
   134  0000                     _LATAbits	set	3977
   135  0000                     _TRISCbits	set	3988
   136  0000                     _TRISAbits	set	3986
   137  0000                     _LATFbits	set	3982
   138  0000                     _TRISFbits	set	3991
   139                           
   140                           	psect	smallconst
   141  001000                     __psmallconst:
   142                           	opt callstack 0
   143  001000  00                 	db	0
   144  001001                     STR_2:
   145  001001  4E                 	db	78	;'N'
   146  001002  6F                 	db	111	;'o'
   147  001003  74                 	db	116	;'t'
   148  001004  68                 	db	104	;'h'
   149  001005  69                 	db	105	;'i'
   150  001006  6E                 	db	110	;'n'
   151  001007  67                 	db	103	;'g'
   152  001008  20                 	db	32
   153  001009  20                 	db	32
   154  00100A  20                 	db	32
   155  00100B  46                 	db	70	;'F'
   156  00100C  33                 	db	51	;'3'
   157  00100D  3A                 	db	58	;':'
   158  00100E  20                 	db	32
   159  00100F  20                 	db	32
   160  001010  20                 	db	32
   161  001011  00                 	db	0
   162  001012                     STR_1:
   163  001012  48                 	db	72	;'H'
   164  001013  65                 	db	101	;'e'
   165  001014  61                 	db	97	;'a'
   166  001015  74                 	db	116	;'t'
   167  001016  69                 	db	105	;'i'
   168  001017  6E                 	db	110	;'n'
   169  001018  67                 	db	103	;'g'
   170  001019  20                 	db	32
   171  00101A  20                 	db	32
   172  00101B  20                 	db	32
   173  00101C  46                 	db	70	;'F'
   174  00101D  33                 	db	51	;'3'
   175  00101E  3A                 	db	58	;':'
   176  00101F  20                 	db	32
   177  001020  20                 	db	32
   178  001021  20                 	db	32
   179  001022  00                 	db	0
   180  001023                     STR_3:
   181  001023  50                 	db	80	;'P'
   182  001024  75                 	db	117	;'u'
   183  001025  6D                 	db	109	;'m'
   184  001026  70                 	db	112	;'p'
   185  001027  20                 	db	32
   186  001028  68                 	db	104	;'h'
   187  001029  65                 	db	101	;'e'
   188  00102A  61                 	db	97	;'a'
   189  00102B  74                 	db	116	;'t'
   190  00102C  20                 	db	32
   191  00102D  46                 	db	70	;'F'
   192  00102E  33                 	db	51	;'3'
   193  00102F  3A                 	db	58	;':'
   194  001030  20                 	db	32
   195  001031  20                 	db	32
   196  001032  20                 	db	32
   197  001033  00                 	db	0
   198  001034                     STR_4:
   199  001034  4F                 	db	79	;'O'
   200  001035  46                 	db	70	;'F'
   201  001036  46                 	db	70	;'F'
   202  001037  20                 	db	32
   203  001038  20                 	db	32
   204  001039  20                 	db	32
   205  00103A  20                 	db	32
   206  00103B  20                 	db	32
   207  00103C  20                 	db	32
   208  00103D  20                 	db	32
   209  00103E  46                 	db	70	;'F'
   210  00103F  33                 	db	51	;'3'
   211  001040  3A                 	db	58	;':'
   212  001041  20                 	db	32
   213  001042  20                 	db	32
   214  001043  00                 	db	0
   215  001044                     STR_5:
   216  001044  54                 	db	84	;'T'
   217  001045  65                 	db	101	;'e'
   218  001046  6D                 	db	109	;'m'
   219  001047  70                 	db	112	;'p'
   220  001048  3A                 	db	58	;':'
   221  001049  20                 	db	32
   222  00104A  20                 	db	32
   223  00104B  20                 	db	32
   224  00104C  48                 	db	72	;'H'
   225  00104D  75                 	db	117	;'u'
   226  00104E  6D                 	db	109	;'m'
   227  00104F  69                 	db	105	;'i'
   228  001050  64                 	db	100	;'d'
   229  001051  3A                 	db	58	;':'
   230  001052  00                 	db	0
   231                           
   232                           ; #config settings
   233  001053  00                 	db	0	; dummy byte at the end
   234  0000                     
   235                           	psect	cinit
   236  002D02                     __pcinit:
   237                           	opt callstack 0
   238  002D02                     start_initialization:
   239                           	opt callstack 0
   240  002D02                     __initialization:
   241                           	opt callstack 0
   242                           
   243                           ; Initialize objects allocated to BANK0 (8 bytes)
   244                           ; load TBLPTR registers with __pidataBANK0
   245  002D02  0E74               	movlw	low __pidataBANK0
   246  002D04  6EF6               	movwf	tblptrl,c
   247  002D06  0E30               	movlw	high __pidataBANK0
   248  002D08  6EF7               	movwf	tblptrh,c
   249  002D0A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   250  002D0C  6EF8               	movwf	tblptru,c
   251  002D0E  EE00  F0E7         	lfsr	0,__pdataBANK0
   252  002D12  EE10 F008          	lfsr	1,8
   253  002D16                     copy_data0:
   254  002D16  0009               	tblrd		*+
   255  002D18  CFF5 FFEE          	movff	tablat,postinc0
   256  002D1C  50E5               	movf	postdec1,w,c
   257  002D1E  50E1               	movf	fsr1l,w,c
   258  002D20  E1FA               	bnz	copy_data0
   259                           
   260                           ; Clear objects allocated to BIGRAM (3260 bytes)
   261  002D22  EE01  F028         	lfsr	0,__pbssBIGRAM
   262  002D26  EE1C F0BC          	lfsr	1,3260
   263  002D2A                     clear_0:
   264  002D2A  6AEE               	clrf	postinc0,c
   265  002D2C  50E5               	movf	postdec1,w,c
   266  002D2E  50E1               	movf	fsr1l,w,c
   267  002D30  E1FC               	bnz	clear_0
   268  002D32  50E2               	movf	fsr1h,w,c
   269  002D34  E1FA               	bnz	clear_0
   270                           
   271                           ; Clear objects allocated to BANK1 (40 bytes)
   272  002D36  EE01  F000         	lfsr	0,__pbssBANK1
   273  002D3A  0E28               	movlw	40
   274  002D3C                     clear_1:
   275  002D3C  6AEE               	clrf	postinc0,c
   276  002D3E  06E8               	decf	wreg,f,c
   277  002D40  E1FD               	bnz	clear_1
   278                           
   279                           ; Clear objects allocated to BANK0 (39 bytes)
   280  002D42  EE00  F0C0         	lfsr	0,__pbssBANK0
   281  002D46  0E27               	movlw	39
   282  002D48                     clear_2:
   283  002D48  6AEE               	clrf	postinc0,c
   284  002D4A  06E8               	decf	wreg,f,c
   285  002D4C  E1FD               	bnz	clear_2
   286                           
   287                           ; Clear objects allocated to COMRAM (2 bytes)
   288  002D4E  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   289  002D50  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   290  002D52                     end_of_initialization:
   291                           	opt callstack 0
   292  002D52                     __end_of__initialization:
   293                           	opt callstack 0
   294  002D52  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   295  002D54  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   296  002D56  0100               	movlb	0
   297  002D58  EF05  F010         	goto	_main	;jump to C main() function
   298                           
   299                           	psect	bssCOMRAM
   300  00005D                     __pbssCOMRAM:
   301                           	opt callstack 0
   302  00005D                     _time_out_dht:
   303                           	opt callstack 0
   304  00005D                     	ds	2
   305                           
   306                           	psect	bssBANK0
   307  0000C0                     __pbssBANK0:
   308                           	opt callstack 0
   309  0000C0                     _timestamp:
   310                           	opt callstack 0
   311  0000C0                     	ds	4
   312  0000C4                     check_button@check_but_state:
   313                           	opt callstack 0
   314  0000C4                     	ds	2
   315  0000C6                     _second_function:
   316                           	opt callstack 0
   317  0000C6                     	ds	2
   318  0000C8                     _first_function:
   319                           	opt callstack 0
   320  0000C8                     	ds	2
   321  0000CA                     _second_state:
   322                           	opt callstack 0
   323  0000CA                     	ds	2
   324  0000CC                     _first_state:
   325                           	opt callstack 0
   326  0000CC                     	ds	2
   327  0000CE                     _no_q:
   328                           	opt callstack 0
   329  0000CE                     	ds	2
   330  0000D0                     _rear:
   331                           	opt callstack 0
   332  0000D0                     	ds	2
   333  0000D2                     _front:
   334                           	opt callstack 0
   335  0000D2                     	ds	2
   336  0000D4                     _function_pushed:
   337                           	opt callstack 0
   338  0000D4                     	ds	2
   339  0000D6                     _state_pushed:
   340                           	opt callstack 0
   341  0000D6                     	ds	2
   342  0000D8                     _turn_fan3:
   343                           	opt callstack 0
   344  0000D8                     	ds	2
   345  0000DA                     _humidity_value:
   346                           	opt callstack 0
   347  0000DA                     	ds	2
   348  0000DC                     _temperature_value:
   349                           	opt callstack 0
   350  0000DC                     	ds	2
   351  0000DE                     _temper:
   352                           	opt callstack 0
   353  0000DE                     	ds	2
   354  0000E0                     _humid:
   355                           	opt callstack 0
   356  0000E0                     	ds	2
   357  0000E2                     _no_funcs:
   358                           	opt callstack 0
   359  0000E2                     	ds	2
   360  0000E4                     _state:
   361                           	opt callstack 0
   362  0000E4                     	ds	1
   363  0000E5                     _FUNCTION:
   364                           	opt callstack 0
   365  0000E5                     	ds	1
   366  0000E6                     _fan3:
   367                           	opt callstack 0
   368  0000E6                     	ds	1
   369                           
   370                           	psect	dataBANK0
   371  0000E7                     __pdataBANK0:
   372                           	opt callstack 0
   373  0000E7                     heater_heatpumper@check_off:
   374                           	opt callstack 0
   375  0000E7                     	ds	2
   376  0000E9                     _time_each_state:
   377                           	opt callstack 0
   378  0000E9                     	ds	2
   379  0000EB                     _head:
   380                           	opt callstack 0
   381  0000EB                     	ds	2
   382  0000ED                     _count:
   383                           	opt callstack 0
   384  0000ED                     	ds	2
   385                           
   386                           	psect	bssBANK1
   387  000100                     __pbssBANK1:
   388                           	opt callstack 0
   389  000100                     _check_index:
   390                           	opt callstack 0
   391  000100                     	ds	40
   392                           
   393                           	psect	bssBIGRAM
   394  000128                     __pbssBIGRAM:
   395                           	opt callstack 0
   396  000128                     _queue:
   397                           	opt callstack 0
   398  000128                     	ds	3000
   399  000CE0                     _array:
   400                           	opt callstack 0
   401  000CE0                     	ds	260
   402                           
   403                           	psect	cstackBANK0
   404  000060                     __pcstackBANK0:
   405                           	opt callstack 0
   406  000060                     ??_INTERRUPT_InterruptManager:
   407                           
   408                           ; 1 bytes @ 0x0
   409  000060                     	ds	8
   410  000068                     ??_getByte:
   411  000068                     ?_return_index:
   412                           	opt callstack 0
   413  000068                     ?___wmul:
   414                           	opt callstack 0
   415  000068                     ?___awdiv:
   416                           	opt callstack 0
   417  000068                     ?___awmod:
   418                           	opt callstack 0
   419  000068                     ?_create_node:
   420                           	opt callstack 0
   421  000068                     SendByteBBSPI@output:
   422                           	opt callstack 0
   423  000068                     ___wmul@multiplier:
   424                           	opt callstack 0
   425  000068                     ___awdiv@dividend:
   426                           	opt callstack 0
   427  000068                     ___awmod@dividend:
   428                           	opt callstack 0
   429  000068                     create_node@delay:
   430                           	opt callstack 0
   431                           
   432                           ; 4 bytes @ 0x8
   433  000068                     	ds	1
   434  000069                     SendByteBBSPI@bitcount:
   435                           	opt callstack 0
   436                           
   437                           ; 1 bytes @ 0x9
   438  000069                     	ds	1
   439  00006A                     SendByteBBSPI@input:
   440                           	opt callstack 0
   441  00006A                     getByte@i:
   442                           	opt callstack 0
   443  00006A                     ___wmul@multiplicand:
   444                           	opt callstack 0
   445  00006A                     ___awdiv@divisor:
   446                           	opt callstack 0
   447  00006A                     ___awmod@divisor:
   448                           	opt callstack 0
   449                           
   450                           ; 2 bytes @ 0xA
   451  00006A                     	ds	1
   452  00006B                     Port_BBSPIInit@port_dir:
   453                           	opt callstack 0
   454  00006B                     WritePort_BBSPI@a:
   455                           	opt callstack 0
   456  00006B                     getByte@j:
   457                           	opt callstack 0
   458                           
   459                           ; 1 bytes @ 0xB
   460  00006B                     	ds	1
   461  00006C                     ??_readDHT:
   462  00006C                     WritePort_BBSPI@port_add:
   463                           	opt callstack 0
   464  00006C                     ___awdiv@counter:
   465                           	opt callstack 0
   466  00006C                     ___awmod@counter:
   467                           	opt callstack 0
   468  00006C                     return_index@i:
   469                           	opt callstack 0
   470  00006C                     ___wmul@product:
   471                           	opt callstack 0
   472  00006C                     create_node@period:
   473                           	opt callstack 0
   474                           
   475                           ; 4 bytes @ 0xC
   476  00006C                     	ds	1
   477  00006D                     ??_LCDPutInst:
   478  00006D                     ??_LCDPutChar:
   479  00006D                     ___awdiv@sign:
   480                           	opt callstack 0
   481  00006D                     ___awmod@sign:
   482                           	opt callstack 0
   483                           
   484                           ; 1 bytes @ 0xD
   485  00006D                     	ds	1
   486  00006E                     LCDPutChar@ch:
   487                           	opt callstack 0
   488  00006E                     LCDPutInst@ch:
   489                           	opt callstack 0
   490  00006E                     readDHT@check_sum:
   491                           	opt callstack 0
   492  00006E                     LINKED_LIST_INITIALIZATION@i:
   493                           	opt callstack 0
   494  00006E                     init_queue@i:
   495                           	opt callstack 0
   496  00006E                     ___awdiv@quotient:
   497                           	opt callstack 0
   498  00006E                     add@temp:
   499                           	opt callstack 0
   500                           
   501                           ; 13 bytes @ 0xE
   502  00006E                     	ds	1
   503  00006F                     ??_LCDInit:
   504  00006F                     readDHT@temp:
   505                           	opt callstack 0
   506  00006F                     LCDPutStr@ptr:
   507                           	opt callstack 0
   508                           
   509                           ; 2 bytes @ 0xF
   510  00006F                     	ds	1
   511  000070                     ?_dequeue:
   512                           	opt callstack 0
   513  000070                     printLCD_char@line:
   514                           	opt callstack 0
   515  000070                     create_node@function:
   516                           	opt callstack 0
   517                           
   518                           ; 3 bytes @ 0x10
   519  000070                     	ds	1
   520  000071                     printLCD_string@line:
   521                           	opt callstack 0
   522                           
   523                           ; 2 bytes @ 0x11
   524  000071                     	ds	1
   525  000072                     printLCD_char@position:
   526                           	opt callstack 0
   527                           
   528                           ; 1 bytes @ 0x12
   529  000072                     	ds	1
   530  000073                     printLCD_char@c:
   531                           	opt callstack 0
   532  000073                     printLCD_string@array:
   533                           	opt callstack 0
   534  000073                     dequeue@temp:
   535                           	opt callstack 0
   536                           
   537                           ; 3 bytes @ 0x13
   538  000073                     	ds	1
   539  000074                     
   540                           ; 1 bytes @ 0x14
   541  000074                     	ds	1
   542  000075                     create_node@temp:
   543                           	opt callstack 0
   544                           
   545                           ; 13 bytes @ 0x15
   546  000075                     	ds	6
   547  00007B                     add@index:
   548                           	opt callstack 0
   549                           
   550                           ; 2 bytes @ 0x1B
   551  00007B                     	ds	2
   552  00007D                     
   553                           ; 1 bytes @ 0x1D
   554  00007D                     	ds	5
   555  000082                     ?_ADD_NODE:
   556                           	opt callstack 0
   557  000082                     ADD_NODE@delay:
   558                           	opt callstack 0
   559                           
   560                           ; 4 bytes @ 0x22
   561  000082                     	ds	4
   562  000086                     ADD_NODE@period:
   563                           	opt callstack 0
   564                           
   565                           ; 4 bytes @ 0x26
   566  000086                     	ds	4
   567  00008A                     ADD_NODE@function:
   568                           	opt callstack 0
   569                           
   570                           ; 3 bytes @ 0x2A
   571  00008A                     	ds	3
   572  00008D                     ??_ADD_NODE:
   573                           
   574                           ; 1 bytes @ 0x2D
   575  00008D                     	ds	12
   576  000099                     ADD_NODE@loop:
   577                           	opt callstack 0
   578                           
   579                           ; 2 bytes @ 0x39
   580  000099                     	ds	2
   581  00009B                     ADD_NODE@next:
   582                           	opt callstack 0
   583                           
   584                           ; 2 bytes @ 0x3B
   585  00009B                     	ds	2
   586  00009D                     ADD_NODE@pre:
   587                           	opt callstack 0
   588                           
   589                           ; 2 bytes @ 0x3D
   590  00009D                     	ds	2
   591  00009F                     ADD_NODE@temp:
   592                           	opt callstack 0
   593                           
   594                           ; 13 bytes @ 0x3F
   595  00009F                     	ds	13
   596  0000AC                     ADD_NODE@loc:
   597                           	opt callstack 0
   598                           
   599                           ; 2 bytes @ 0x4C
   600  0000AC                     	ds	2
   601  0000AE                     ADD_NODE@index:
   602                           	opt callstack 0
   603                           
   604                           ; 2 bytes @ 0x4E
   605  0000AE                     	ds	2
   606  0000B0                     register_timer@delay:
   607                           	opt callstack 0
   608                           
   609                           ; 4 bytes @ 0x50
   610  0000B0                     	ds	4
   611  0000B4                     register_timer@period:
   612                           	opt callstack 0
   613                           
   614                           ; 4 bytes @ 0x54
   615  0000B4                     	ds	4
   616  0000B8                     register_timer@function:
   617                           	opt callstack 0
   618                           
   619                           ; 3 bytes @ 0x58
   620  0000B8                     	ds	3
   621  0000BB                     
   622                           ; 1 bytes @ 0x5B
   623  0000BB                     	ds	2
   624  0000BD                     main@function:
   625                           	opt callstack 0
   626                           
   627                           ; 3 bytes @ 0x5D
   628  0000BD                     	ds	3
   629                           
   630                           	psect	cstackCOMRAM
   631  000001                     __pcstackCOMRAM:
   632                           	opt callstack 0
   633  000001                     ??_read_button:
   634  000001                     ?i2_return_index:
   635                           	opt callstack 0
   636  000001                     ?i2___wmul:
   637                           	opt callstack 0
   638  000001                     ?i2___awmod:
   639                           	opt callstack 0
   640  000001                     ?i2_create_node:
   641                           	opt callstack 0
   642  000001                     i2___wmul@multiplier:
   643                           	opt callstack 0
   644  000001                     i2___awmod@dividend:
   645                           	opt callstack 0
   646  000001                     i2create_node@delay:
   647                           	opt callstack 0
   648                           
   649                           ; 4 bytes @ 0x0
   650  000001                     	ds	2
   651  000003                     i2___wmul@multiplicand:
   652                           	opt callstack 0
   653  000003                     i2___awmod@divisor:
   654                           	opt callstack 0
   655                           
   656                           ; 2 bytes @ 0x2
   657  000003                     	ds	2
   658  000005                     i2___awmod@counter:
   659                           	opt callstack 0
   660  000005                     i2return_index@i:
   661                           	opt callstack 0
   662  000005                     i2___wmul@product:
   663                           	opt callstack 0
   664  000005                     i2create_node@period:
   665                           	opt callstack 0
   666                           
   667                           ; 4 bytes @ 0x4
   668  000005                     	ds	1
   669  000006                     i2___awmod@sign:
   670                           	opt callstack 0
   671                           
   672                           ; 1 bytes @ 0x5
   673  000006                     	ds	1
   674  000007                     clean_node@index:
   675                           	opt callstack 0
   676  000007                     enqueue@function:
   677                           	opt callstack 0
   678  000007                     i2add@temp:
   679                           	opt callstack 0
   680                           
   681                           ; 13 bytes @ 0x6
   682  000007                     	ds	2
   683  000009                     i2create_node@function:
   684                           	opt callstack 0
   685                           
   686                           ; 3 bytes @ 0x8
   687  000009                     	ds	1
   688  00000A                     
   689                           ; 1 bytes @ 0x9
   690  00000A                     	ds	4
   691  00000E                     i2create_node@temp:
   692                           	opt callstack 0
   693                           
   694                           ; 13 bytes @ 0xD
   695  00000E                     	ds	6
   696  000014                     i2add@index:
   697                           	opt callstack 0
   698                           
   699                           ; 2 bytes @ 0x13
   700  000014                     	ds	2
   701  000016                     
   702                           ; 1 bytes @ 0x15
   703  000016                     	ds	5
   704  00001B                     i2ADD_NODE@delay:
   705                           	opt callstack 0
   706                           
   707                           ; 4 bytes @ 0x1A
   708  00001B                     	ds	4
   709  00001F                     i2ADD_NODE@period:
   710                           	opt callstack 0
   711                           
   712                           ; 4 bytes @ 0x1E
   713  00001F                     	ds	4
   714  000023                     i2ADD_NODE@function:
   715                           	opt callstack 0
   716                           
   717                           ; 3 bytes @ 0x22
   718  000023                     	ds	3
   719  000026                     ??i2_ADD_NODE:
   720                           
   721                           ; 1 bytes @ 0x25
   722  000026                     	ds	12
   723  000032                     i2ADD_NODE@loop:
   724                           	opt callstack 0
   725                           
   726                           ; 2 bytes @ 0x31
   727  000032                     	ds	2
   728  000034                     i2ADD_NODE@next:
   729                           	opt callstack 0
   730                           
   731                           ; 2 bytes @ 0x33
   732  000034                     	ds	2
   733  000036                     i2ADD_NODE@pre:
   734                           	opt callstack 0
   735                           
   736                           ; 2 bytes @ 0x35
   737  000036                     	ds	2
   738  000038                     i2ADD_NODE@temp:
   739                           	opt callstack 0
   740                           
   741                           ; 13 bytes @ 0x37
   742  000038                     	ds	13
   743  000045                     i2ADD_NODE@loc:
   744                           	opt callstack 0
   745                           
   746                           ; 2 bytes @ 0x44
   747  000045                     	ds	2
   748  000047                     i2ADD_NODE@index:
   749                           	opt callstack 0
   750                           
   751                           ; 2 bytes @ 0x46
   752  000047                     	ds	2
   753  000049                     ??_UPDATE_TIMER:
   754                           
   755                           ; 1 bytes @ 0x48
   756  000049                     	ds	4
   757  00004D                     UPDATE_TIMER@delay:
   758                           	opt callstack 0
   759                           
   760                           ; 4 bytes @ 0x4C
   761  00004D                     	ds	4
   762  000051                     UPDATE_TIMER@period:
   763                           	opt callstack 0
   764                           
   765                           ; 4 bytes @ 0x50
   766  000051                     	ds	4
   767  000055                     UPDATE_TIMER@function:
   768                           	opt callstack 0
   769                           
   770                           ; 3 bytes @ 0x54
   771  000055                     	ds	3
   772  000058                     _UPDATE_TIMER$2244:
   773                           	opt callstack 0
   774                           
   775                           ; 3 bytes @ 0x57
   776  000058                     	ds	3
   777  00005B                     UPDATE_TIMER@temp_head:
   778                           	opt callstack 0
   779                           
   780                           ; 2 bytes @ 0x5A
   781  00005B                     	ds	2
   782  00005D                     
   783                           ; 1 bytes @ 0x5C
   784 ;;
   785 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   786 ;;
   787 ;; *************** function _main *****************
   788 ;; Defined at:
   789 ;;		line 129 in file "main.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;  function        3   93[BANK0 ] PTR FTN()void 
   794 ;;		 -> get_temp_humid(1), check_button(1), heater_heatpumper(1), NULL(0), 
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      void 
   797 ;; Registers used:
   798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   805 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   807 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   808 ;;Total ram usage:        3 bytes
   809 ;; Hardware stack levels required when called:   12
   810 ;; This function calls:
   811 ;;		_LINKED_LIST_INITIALIZATION
   812 ;;		_SYSTEM_INITIALIZATION
   813 ;;		_check_button
   814 ;;		_dequeue
   815 ;;		_get_temp_humid
   816 ;;		_heater_heatpumper
   817 ;;		_register_timer
   818 ;;		_start_timers
   819 ;; This function is called by:
   820 ;;		Startup code after reset
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text0
   825  00200A                     __ptext0:
   826                           	opt callstack 0
   827  00200A                     _main:
   828                           	opt callstack 19
   829  00200A                     
   830                           ;main.c: 131:     LINKED_LIST_INITIALIZATION();
   831  00200A  EC7E  F010         	call	_LINKED_LIST_INITIALIZATION	;wreg free
   832  00200E                     
   833                           ;main.c: 132:     SYSTEM_INITIALIZATION();
   834  00200E  EC63  F017         	call	_SYSTEM_INITIALIZATION	;wreg free
   835  002012                     
   836                           ;main.c: 133:     register_timer(0 , 500 , check_button);
   837  002012  0E00               	movlw	0
   838  002014  0100               	movlb	0	; () banked
   839  002016  6FB0               	movwf	register_timer@delay& (0+255),b
   840  002018  0E00               	movlw	0
   841  00201A  6FB1               	movwf	(register_timer@delay+1)& (0+255),b
   842  00201C  0E00               	movlw	0
   843  00201E  6FB2               	movwf	(register_timer@delay+2)& (0+255),b
   844  002020  0E00               	movlw	0
   845  002022  6FB3               	movwf	(register_timer@delay+3)& (0+255),b
   846  002024  0EF4               	movlw	244
   847  002026  6FB4               	movwf	register_timer@period& (0+255),b
   848  002028  0E01               	movlw	1
   849  00202A  6FB5               	movwf	(register_timer@period+1)& (0+255),b
   850  00202C  0E00               	movlw	0
   851  00202E  6FB6               	movwf	(register_timer@period+2)& (0+255),b
   852  002030  0E00               	movlw	0
   853  002032  6FB7               	movwf	(register_timer@period+3)& (0+255),b
   854  002034  0E5A               	movlw	low _check_button
   855  002036  6FB8               	movwf	register_timer@function& (0+255),b
   856  002038  0E28               	movlw	high _check_button
   857  00203A  6FB9               	movwf	(register_timer@function+1)& (0+255),b
   858  00203C  0E00               	movlw	low (_check_button shr (0+16))
   859  00203E  6FBA               	movwf	(register_timer@function+2)& (0+255),b
   860  002040  ECBC  F017         	call	_register_timer	;wreg free
   861  002044                     
   862                           ;main.c: 134:     register_timer(1000 , 500 , heater_heatpumper);
   863  002044  0EE8               	movlw	232
   864  002046  0100               	movlb	0	; () banked
   865  002048  6FB0               	movwf	register_timer@delay& (0+255),b
   866  00204A  0E03               	movlw	3
   867  00204C  6FB1               	movwf	(register_timer@delay+1)& (0+255),b
   868  00204E  0E00               	movlw	0
   869  002050  6FB2               	movwf	(register_timer@delay+2)& (0+255),b
   870  002052  0E00               	movlw	0
   871  002054  6FB3               	movwf	(register_timer@delay+3)& (0+255),b
   872  002056  0EF4               	movlw	244
   873  002058  6FB4               	movwf	register_timer@period& (0+255),b
   874  00205A  0E01               	movlw	1
   875  00205C  6FB5               	movwf	(register_timer@period+1)& (0+255),b
   876  00205E  0E00               	movlw	0
   877  002060  6FB6               	movwf	(register_timer@period+2)& (0+255),b
   878  002062  0E00               	movlw	0
   879  002064  6FB7               	movwf	(register_timer@period+3)& (0+255),b
   880  002066  0E4E               	movlw	low _heater_heatpumper
   881  002068  6FB8               	movwf	register_timer@function& (0+255),b
   882  00206A  0E19               	movlw	high _heater_heatpumper
   883  00206C  6FB9               	movwf	(register_timer@function+1)& (0+255),b
   884  00206E  0E00               	movlw	low (_heater_heatpumper shr (0+16))
   885  002070  6FBA               	movwf	(register_timer@function+2)& (0+255),b
   886  002072  ECBC  F017         	call	_register_timer	;wreg free
   887  002076                     
   888                           ;main.c: 135:     register_timer(1000 , 1000 , get_temp_humid);
   889  002076  0EE8               	movlw	232
   890  002078  0100               	movlb	0	; () banked
   891  00207A  6FB0               	movwf	register_timer@delay& (0+255),b
   892  00207C  0E03               	movlw	3
   893  00207E  6FB1               	movwf	(register_timer@delay+1)& (0+255),b
   894  002080  0E00               	movlw	0
   895  002082  6FB2               	movwf	(register_timer@delay+2)& (0+255),b
   896  002084  0E00               	movlw	0
   897  002086  6FB3               	movwf	(register_timer@delay+3)& (0+255),b
   898  002088  0EE8               	movlw	232
   899  00208A  6FB4               	movwf	register_timer@period& (0+255),b
   900  00208C  0E03               	movlw	3
   901  00208E  6FB5               	movwf	(register_timer@period+1)& (0+255),b
   902  002090  0E00               	movlw	0
   903  002092  6FB6               	movwf	(register_timer@period+2)& (0+255),b
   904  002094  0E00               	movlw	0
   905  002096  6FB7               	movwf	(register_timer@period+3)& (0+255),b
   906  002098  0EBE               	movlw	low _get_temp_humid
   907  00209A  6FB8               	movwf	register_timer@function& (0+255),b
   908  00209C  0E27               	movlw	high _get_temp_humid
   909  00209E  6FB9               	movwf	(register_timer@function+1)& (0+255),b
   910  0020A0  0E00               	movlw	low (_get_temp_humid shr (0+16))
   911  0020A2  6FBA               	movwf	(register_timer@function+2)& (0+255),b
   912  0020A4  ECBC  F017         	call	_register_timer	;wreg free
   913  0020A8                     
   914                           ;main.c: 137:     start_timers();
   915  0020A8  EC3E  F018         	call	_start_timers	;wreg free
   916  0020AC                     l3106:
   917                           
   918                           ;main.c: 139:         if (no_q>0)
   919  0020AC  0100               	movlb	0	; () banked
   920  0020AE  BFCF               	btfsc	(_no_q+1)& (0+255),7,b
   921  0020B0  EF62  F010         	goto	u2331
   922  0020B4  51CF               	movf	(_no_q+1)& (0+255),w,b
   923  0020B6  E108               	bnz	u2330
   924  0020B8  05CE               	decf	_no_q& (0+255),w,b
   925  0020BA  A0D8               	btfss	status,0,c
   926  0020BC  EF62  F010         	goto	u2331
   927  0020C0  EF64  F010         	goto	u2330
   928  0020C4                     u2331:
   929  0020C4  EF56  F010         	goto	l3106
   930  0020C8                     u2330:
   931  0020C8                     
   932                           ; BSR set to: 0
   933                           ;main.c: 140:         {;main.c: 141:             FUNCTION_PTR function = dequeue();
   934  0020C8  ECB8  F014         	call	_dequeue	;wreg free
   935  0020CC  C070  F0BD         	movff	?_dequeue,main@function
   936  0020D0  C071  F0BE         	movff	?_dequeue+1,main@function+1
   937  0020D4  C072  F0BF         	movff	?_dequeue+2,main@function+2
   938  0020D8                     
   939                           ;main.c: 142:             (function)();
   940  0020D8  D802               	call	u2348
   941  0020DA  EF7A  F010         	goto	u2349
   942  0020DE                     u2348:
   943  0020DE  0005               	push	
   944  0020E0  6EFA               	movwf	pclath,c
   945  0020E2  0100               	movlb	0	; () banked
   946  0020E4  51BD               	movf	main@function& (0+255),w,b
   947  0020E6  6EFD               	movwf	tosl,c
   948  0020E8  51BE               	movf	(main@function+1)& (0+255),w,b
   949  0020EA  6EFE               	movwf	tosh,c
   950  0020EC  51BF               	movf	(main@function+2)& (0+255),w,b
   951  0020EE  6EFF               	movwf	tosu,c
   952  0020F0  50FA               	movf	pclath,w,c
   953  0020F2  0012               	return		;indir
   954  0020F4                     u2349:
   955  0020F4  EF56  F010         	goto	l3106
   956  0020F8  EF07  F000         	goto	start
   957  0020FC                     __end_of_main:
   958                           	opt callstack 0
   959                           
   960 ;; *************** function _start_timers *****************
   961 ;; Defined at:
   962 ;;		line 5 in file "clock.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;		None
   965 ;; Auto vars:     Size  Location     Type
   966 ;;		None
   967 ;; Return value:  Size  Location     Type
   968 ;;                  2  124[None  ] int 
   969 ;; Registers used:
   970 ;;		None
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   980 ;;Total ram usage:        0 bytes
   981 ;; Hardware stack levels used:    1
   982 ;; Hardware stack levels required when called:    6
   983 ;; This function calls:
   984 ;;		Nothing
   985 ;; This function is called by:
   986 ;;		_main
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text1
   991  00307C                     __ptext1:
   992                           	opt callstack 0
   993  00307C                     _start_timers:
   994                           	opt callstack 24
   995  00307C                     
   996                           ;clock.c: 7:     INTCONbits.TMR0IE = 1;
   997  00307C  8AF2               	bsf	242,5,c	;volatile
   998  00307E  0012               	return		;funcret
   999  003080                     __end_of_start_timers:
  1000                           	opt callstack 0
  1001                           
  1002 ;; *************** function _register_timer *****************
  1003 ;; Defined at:
  1004 ;;		line 24 in file "clock.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;  delay           4   80[BANK0 ] long 
  1007 ;;  period          4   84[BANK0 ] long 
  1008 ;;  function        3   88[BANK0 ] PTR FTN()void 
  1009 ;;		 -> get_temp_humid(1), check_button(1), heater_heatpumper(1), 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  timer_id        2    0        int 
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  2   80[BANK0 ] int 
  1014 ;; Registers used:
  1015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1021 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1022 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1024 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1025 ;;Total ram usage:       13 bytes
  1026 ;; Hardware stack levels used:    1
  1027 ;; Hardware stack levels required when called:    9
  1028 ;; This function calls:
  1029 ;;		_ADD_NODE
  1030 ;; This function is called by:
  1031 ;;		_main
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           	psect	text2
  1036  002F78                     __ptext2:
  1037                           	opt callstack 0
  1038  002F78                     _register_timer:
  1039                           	opt callstack 21
  1040  002F78  C0B0  F082         	movff	register_timer@delay,ADD_NODE@delay
  1041  002F7C  C0B1  F083         	movff	register_timer@delay+1,ADD_NODE@delay+1
  1042  002F80  C0B2  F084         	movff	register_timer@delay+2,ADD_NODE@delay+2
  1043  002F84  C0B3  F085         	movff	register_timer@delay+3,ADD_NODE@delay+3
  1044  002F88  C0B4  F086         	movff	register_timer@period,ADD_NODE@period
  1045  002F8C  C0B5  F087         	movff	register_timer@period+1,ADD_NODE@period+1
  1046  002F90  C0B6  F088         	movff	register_timer@period+2,ADD_NODE@period+2
  1047  002F94  C0B7  F089         	movff	register_timer@period+3,ADD_NODE@period+3
  1048  002F98  C0B8  F08A         	movff	register_timer@function,ADD_NODE@function
  1049  002F9C  C0B9  F08B         	movff	register_timer@function+1,ADD_NODE@function+1
  1050  002FA0  C0BA  F08C         	movff	register_timer@function+2,ADD_NODE@function+2
  1051  002FA4  EC2A  F008         	call	_ADD_NODE	;wreg free
  1052  002FA8  0012               	return		;funcret
  1053  002FAA                     __end_of_register_timer:
  1054                           	opt callstack 0
  1055                           
  1056 ;; *************** function _ADD_NODE *****************
  1057 ;; Defined at:
  1058 ;;		line 15 in file "linked_list.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  delay           4   34[BANK0 ] long 
  1061 ;;  period          4   38[BANK0 ] long 
  1062 ;;  function        3   42[BANK0 ] PTR FTN()void 
  1063 ;;		 -> get_temp_humid(1), check_button(1), heater_heatpumper(1), NULL(0), 
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  next            2   59[BANK0 ] int 
  1066 ;;  loc             2   76[BANK0 ] int 
  1067 ;;  pre             2   61[BANK0 ] int 
  1068 ;;  loop            2   57[BANK0 ] int 
  1069 ;;  temp           13   63[BANK0 ] struct Node
  1070 ;;  index           2   78[BANK0 ] int 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  2   34[BANK0 ] int 
  1073 ;; Registers used:
  1074 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1080 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1082 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1083 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1084 ;;Total ram usage:       46 bytes
  1085 ;; Hardware stack levels used:    1
  1086 ;; Hardware stack levels required when called:    8
  1087 ;; This function calls:
  1088 ;;		___wmul
  1089 ;;		_add
  1090 ;;		_create_node
  1091 ;;		_return_index
  1092 ;; This function is called by:
  1093 ;;		_register_timer
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           	psect	text3
  1098  001054                     __ptext3:
  1099                           	opt callstack 0
  1100  001054                     _ADD_NODE:
  1101                           	opt callstack 21
  1102  001054                     
  1103                           ;linked_list.c: 15: int ADD_NODE(timestamp_t delay , timestamp_t period , FUNCTION_PTR f
      +                          unction );linked_list.c: 16: {;linked_list.c: 17:     struct Node temp = create_node(del
      +                          ay , period , function);
  1104  001054  C082  F068         	movff	ADD_NODE@delay,create_node@delay
  1105  001058  C083  F069         	movff	ADD_NODE@delay+1,create_node@delay+1
  1106  00105C  C084  F06A         	movff	ADD_NODE@delay+2,create_node@delay+2
  1107  001060  C085  F06B         	movff	ADD_NODE@delay+3,create_node@delay+3
  1108  001064  C086  F06C         	movff	ADD_NODE@period,create_node@period
  1109  001068  C087  F06D         	movff	ADD_NODE@period+1,create_node@period+1
  1110  00106C  C088  F06E         	movff	ADD_NODE@period+2,create_node@period+2
  1111  001070  C089  F06F         	movff	ADD_NODE@period+3,create_node@period+3
  1112  001074  C08A  F070         	movff	ADD_NODE@function,create_node@function
  1113  001078  C08B  F071         	movff	ADD_NODE@function+1,create_node@function+1
  1114  00107C  C08C  F072         	movff	ADD_NODE@function+2,create_node@function+2
  1115  001080  ECFE  F016         	call	_create_node	;wreg free
  1116  001084  EE20  F09F         	lfsr	2,ADD_NODE@temp
  1117  001088  0E0C               	movlw	12
  1118  00108A                     u1741:
  1119  00108A  CFEB FFDB          	movff	plusw0,plusw2
  1120  00108E  06E8               	decf	wreg,f,c
  1121  001090  E2FC               	bc	u1741
  1122  001092                     
  1123                           ;linked_list.c: 18:     int index = return_index();
  1124  001092  ECF9  F014         	call	_return_index	;wreg free
  1125  001096  C068  F0AE         	movff	?_return_index,ADD_NODE@index
  1126  00109A  C069  F0AF         	movff	?_return_index+1,ADD_NODE@index+1
  1127  00109E                     
  1128                           ;linked_list.c: 19:     if (index != -1)
  1129  00109E  0100               	movlb	0	; () banked
  1130  0010A0  29AE               	incf	ADD_NODE@index& (0+255),w,b
  1131  0010A2  E108               	bnz	u1750
  1132  0010A4  29AF               	incf	(ADD_NODE@index+1)& (0+255),w,b
  1133  0010A6  B4D8               	btfsc	status,2,c
  1134  0010A8  EF58  F008         	goto	u1751
  1135  0010AC  EF5A  F008         	goto	u1750
  1136  0010B0                     u1751:
  1137  0010B0  EF71  F00A         	goto	l288
  1138  0010B4                     u1750:
  1139  0010B4                     
  1140                           ; BSR set to: 0
  1141                           ;linked_list.c: 20:     {;linked_list.c: 21:         if (head == -1)
  1142  0010B4  29EB               	incf	_head& (0+255),w,b
  1143  0010B6  E106               	bnz	u1761
  1144  0010B8  29EC               	incf	(_head+1)& (0+255),w,b
  1145  0010BA  A4D8               	btfss	status,2,c
  1146  0010BC  EF62  F008         	goto	u1761
  1147  0010C0  EF64  F008         	goto	u1760
  1148  0010C4                     u1761:
  1149  0010C4  EF7D  F008         	goto	l289
  1150  0010C8                     u1760:
  1151  0010C8                     
  1152                           ; BSR set to: 0
  1153                           ;linked_list.c: 22:         {;linked_list.c: 23:             head =index;
  1154  0010C8  C0AE  F0EB         	movff	ADD_NODE@index,_head
  1155  0010CC  C0AF  F0EC         	movff	ADD_NODE@index+1,_head+1
  1156  0010D0                     
  1157                           ; BSR set to: 0
  1158                           ;linked_list.c: 24:             add(temp , head);
  1159  0010D0  EE20  F09F         	lfsr	2,ADD_NODE@temp
  1160  0010D4  EE00  F06E         	lfsr	0,add@temp
  1161  0010D8  0E0C               	movlw	12
  1162  0010DA                     u1771:
  1163  0010DA  CFDB FFEB          	movff	plusw2,plusw0
  1164  0010DE  06E8               	decf	wreg,f,c
  1165  0010E0  E2FC               	bc	u1771
  1166  0010E2  C0EB  F07B         	movff	_head,add@index
  1167  0010E6  C0EC  F07C         	movff	_head+1,add@index+1
  1168  0010EA  ECF0  F010         	call	_add	;wreg free
  1169  0010EE                     l2702:
  1170                           
  1171                           ;linked_list.c: 25:             return index;
  1172  0010EE  C0AE  F082         	movff	ADD_NODE@index,?_ADD_NODE
  1173  0010F2  C0AF  F083         	movff	ADD_NODE@index+1,?_ADD_NODE+1
  1174  0010F6  EF73  F00A         	goto	l290
  1175  0010FA                     l289:
  1176                           
  1177                           ; BSR set to: 0
  1178                           ;linked_list.c: 28:         {;linked_list.c: 29:             int loc = head;
  1179  0010FA  C0EB  F0AC         	movff	_head,ADD_NODE@loc
  1180  0010FE  C0EC  F0AD         	movff	_head+1,ADD_NODE@loc+1
  1181                           
  1182                           ;linked_list.c: 30:             int pre = head;
  1183  001102  C0EB  F09D         	movff	_head,ADD_NODE@pre
  1184  001106  C0EC  F09E         	movff	_head+1,ADD_NODE@pre+1
  1185  00110A                     
  1186                           ; BSR set to: 0
  1187                           ;linked_list.c: 31:             int loop = 1;
  1188  00110A  0E00               	movlw	0
  1189  00110C  6F9A               	movwf	(ADD_NODE@loop+1)& (0+255),b
  1190  00110E  0E01               	movlw	1
  1191  001110  6F99               	movwf	ADD_NODE@loop& (0+255),b
  1192                           
  1193                           ;linked_list.c: 32:             while (loop<no_funcs && temp.delay >= array[loc].delay)
  1194  001112  EFCB  F008         	goto	l2716
  1195  001116                     l293:
  1196                           
  1197                           ; BSR set to: 0
  1198                           ;linked_list.c: 33:             {;linked_list.c: 34:                 pre = loc;
  1199  001116  C0AC  F09D         	movff	ADD_NODE@loc,ADD_NODE@pre
  1200  00111A  C0AD  F09E         	movff	ADD_NODE@loc+1,ADD_NODE@pre+1
  1201  00111E                     
  1202                           ; BSR set to: 0
  1203                           ;linked_list.c: 35:                 loc = array[loc].next;
  1204  00111E  C0AC  F068         	movff	ADD_NODE@loc,___wmul@multiplier
  1205  001122  C0AD  F069         	movff	ADD_NODE@loc+1,___wmul@multiplier+1
  1206  001126  0E00               	movlw	0
  1207  001128  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1208  00112A  0E0D               	movlw	13
  1209  00112C  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1210  00112E  ECD5  F017         	call	___wmul	;wreg free
  1211  001132  0EE0               	movlw	low _array
  1212  001134  0100               	movlb	0	; () banked
  1213  001136  2568               	addwf	?___wmul& (0+255),w,b
  1214  001138  6ED9               	movwf	fsr2l,c
  1215  00113A  0E0C               	movlw	high _array
  1216  00113C  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1217  00113E  6EDA               	movwf	fsr2h,c
  1218  001140  CFDE F0AC          	movff	postinc2,ADD_NODE@loc
  1219  001144  CFDD F0AD          	movff	postdec2,ADD_NODE@loc+1
  1220  001148                     
  1221                           ; BSR set to: 0
  1222                           ;linked_list.c: 36:                 loop ++;
  1223  001148  4B99               	infsnz	ADD_NODE@loop& (0+255),f,b
  1224  00114A  2B9A               	incf	(ADD_NODE@loop+1)& (0+255),f,b
  1225  00114C                     
  1226                           ; BSR set to: 0
  1227                           ;linked_list.c: 37:                 temp.delay = temp.delay - array[pre].delay;
  1228  00114C  C09D  F068         	movff	ADD_NODE@pre,___wmul@multiplier
  1229  001150  C09E  F069         	movff	ADD_NODE@pre+1,___wmul@multiplier+1
  1230  001154  0E00               	movlw	0
  1231  001156  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1232  001158  0E0D               	movlw	13
  1233  00115A  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1234  00115C  ECD5  F017         	call	___wmul	;wreg free
  1235  001160  0EE2               	movlw	low (_array+2)
  1236  001162  0100               	movlb	0	; () banked
  1237  001164  2568               	addwf	?___wmul& (0+255),w,b
  1238  001166  6ED9               	movwf	fsr2l,c
  1239  001168  0E0C               	movlw	high (_array+2)
  1240  00116A  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1241  00116C  6EDA               	movwf	fsr2h,c
  1242  00116E  CFDE F08D          	movff	postinc2,??_ADD_NODE
  1243  001172  CFDE F08E          	movff	postinc2,??_ADD_NODE+1
  1244  001176  CFDE F08F          	movff	postinc2,??_ADD_NODE+2
  1245  00117A  CFDE F090          	movff	postinc2,??_ADD_NODE+3
  1246  00117E  518D               	movf	??_ADD_NODE& (0+255),w,b
  1247  001180  5DA1               	subwf	(ADD_NODE@temp+2)& (0+255),w,b
  1248  001182  6FA1               	movwf	(ADD_NODE@temp+2)& (0+255),b
  1249  001184  518E               	movf	(??_ADD_NODE+1)& (0+255),w,b
  1250  001186  59A2               	subwfb	(ADD_NODE@temp+3)& (0+255),w,b
  1251  001188  6FA2               	movwf	(ADD_NODE@temp+3)& (0+255),b
  1252  00118A  518F               	movf	(??_ADD_NODE+2)& (0+255),w,b
  1253  00118C  59A3               	subwfb	(ADD_NODE@temp+4)& (0+255),w,b
  1254  00118E  6FA3               	movwf	(ADD_NODE@temp+4)& (0+255),b
  1255  001190  5190               	movf	(??_ADD_NODE+3)& (0+255),w,b
  1256  001192  59A4               	subwfb	(ADD_NODE@temp+5)& (0+255),w,b
  1257  001194  6FA4               	movwf	(ADD_NODE@temp+5)& (0+255),b
  1258  001196                     l2716:
  1259                           
  1260                           ; BSR set to: 0
  1261                           ;linked_list.c: 32:             while (loop<no_funcs && temp.delay >= array[loc].delay)
  1262  001196  51E2               	movf	_no_funcs& (0+255),w,b
  1263  001198  5D99               	subwf	ADD_NODE@loop& (0+255),w,b
  1264  00119A  519A               	movf	(ADD_NODE@loop+1)& (0+255),w,b
  1265  00119C  0A80               	xorlw	128
  1266  00119E  6F8D               	movwf	??_ADD_NODE& (0+255),b
  1267  0011A0  51E3               	movf	(_no_funcs+1)& (0+255),w,b
  1268  0011A2  0A80               	xorlw	128
  1269  0011A4  598D               	subwfb	??_ADD_NODE& (0+255),w,b
  1270  0011A6  B0D8               	btfsc	status,0,c
  1271  0011A8  EFD8  F008         	goto	u1781
  1272  0011AC  EFDA  F008         	goto	u1780
  1273  0011B0                     u1781:
  1274  0011B0  EFFE  F008         	goto	l2720
  1275  0011B4                     u1780:
  1276  0011B4                     
  1277                           ; BSR set to: 0
  1278  0011B4  C0AC  F068         	movff	ADD_NODE@loc,___wmul@multiplier
  1279  0011B8  C0AD  F069         	movff	ADD_NODE@loc+1,___wmul@multiplier+1
  1280  0011BC  0E00               	movlw	0
  1281  0011BE  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1282  0011C0  0E0D               	movlw	13
  1283  0011C2  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1284  0011C4  ECD5  F017         	call	___wmul	;wreg free
  1285  0011C8  0EE2               	movlw	low (_array+2)
  1286  0011CA  0100               	movlb	0	; () banked
  1287  0011CC  2568               	addwf	?___wmul& (0+255),w,b
  1288  0011CE  6ED9               	movwf	fsr2l,c
  1289  0011D0  0E0C               	movlw	high (_array+2)
  1290  0011D2  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1291  0011D4  6EDA               	movwf	fsr2h,c
  1292  0011D6  50DE               	movf	postinc2,w,c
  1293  0011D8  5DA1               	subwf	(ADD_NODE@temp+2)& (0+255),w,b
  1294  0011DA  50DE               	movf	postinc2,w,c
  1295  0011DC  59A2               	subwfb	(ADD_NODE@temp+3)& (0+255),w,b
  1296  0011DE  50DE               	movf	postinc2,w,c
  1297  0011E0  59A3               	subwfb	(ADD_NODE@temp+4)& (0+255),w,b
  1298  0011E2  51A4               	movf	(ADD_NODE@temp+5)& (0+255),w,b
  1299  0011E4  0A80               	xorlw	128
  1300  0011E6  6F91               	movwf	(??_ADD_NODE+4)& (0+255),b
  1301  0011E8  50DE               	movf	postinc2,w,c
  1302  0011EA  0A80               	xorlw	128
  1303  0011EC  5991               	subwfb	(??_ADD_NODE+4)& (0+255),w,b
  1304  0011EE  B0D8               	btfsc	status,0,c
  1305  0011F0  EFFC  F008         	goto	u1791
  1306  0011F4  EFFE  F008         	goto	u1790
  1307  0011F8                     u1791:
  1308  0011F8  EF8B  F008         	goto	l293
  1309  0011FC                     u1790:
  1310  0011FC                     l2720:
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;linked_list.c: 39:             if (loc == head)
  1314  0011FC  51EB               	movf	_head& (0+255),w,b
  1315  0011FE  19AC               	xorwf	ADD_NODE@loc& (0+255),w,b
  1316  001200  E107               	bnz	u1801
  1317  001202  51EC               	movf	(_head+1)& (0+255),w,b
  1318  001204  19AD               	xorwf	(ADD_NODE@loc+1)& (0+255),w,b
  1319  001206  A4D8               	btfss	status,2,c
  1320  001208  EF08  F009         	goto	u1801
  1321  00120C  EF0A  F009         	goto	u1800
  1322  001210                     u1801:
  1323  001210  EFA1  F009         	goto	l2732
  1324  001214                     u1800:
  1325  001214                     
  1326                           ; BSR set to: 0
  1327                           ;linked_list.c: 40:             {;linked_list.c: 41:                 add(temp , index);
  1328  001214  EE20  F09F         	lfsr	2,ADD_NODE@temp
  1329  001218  EE00  F06E         	lfsr	0,add@temp
  1330  00121C  0E0C               	movlw	12
  1331  00121E                     u1811:
  1332  00121E  CFDB FFEB          	movff	plusw2,plusw0
  1333  001222  06E8               	decf	wreg,f,c
  1334  001224  E2FC               	bc	u1811
  1335  001226  C0AE  F07B         	movff	ADD_NODE@index,add@index
  1336  00122A  C0AF  F07C         	movff	ADD_NODE@index+1,add@index+1
  1337  00122E  ECF0  F010         	call	_add	;wreg free
  1338  001232                     
  1339                           ;linked_list.c: 42:                 array[index].next = head;
  1340  001232  C0AE  F068         	movff	ADD_NODE@index,___wmul@multiplier
  1341  001236  C0AF  F069         	movff	ADD_NODE@index+1,___wmul@multiplier+1
  1342  00123A  0E00               	movlw	0
  1343  00123C  0100               	movlb	0	; () banked
  1344  00123E  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1345  001240  0E0D               	movlw	13
  1346  001242  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1347  001244  ECD5  F017         	call	___wmul	;wreg free
  1348  001248  0EE0               	movlw	low _array
  1349  00124A  0100               	movlb	0	; () banked
  1350  00124C  2568               	addwf	?___wmul& (0+255),w,b
  1351  00124E  6ED9               	movwf	fsr2l,c
  1352  001250  0E0C               	movlw	high _array
  1353  001252  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1354  001254  6EDA               	movwf	fsr2h,c
  1355  001256  C0EB  FFDE         	movff	_head,postinc2
  1356  00125A  C0EC  FFDD         	movff	_head+1,postdec2
  1357  00125E                     
  1358                           ; BSR set to: 0
  1359                           ;linked_list.c: 43:                 head = index;
  1360  00125E  C0AE  F0EB         	movff	ADD_NODE@index,_head
  1361  001262  C0AF  F0EC         	movff	ADD_NODE@index+1,_head+1
  1362  001266                     
  1363                           ; BSR set to: 0
  1364                           ;linked_list.c: 44:                 int next = array[index].next;
  1365  001266  C0AE  F068         	movff	ADD_NODE@index,___wmul@multiplier
  1366  00126A  C0AF  F069         	movff	ADD_NODE@index+1,___wmul@multiplier+1
  1367  00126E  0E00               	movlw	0
  1368  001270  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1369  001272  0E0D               	movlw	13
  1370  001274  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1371  001276  ECD5  F017         	call	___wmul	;wreg free
  1372  00127A  0EE0               	movlw	low _array
  1373  00127C  0100               	movlb	0	; () banked
  1374  00127E  2568               	addwf	?___wmul& (0+255),w,b
  1375  001280  6ED9               	movwf	fsr2l,c
  1376  001282  0E0C               	movlw	high _array
  1377  001284  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1378  001286  6EDA               	movwf	fsr2h,c
  1379  001288  CFDE F09B          	movff	postinc2,ADD_NODE@next
  1380  00128C  CFDD F09C          	movff	postdec2,ADD_NODE@next+1
  1381  001290                     
  1382                           ; BSR set to: 0
  1383                           ;linked_list.c: 45:                 array[next].delay = array[next].delay - array[index]
      +                          .delay;
  1384  001290  C0AE  F068         	movff	ADD_NODE@index,___wmul@multiplier
  1385  001294  C0AF  F069         	movff	ADD_NODE@index+1,___wmul@multiplier+1
  1386  001298  0E00               	movlw	0
  1387  00129A  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1388  00129C  0E0D               	movlw	13
  1389  00129E  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1390  0012A0  ECD5  F017         	call	___wmul	;wreg free
  1391  0012A4  0EE2               	movlw	low (_array+2)
  1392  0012A6  0100               	movlb	0	; () banked
  1393  0012A8  2568               	addwf	?___wmul& (0+255),w,b
  1394  0012AA  6ED9               	movwf	fsr2l,c
  1395  0012AC  0E0C               	movlw	high (_array+2)
  1396  0012AE  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1397  0012B0  6EDA               	movwf	fsr2h,c
  1398  0012B2  CFDE F08D          	movff	postinc2,??_ADD_NODE
  1399  0012B6  CFDE F08E          	movff	postinc2,??_ADD_NODE+1
  1400  0012BA  CFDE F08F          	movff	postinc2,??_ADD_NODE+2
  1401  0012BE  CFDE F090          	movff	postinc2,??_ADD_NODE+3
  1402  0012C2  C09B  F068         	movff	ADD_NODE@next,___wmul@multiplier
  1403  0012C6  C09C  F069         	movff	ADD_NODE@next+1,___wmul@multiplier+1
  1404  0012CA  0E00               	movlw	0
  1405  0012CC  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1406  0012CE  0E0D               	movlw	13
  1407  0012D0  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1408  0012D2  ECD5  F017         	call	___wmul	;wreg free
  1409  0012D6  0EE2               	movlw	low (_array+2)
  1410  0012D8  0100               	movlb	0	; () banked
  1411  0012DA  2568               	addwf	?___wmul& (0+255),w,b
  1412  0012DC  6ED9               	movwf	fsr2l,c
  1413  0012DE  0E0C               	movlw	high (_array+2)
  1414  0012E0  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1415  0012E2  6EDA               	movwf	fsr2h,c
  1416  0012E4  CFDE F091          	movff	postinc2,??_ADD_NODE+4
  1417  0012E8  CFDE F092          	movff	postinc2,??_ADD_NODE+5
  1418  0012EC  CFDE F093          	movff	postinc2,??_ADD_NODE+6
  1419  0012F0  CFDE F094          	movff	postinc2,??_ADD_NODE+7
  1420  0012F4  518D               	movf	??_ADD_NODE& (0+255),w,b
  1421  0012F6  5D91               	subwf	(??_ADD_NODE+4)& (0+255),w,b
  1422  0012F8  6F95               	movwf	(??_ADD_NODE+8)& (0+255),b
  1423  0012FA  518E               	movf	(??_ADD_NODE+1)& (0+255),w,b
  1424  0012FC  5992               	subwfb	(??_ADD_NODE+5)& (0+255),w,b
  1425  0012FE  6F96               	movwf	(??_ADD_NODE+9)& (0+255),b
  1426  001300  518F               	movf	(??_ADD_NODE+2)& (0+255),w,b
  1427  001302  5993               	subwfb	(??_ADD_NODE+6)& (0+255),w,b
  1428  001304  6F97               	movwf	(??_ADD_NODE+10)& (0+255),b
  1429  001306  5190               	movf	(??_ADD_NODE+3)& (0+255),w,b
  1430  001308  5994               	subwfb	(??_ADD_NODE+7)& (0+255),w,b
  1431  00130A  6F98               	movwf	(??_ADD_NODE+11)& (0+255),b
  1432  00130C  C09B  F068         	movff	ADD_NODE@next,___wmul@multiplier
  1433  001310  C09C  F069         	movff	ADD_NODE@next+1,___wmul@multiplier+1
  1434  001314  0E00               	movlw	0
  1435  001316  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1436  001318  0E0D               	movlw	13
  1437  00131A  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1438  00131C  ECD5  F017         	call	___wmul	;wreg free
  1439  001320  0EE2               	movlw	low (_array+2)
  1440  001322  0100               	movlb	0	; () banked
  1441  001324  2568               	addwf	?___wmul& (0+255),w,b
  1442  001326  6ED9               	movwf	fsr2l,c
  1443  001328  0E0C               	movlw	high (_array+2)
  1444  00132A  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1445  00132C  6EDA               	movwf	fsr2h,c
  1446  00132E  C095  FFDE         	movff	??_ADD_NODE+8,postinc2
  1447  001332  C096  FFDE         	movff	??_ADD_NODE+9,postinc2
  1448  001336  C097  FFDE         	movff	??_ADD_NODE+10,postinc2
  1449  00133A  C098  FFDE         	movff	??_ADD_NODE+11,postinc2
  1450                           
  1451                           ;linked_list.c: 46:             }
  1452  00133E  EF77  F008         	goto	l2702
  1453  001342                     l2732:
  1454                           
  1455                           ; BSR set to: 0
  1456  001342  29AC               	incf	ADD_NODE@loc& (0+255),w,b
  1457  001344  E108               	bnz	u1820
  1458  001346  29AD               	incf	(ADD_NODE@loc+1)& (0+255),w,b
  1459  001348  B4D8               	btfsc	status,2,c
  1460  00134A  EFA9  F009         	goto	u1821
  1461  00134E  EFAB  F009         	goto	u1820
  1462  001352                     u1821:
  1463  001352  EF3E  F00A         	goto	l2742
  1464  001356                     u1820:
  1465  001356                     
  1466                           ; BSR set to: 0
  1467                           ;linked_list.c: 48:                 add(temp , index);
  1468  001356  EE20  F09F         	lfsr	2,ADD_NODE@temp
  1469  00135A  EE00  F06E         	lfsr	0,add@temp
  1470  00135E  0E0C               	movlw	12
  1471  001360                     u1831:
  1472  001360  CFDB FFEB          	movff	plusw2,plusw0
  1473  001364  06E8               	decf	wreg,f,c
  1474  001366  E2FC               	bc	u1831
  1475  001368  C0AE  F07B         	movff	ADD_NODE@index,add@index
  1476  00136C  C0AF  F07C         	movff	ADD_NODE@index+1,add@index+1
  1477  001370  ECF0  F010         	call	_add	;wreg free
  1478  001374                     
  1479                           ;linked_list.c: 49:                 array[pre].next = index;
  1480  001374  C09D  F068         	movff	ADD_NODE@pre,___wmul@multiplier
  1481  001378  C09E  F069         	movff	ADD_NODE@pre+1,___wmul@multiplier+1
  1482  00137C  0E00               	movlw	0
  1483  00137E  0100               	movlb	0	; () banked
  1484  001380  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1485  001382  0E0D               	movlw	13
  1486  001384  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1487  001386  ECD5  F017         	call	___wmul	;wreg free
  1488  00138A  0EE0               	movlw	low _array
  1489  00138C  0100               	movlb	0	; () banked
  1490  00138E  2568               	addwf	?___wmul& (0+255),w,b
  1491  001390  6ED9               	movwf	fsr2l,c
  1492  001392  0E0C               	movlw	high _array
  1493  001394  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1494  001396  6EDA               	movwf	fsr2h,c
  1495  001398  C0AE  FFDE         	movff	ADD_NODE@index,postinc2
  1496  00139C  C0AF  FFDD         	movff	ADD_NODE@index+1,postdec2
  1497  0013A0                     
  1498                           ; BSR set to: 0
  1499                           ;linked_list.c: 50:                 array[index].next = loc;
  1500  0013A0  C0AE  F068         	movff	ADD_NODE@index,___wmul@multiplier
  1501  0013A4  C0AF  F069         	movff	ADD_NODE@index+1,___wmul@multiplier+1
  1502  0013A8  0E00               	movlw	0
  1503  0013AA  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1504  0013AC  0E0D               	movlw	13
  1505  0013AE  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1506  0013B0  ECD5  F017         	call	___wmul	;wreg free
  1507  0013B4  0EE0               	movlw	low _array
  1508  0013B6  0100               	movlb	0	; () banked
  1509  0013B8  2568               	addwf	?___wmul& (0+255),w,b
  1510  0013BA  6ED9               	movwf	fsr2l,c
  1511  0013BC  0E0C               	movlw	high _array
  1512  0013BE  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1513  0013C0  6EDA               	movwf	fsr2h,c
  1514  0013C2  C0AC  FFDE         	movff	ADD_NODE@loc,postinc2
  1515  0013C6  C0AD  FFDD         	movff	ADD_NODE@loc+1,postdec2
  1516  0013CA                     
  1517                           ; BSR set to: 0
  1518                           ;linked_list.c: 51:                 array[loc].delay = array[loc].delay - array[index].d
      +                          elay;
  1519  0013CA  C0AE  F068         	movff	ADD_NODE@index,___wmul@multiplier
  1520  0013CE  C0AF  F069         	movff	ADD_NODE@index+1,___wmul@multiplier+1
  1521  0013D2  0E00               	movlw	0
  1522  0013D4  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1523  0013D6  0E0D               	movlw	13
  1524  0013D8  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1525  0013DA  ECD5  F017         	call	___wmul	;wreg free
  1526  0013DE  0EE2               	movlw	low (_array+2)
  1527  0013E0  0100               	movlb	0	; () banked
  1528  0013E2  2568               	addwf	?___wmul& (0+255),w,b
  1529  0013E4  6ED9               	movwf	fsr2l,c
  1530  0013E6  0E0C               	movlw	high (_array+2)
  1531  0013E8  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1532  0013EA  6EDA               	movwf	fsr2h,c
  1533  0013EC  CFDE F08D          	movff	postinc2,??_ADD_NODE
  1534  0013F0  CFDE F08E          	movff	postinc2,??_ADD_NODE+1
  1535  0013F4  CFDE F08F          	movff	postinc2,??_ADD_NODE+2
  1536  0013F8  CFDE F090          	movff	postinc2,??_ADD_NODE+3
  1537  0013FC  C0AC  F068         	movff	ADD_NODE@loc,___wmul@multiplier
  1538  001400  C0AD  F069         	movff	ADD_NODE@loc+1,___wmul@multiplier+1
  1539  001404  0E00               	movlw	0
  1540  001406  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1541  001408  0E0D               	movlw	13
  1542  00140A  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1543  00140C  ECD5  F017         	call	___wmul	;wreg free
  1544  001410  0EE2               	movlw	low (_array+2)
  1545  001412  0100               	movlb	0	; () banked
  1546  001414  2568               	addwf	?___wmul& (0+255),w,b
  1547  001416  6ED9               	movwf	fsr2l,c
  1548  001418  0E0C               	movlw	high (_array+2)
  1549  00141A  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1550  00141C  6EDA               	movwf	fsr2h,c
  1551  00141E  CFDE F091          	movff	postinc2,??_ADD_NODE+4
  1552  001422  CFDE F092          	movff	postinc2,??_ADD_NODE+5
  1553  001426  CFDE F093          	movff	postinc2,??_ADD_NODE+6
  1554  00142A  CFDE F094          	movff	postinc2,??_ADD_NODE+7
  1555  00142E  518D               	movf	??_ADD_NODE& (0+255),w,b
  1556  001430  5D91               	subwf	(??_ADD_NODE+4)& (0+255),w,b
  1557  001432  6F95               	movwf	(??_ADD_NODE+8)& (0+255),b
  1558  001434  518E               	movf	(??_ADD_NODE+1)& (0+255),w,b
  1559  001436  5992               	subwfb	(??_ADD_NODE+5)& (0+255),w,b
  1560  001438  6F96               	movwf	(??_ADD_NODE+9)& (0+255),b
  1561  00143A  518F               	movf	(??_ADD_NODE+2)& (0+255),w,b
  1562  00143C  5993               	subwfb	(??_ADD_NODE+6)& (0+255),w,b
  1563  00143E  6F97               	movwf	(??_ADD_NODE+10)& (0+255),b
  1564  001440  5190               	movf	(??_ADD_NODE+3)& (0+255),w,b
  1565  001442  5994               	subwfb	(??_ADD_NODE+7)& (0+255),w,b
  1566  001444  6F98               	movwf	(??_ADD_NODE+11)& (0+255),b
  1567  001446  C0AC  F068         	movff	ADD_NODE@loc,___wmul@multiplier
  1568  00144A  C0AD  F069         	movff	ADD_NODE@loc+1,___wmul@multiplier+1
  1569  00144E  0E00               	movlw	0
  1570  001450  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1571  001452  0E0D               	movlw	13
  1572  001454  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1573  001456  ECD5  F017         	call	___wmul	;wreg free
  1574  00145A  0EE2               	movlw	low (_array+2)
  1575  00145C  0100               	movlb	0	; () banked
  1576  00145E  2568               	addwf	?___wmul& (0+255),w,b
  1577  001460  6ED9               	movwf	fsr2l,c
  1578  001462  0E0C               	movlw	high (_array+2)
  1579  001464  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1580  001466  6EDA               	movwf	fsr2h,c
  1581  001468  C095  FFDE         	movff	??_ADD_NODE+8,postinc2
  1582  00146C  C096  FFDE         	movff	??_ADD_NODE+9,postinc2
  1583  001470  C097  FFDE         	movff	??_ADD_NODE+10,postinc2
  1584  001474  C098  FFDE         	movff	??_ADD_NODE+11,postinc2
  1585                           
  1586                           ;linked_list.c: 53:             }
  1587  001478  EF77  F008         	goto	l2702
  1588  00147C                     l2742:
  1589                           
  1590                           ; BSR set to: 0
  1591  00147C  29AC               	incf	ADD_NODE@loc& (0+255),w,b
  1592  00147E  E106               	bnz	u1841
  1593  001480  29AD               	incf	(ADD_NODE@loc+1)& (0+255),w,b
  1594  001482  A4D8               	btfss	status,2,c
  1595  001484  EF46  F00A         	goto	u1841
  1596  001488  EF48  F00A         	goto	u1840
  1597  00148C                     u1841:
  1598  00148C  EF6F  F00A         	goto	l298
  1599  001490                     u1840:
  1600  001490                     
  1601                           ; BSR set to: 0
  1602                           ;linked_list.c: 55:             {;linked_list.c: 56:                 add(temp , index);
  1603  001490  EE20  F09F         	lfsr	2,ADD_NODE@temp
  1604  001494  EE00  F06E         	lfsr	0,add@temp
  1605  001498  0E0C               	movlw	12
  1606  00149A                     u1851:
  1607  00149A  CFDB FFEB          	movff	plusw2,plusw0
  1608  00149E  06E8               	decf	wreg,f,c
  1609  0014A0  E2FC               	bc	u1851
  1610  0014A2  C0AE  F07B         	movff	ADD_NODE@index,add@index
  1611  0014A6  C0AF  F07C         	movff	ADD_NODE@index+1,add@index+1
  1612  0014AA  ECF0  F010         	call	_add	;wreg free
  1613  0014AE                     
  1614                           ;linked_list.c: 57:                 array[pre].next = index;
  1615  0014AE  C09D  F068         	movff	ADD_NODE@pre,___wmul@multiplier
  1616  0014B2  C09E  F069         	movff	ADD_NODE@pre+1,___wmul@multiplier+1
  1617  0014B6  0E00               	movlw	0
  1618  0014B8  0100               	movlb	0	; () banked
  1619  0014BA  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1620  0014BC  0E0D               	movlw	13
  1621  0014BE  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1622  0014C0  ECD5  F017         	call	___wmul	;wreg free
  1623  0014C4  0EE0               	movlw	low _array
  1624  0014C6  0100               	movlb	0	; () banked
  1625  0014C8  2568               	addwf	?___wmul& (0+255),w,b
  1626  0014CA  6ED9               	movwf	fsr2l,c
  1627  0014CC  0E0C               	movlw	high _array
  1628  0014CE  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1629  0014D0  6EDA               	movwf	fsr2h,c
  1630  0014D2  C0AE  FFDE         	movff	ADD_NODE@index,postinc2
  1631  0014D6  C0AF  FFDD         	movff	ADD_NODE@index+1,postdec2
  1632  0014DA  EF77  F008         	goto	l2702
  1633  0014DE                     l298:
  1634                           
  1635                           ; BSR set to: 0
  1636  0014DE  EF77  F008         	goto	l2702
  1637  0014E2                     l288:
  1638                           
  1639                           ; BSR set to: 0
  1640  0014E2  6982               	setf	?_ADD_NODE& (0+255),b
  1641  0014E4  6983               	setf	(?_ADD_NODE+1)& (0+255),b
  1642  0014E6                     l290:
  1643  0014E6  0012               	return		;funcret
  1644  0014E8                     __end_of_ADD_NODE:
  1645                           	opt callstack 0
  1646                           
  1647 ;; *************** function _return_index *****************
  1648 ;; Defined at:
  1649 ;;		line 115 in file "linked_list.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;		None
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  i               2   12[BANK0 ] int 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  2    8[BANK0 ] int 
  1656 ;; Registers used:
  1657 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1663 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1664 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1665 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1666 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1667 ;;Total ram usage:        6 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; Hardware stack levels required when called:    6
  1670 ;; This function calls:
  1671 ;;		Nothing
  1672 ;; This function is called by:
  1673 ;;		_ADD_NODE
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text4
  1678  0029F2                     __ptext4:
  1679                           	opt callstack 0
  1680  0029F2                     _return_index:
  1681                           	opt callstack 22
  1682  0029F2                     
  1683                           ;linked_list.c: 117:     for (int i = 0 ; i<20 ; i++)
  1684  0029F2  0E00               	movlw	0
  1685  0029F4  0100               	movlb	0	; () banked
  1686  0029F6  6F6D               	movwf	(return_index@i+1)& (0+255),b
  1687  0029F8  0E00               	movlw	0
  1688  0029FA  6F6C               	movwf	return_index@i& (0+255),b
  1689  0029FC                     l2430:
  1690                           
  1691                           ; BSR set to: 0
  1692                           ;linked_list.c: 118:         if (check_index[i] ==0)
  1693  0029FC  90D8               	bcf	status,0,c
  1694  0029FE  356C               	rlcf	return_index@i& (0+255),w,b
  1695  002A00  6ED9               	movwf	fsr2l,c
  1696  002A02  356D               	rlcf	(return_index@i+1)& (0+255),w,b
  1697  002A04  6EDA               	movwf	fsr2h,c
  1698  002A06  0E00               	movlw	low _check_index
  1699  002A08  26D9               	addwf	fsr2l,f,c
  1700  002A0A  0E01               	movlw	high _check_index
  1701  002A0C  22DA               	addwfc	fsr2h,f,c
  1702  002A0E  50DE               	movf	postinc2,w,c
  1703  002A10  10DE               	iorwf	postinc2,w,c
  1704  002A12  A4D8               	btfss	status,2,c
  1705  002A14  EF0E  F015         	goto	u1341
  1706  002A18  EF10  F015         	goto	u1340
  1707  002A1C                     u1341:
  1708  002A1C  EF25  F015         	goto	l2440
  1709  002A20                     u1340:
  1710  002A20                     
  1711                           ; BSR set to: 0
  1712                           ;linked_list.c: 119:         {;linked_list.c: 120:             check_index[i]=1;
  1713  002A20  90D8               	bcf	status,0,c
  1714  002A22  356C               	rlcf	return_index@i& (0+255),w,b
  1715  002A24  6ED9               	movwf	fsr2l,c
  1716  002A26  356D               	rlcf	(return_index@i+1)& (0+255),w,b
  1717  002A28  6EDA               	movwf	fsr2h,c
  1718  002A2A  0E00               	movlw	low _check_index
  1719  002A2C  26D9               	addwf	fsr2l,f,c
  1720  002A2E  0E01               	movlw	high _check_index
  1721  002A30  22DA               	addwfc	fsr2h,f,c
  1722  002A32  0E01               	movlw	1
  1723  002A34  6EDE               	movwf	postinc2,c
  1724  002A36  0E00               	movlw	0
  1725  002A38  6EDD               	movwf	postdec2,c
  1726  002A3A                     
  1727                           ; BSR set to: 0
  1728                           ;linked_list.c: 121:             no_funcs++;
  1729  002A3A  4BE2               	infsnz	_no_funcs& (0+255),f,b
  1730  002A3C  2BE3               	incf	(_no_funcs+1)& (0+255),f,b
  1731  002A3E                     
  1732                           ; BSR set to: 0
  1733                           ;linked_list.c: 122:             return i;
  1734  002A3E  C06C  F068         	movff	return_index@i,?_return_index
  1735  002A42  C06D  F069         	movff	return_index@i+1,?_return_index+1
  1736  002A46  EF37  F015         	goto	l326
  1737  002A4A                     l2440:
  1738                           
  1739                           ; BSR set to: 0
  1740  002A4A  4B6C               	infsnz	return_index@i& (0+255),f,b
  1741  002A4C  2B6D               	incf	(return_index@i+1)& (0+255),f,b
  1742  002A4E                     
  1743                           ; BSR set to: 0
  1744  002A4E  BF6D               	btfsc	(return_index@i+1)& (0+255),7,b
  1745  002A50  EF33  F015         	goto	u1351
  1746  002A54  516D               	movf	(return_index@i+1)& (0+255),w,b
  1747  002A56  E109               	bnz	u1350
  1748  002A58  0E14               	movlw	20
  1749  002A5A  5D6C               	subwf	return_index@i& (0+255),w,b
  1750  002A5C  A0D8               	btfss	status,0,c
  1751  002A5E  EF33  F015         	goto	u1351
  1752  002A62  EF35  F015         	goto	u1350
  1753  002A66                     u1351:
  1754  002A66  EFFE  F014         	goto	l2430
  1755  002A6A                     u1350:
  1756  002A6A                     
  1757                           ; BSR set to: 0
  1758                           ;linked_list.c: 124:     return -1;
  1759  002A6A  6968               	setf	?_return_index& (0+255),b
  1760  002A6C  6969               	setf	(?_return_index+1)& (0+255),b
  1761  002A6E                     l326:
  1762                           
  1763                           ; BSR set to: 0
  1764  002A6E  0012               	return		;funcret
  1765  002A70                     __end_of_return_index:
  1766                           	opt callstack 0
  1767                           
  1768 ;; *************** function _create_node *****************
  1769 ;; Defined at:
  1770 ;;		line 137 in file "linked_list.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;  delay           4    8[BANK0 ] long 
  1773 ;;  period          4   12[BANK0 ] long 
  1774 ;;  function        3   16[BANK0 ] PTR FTN()void 
  1775 ;;		 -> get_temp_humid(1), check_button(1), heater_heatpumper(1), NULL(0), 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  temp           13   21[BANK0 ] struct Node
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  13    8[BANK0 ] struct Node
  1780 ;; Registers used:
  1781 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1787 ;;      Params:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1791 ;;Total ram usage:       26 bytes
  1792 ;; Hardware stack levels used:    1
  1793 ;; Hardware stack levels required when called:    6
  1794 ;; This function calls:
  1795 ;;		Nothing
  1796 ;; This function is called by:
  1797 ;;		_ADD_NODE
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           	psect	text5
  1802  002DFC                     __ptext5:
  1803                           	opt callstack 0
  1804  002DFC                     _create_node:
  1805                           	opt callstack 22
  1806  002DFC                     
  1807                           ;linked_list.c: 138:     struct Node temp;;linked_list.c: 139:     temp.next = -1;
  1808  002DFC  0100               	movlb	0	; () banked
  1809  002DFE  6975               	setf	create_node@temp& (0+255),b
  1810  002E00  6976               	setf	(create_node@temp+1)& (0+255),b
  1811                           
  1812                           ;linked_list.c: 140:     temp.delay = delay;
  1813  002E02  C068  F077         	movff	create_node@delay,create_node@temp+2
  1814  002E06  C069  F078         	movff	create_node@delay+1,create_node@temp+3
  1815  002E0A  C06A  F079         	movff	create_node@delay+2,create_node@temp+4
  1816  002E0E  C06B  F07A         	movff	create_node@delay+3,create_node@temp+5
  1817                           
  1818                           ;linked_list.c: 141:     temp.period = period;
  1819  002E12  C06C  F07B         	movff	create_node@period,create_node@temp+6
  1820  002E16  C06D  F07C         	movff	create_node@period+1,create_node@temp+7
  1821  002E1A  C06E  F07D         	movff	create_node@period+2,create_node@temp+8
  1822  002E1E  C06F  F07E         	movff	create_node@period+3,create_node@temp+9
  1823  002E22                     
  1824                           ; BSR set to: 0
  1825                           ;linked_list.c: 142:     temp.function = function;
  1826  002E22  C070  F07F         	movff	create_node@function,create_node@temp+10
  1827  002E26  C071  F080         	movff	create_node@function+1,create_node@temp+11
  1828  002E2A  C072  F081         	movff	create_node@function+2,create_node@temp+12
  1829  002E2E                     
  1830                           ; BSR set to: 0
  1831                           ;linked_list.c: 143:     return temp;
  1832  002E2E  EE20  F075         	lfsr	2,create_node@temp
  1833  002E32  EE00  F068         	lfsr	0,?_create_node
  1834  002E36  0E0C               	movlw	12
  1835  002E38                     u1331:
  1836  002E38  CFDB FFEB          	movff	plusw2,plusw0
  1837  002E3C  06E8               	decf	wreg,f,c
  1838  002E3E  E2FC               	bc	u1331
  1839  002E40                     
  1840                           ; BSR set to: 0
  1841  002E40  0012               	return		;funcret
  1842  002E42                     __end_of_create_node:
  1843                           	opt callstack 0
  1844                           
  1845 ;; *************** function _add *****************
  1846 ;; Defined at:
  1847 ;;		line 107 in file "linked_list.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  temp           13   14[BANK0 ] struct Node
  1850 ;;  index           2   27[BANK0 ] int 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;		None
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  1    wreg      void 
  1855 ;; Registers used:
  1856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1862 ;;      Params:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1865 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1866 ;;Total ram usage:       15 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    7
  1869 ;; This function calls:
  1870 ;;		___wmul
  1871 ;; This function is called by:
  1872 ;;		_ADD_NODE
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text6
  1877  0021E0                     __ptext6:
  1878                           	opt callstack 0
  1879  0021E0                     _add:
  1880                           	opt callstack 21
  1881  0021E0                     
  1882                           ;linked_list.c: 107: void add(struct Node temp , int index);linked_list.c: 108: {;linked
      +                          _list.c: 109:     array[index].next = temp.next;
  1883  0021E0  C07B  F068         	movff	add@index,___wmul@multiplier
  1884  0021E4  C07C  F069         	movff	add@index+1,___wmul@multiplier+1
  1885  0021E8  0E00               	movlw	0
  1886  0021EA  0100               	movlb	0	; () banked
  1887  0021EC  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1888  0021EE  0E0D               	movlw	13
  1889  0021F0  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1890  0021F2  ECD5  F017         	call	___wmul	;wreg free
  1891  0021F6  0EE0               	movlw	low _array
  1892  0021F8  0100               	movlb	0	; () banked
  1893  0021FA  2568               	addwf	?___wmul& (0+255),w,b
  1894  0021FC  6ED9               	movwf	fsr2l,c
  1895  0021FE  0E0C               	movlw	high _array
  1896  002200  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1897  002202  6EDA               	movwf	fsr2h,c
  1898  002204  C06E  FFDE         	movff	add@temp,postinc2
  1899  002208  C06F  FFDD         	movff	add@temp+1,postdec2
  1900  00220C                     
  1901                           ; BSR set to: 0
  1902                           ;linked_list.c: 110:  array[index].delay = temp.delay;
  1903  00220C  EE20  F070         	lfsr	2,add@temp+2
  1904  002210  C07B  F068         	movff	add@index,___wmul@multiplier
  1905  002214  C07C  F069         	movff	add@index+1,___wmul@multiplier+1
  1906  002218  0E00               	movlw	0
  1907  00221A  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1908  00221C  0E0D               	movlw	13
  1909  00221E  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1910  002220  ECD5  F017         	call	___wmul	;wreg free
  1911  002224  0EE2               	movlw	low (_array+2)
  1912  002226  0100               	movlb	0	; () banked
  1913  002228  2568               	addwf	?___wmul& (0+255),w,b
  1914  00222A  6EE1               	movwf	fsr1l,c
  1915  00222C  0E0C               	movlw	high (_array+2)
  1916  00222E  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1917  002230  6EE2               	movwf	fsr1h,c
  1918  002232  CFDE FFE6          	movff	postinc2,postinc1
  1919  002236  CFDE FFE6          	movff	postinc2,postinc1
  1920  00223A  CFDE FFE6          	movff	postinc2,postinc1
  1921  00223E  CFDE FFE6          	movff	postinc2,postinc1
  1922  002242                     
  1923                           ; BSR set to: 0
  1924                           ;linked_list.c: 111:  array[index].period = temp.period;
  1925  002242  EE20  F074         	lfsr	2,add@temp+6
  1926  002246  C07B  F068         	movff	add@index,___wmul@multiplier
  1927  00224A  C07C  F069         	movff	add@index+1,___wmul@multiplier+1
  1928  00224E  0E00               	movlw	0
  1929  002250  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1930  002252  0E0D               	movlw	13
  1931  002254  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1932  002256  ECD5  F017         	call	___wmul	;wreg free
  1933  00225A  0EE6               	movlw	low (_array+6)
  1934  00225C  0100               	movlb	0	; () banked
  1935  00225E  2568               	addwf	?___wmul& (0+255),w,b
  1936  002260  6EE1               	movwf	fsr1l,c
  1937  002262  0E0C               	movlw	high (_array+6)
  1938  002264  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1939  002266  6EE2               	movwf	fsr1h,c
  1940  002268  CFDE FFE6          	movff	postinc2,postinc1
  1941  00226C  CFDE FFE6          	movff	postinc2,postinc1
  1942  002270  CFDE FFE6          	movff	postinc2,postinc1
  1943  002274  CFDE FFE6          	movff	postinc2,postinc1
  1944  002278                     
  1945                           ; BSR set to: 0
  1946                           ;linked_list.c: 112:  array[index].function = temp.function;
  1947  002278  EE20  F078         	lfsr	2,add@temp+10
  1948  00227C  C07B  F068         	movff	add@index,___wmul@multiplier
  1949  002280  C07C  F069         	movff	add@index+1,___wmul@multiplier+1
  1950  002284  0E00               	movlw	0
  1951  002286  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1952  002288  0E0D               	movlw	13
  1953  00228A  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1954  00228C  ECD5  F017         	call	___wmul	;wreg free
  1955  002290  0EEA               	movlw	low (_array+10)
  1956  002292  0100               	movlb	0	; () banked
  1957  002294  2568               	addwf	?___wmul& (0+255),w,b
  1958  002296  6EE1               	movwf	fsr1l,c
  1959  002298  0E0C               	movlw	high (_array+10)
  1960  00229A  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1961  00229C  6EE2               	movwf	fsr1h,c
  1962  00229E  CFDE FFE6          	movff	postinc2,postinc1
  1963  0022A2  CFDE FFE6          	movff	postinc2,postinc1
  1964  0022A6  CFDE FFE6          	movff	postinc2,postinc1
  1965  0022AA                     
  1966                           ; BSR set to: 0
  1967  0022AA  0012               	return		;funcret
  1968  0022AC                     __end_of_add:
  1969                           	opt callstack 0
  1970                           
  1971 ;; *************** function _check_button *****************
  1972 ;; Defined at:
  1973 ;;		line 87 in file "main.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;		None
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;		None
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg, status,2, status,0
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;Total ram usage:        0 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    6
  1994 ;; This function calls:
  1995 ;;		Nothing
  1996 ;; This function is called by:
  1997 ;;		_main
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           	psect	text7
  2002  00285A                     __ptext7:
  2003                           	opt callstack 0
  2004  00285A                     _check_button:
  2005                           	opt callstack 24
  2006  00285A                     
  2007                           ;main.c: 89:     static int check_but_state = 0;;main.c: 91:     if (state_pushed ==1 &&
      +                           check_but_state ==0)
  2008  00285A  0100               	movlb	0	; () banked
  2009  00285C  05D6               	decf	_state_pushed& (0+255),w,b
  2010  00285E  11D7               	iorwf	(_state_pushed+1)& (0+255),w,b
  2011  002860  A4D8               	btfss	status,2,c
  2012  002862  EF35  F014         	goto	u2151
  2013  002866  EF37  F014         	goto	u2150
  2014  00286A                     u2151:
  2015  00286A  EF5E  F014         	goto	l2980
  2016  00286E                     u2150:
  2017  00286E                     
  2018                           ; BSR set to: 0
  2019  00286E  51C4               	movf	check_button@check_but_state& (0+255),w,b
  2020  002870  11C5               	iorwf	(check_button@check_but_state+1)& (0+255),w,b
  2021  002872  A4D8               	btfss	status,2,c
  2022  002874  EF3E  F014         	goto	u2161
  2023  002878  EF40  F014         	goto	u2160
  2024  00287C                     u2161:
  2025  00287C  EF5E  F014         	goto	l2980
  2026  002880                     u2160:
  2027  002880                     
  2028                           ; BSR set to: 0
  2029                           ;main.c: 92:     {;main.c: 93:         if (state == ON)
  2030  002880  05E4               	decf	_state& (0+255),w,b
  2031  002882  A4D8               	btfss	status,2,c
  2032  002884  EF46  F014         	goto	u2171
  2033  002888  EF48  F014         	goto	u2170
  2034  00288C                     u2171:
  2035  00288C  EF4D  F014         	goto	l2974
  2036  002890                     u2170:
  2037  002890                     
  2038                           ; BSR set to: 0
  2039                           ;main.c: 94:         {;main.c: 95:             state = OFF;
  2040  002890  0E00               	movlw	0
  2041  002892  6FE4               	movwf	_state& (0+255),b
  2042  002894                     
  2043                           ; BSR set to: 0
  2044                           ;main.c: 96:             LATDbits.LATD1 = 0;
  2045  002894  928C               	bcf	140,1,c	;volatile
  2046                           
  2047                           ;main.c: 97:         }
  2048  002896  EF58  F014         	goto	l467
  2049  00289A                     l2974:
  2050                           
  2051                           ; BSR set to: 0
  2052  00289A  51E4               	movf	_state& (0+255),w,b
  2053  00289C  A4D8               	btfss	status,2,c
  2054  00289E  EF53  F014         	goto	u2181
  2055  0028A2  EF55  F014         	goto	u2180
  2056  0028A6                     u2181:
  2057  0028A6  EF58  F014         	goto	l467
  2058  0028AA                     u2180:
  2059  0028AA                     
  2060                           ; BSR set to: 0
  2061                           ;main.c: 99:         {;main.c: 100:             state = ON;
  2062  0028AA  0E01               	movlw	1
  2063  0028AC  6FE4               	movwf	_state& (0+255),b
  2064  0028AE                     
  2065                           ; BSR set to: 0
  2066                           ;main.c: 101:             LATDbits.LATD1 = 1;
  2067  0028AE  828C               	bsf	140,1,c	;volatile
  2068  0028B0                     l467:
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;main.c: 103:         check_but_state = 1;
  2072  0028B0  0E00               	movlw	0
  2073  0028B2  6FC5               	movwf	(check_button@check_but_state+1)& (0+255),b
  2074  0028B4  0E01               	movlw	1
  2075  0028B6  6FC4               	movwf	check_button@check_but_state& (0+255),b
  2076                           
  2077                           ;main.c: 104:     }
  2078  0028B8  EF74  F014         	goto	l471
  2079  0028BC                     l2980:
  2080                           
  2081                           ; BSR set to: 0
  2082  0028BC  51D6               	movf	_state_pushed& (0+255),w,b
  2083  0028BE  11D7               	iorwf	(_state_pushed+1)& (0+255),w,b
  2084  0028C0  A4D8               	btfss	status,2,c
  2085  0028C2  EF65  F014         	goto	u2191
  2086  0028C6  EF67  F014         	goto	u2190
  2087  0028CA                     u2191:
  2088  0028CA  EF74  F014         	goto	l471
  2089  0028CE                     u2190:
  2090  0028CE                     
  2091                           ; BSR set to: 0
  2092  0028CE  05C4               	decf	check_button@check_but_state& (0+255),w,b
  2093  0028D0  11C5               	iorwf	(check_button@check_but_state+1)& (0+255),w,b
  2094  0028D2  A4D8               	btfss	status,2,c
  2095  0028D4  EF6E  F014         	goto	u2201
  2096  0028D8  EF70  F014         	goto	u2200
  2097  0028DC                     u2201:
  2098  0028DC  EF74  F014         	goto	l471
  2099  0028E0                     u2200:
  2100  0028E0                     
  2101                           ; BSR set to: 0
  2102                           ;main.c: 106:     {;main.c: 107:         check_but_state = 0;
  2103  0028E0  0E00               	movlw	0
  2104  0028E2  6FC5               	movwf	(check_button@check_but_state+1)& (0+255),b
  2105  0028E4  0E00               	movlw	0
  2106  0028E6  6FC4               	movwf	check_button@check_but_state& (0+255),b
  2107  0028E8                     l471:
  2108                           
  2109                           ; BSR set to: 0
  2110  0028E8  0012               	return		;funcret
  2111  0028EA                     __end_of_check_button:
  2112                           	opt callstack 0
  2113                           
  2114 ;; *************** function _get_temp_humid *****************
  2115 ;; Defined at:
  2116 ;;		line 68 in file "dht11.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, status,2, status,0, cstack
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2134 ;;Total ram usage:        0 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; Hardware stack levels required when called:   11
  2137 ;; This function calls:
  2138 ;;		_print_temp_humid
  2139 ;;		_readDHT
  2140 ;; This function is called by:
  2141 ;;		_main
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           	psect	text8
  2146  0027BE                     __ptext8:
  2147                           	opt callstack 0
  2148  0027BE                     _get_temp_humid:
  2149                           	opt callstack 19
  2150  0027BE                     
  2151                           ;dht11.c: 69:     if (state == ON)
  2152  0027BE  0100               	movlb	0	; () banked
  2153  0027C0  05E4               	decf	_state& (0+255),w,b
  2154  0027C2  A4D8               	btfss	status,2,c
  2155  0027C4  EFE6  F013         	goto	u2211
  2156  0027C8  EFE8  F013         	goto	u2210
  2157  0027CC                     u2211:
  2158  0027CC  EF2C  F014         	goto	l643
  2159  0027D0                     u2210:
  2160  0027D0                     
  2161                           ; BSR set to: 0
  2162                           ;dht11.c: 70:     {;dht11.c: 71:         if(!readDHT()) {
  2163  0027D0  ECF7  F00E         	call	_readDHT	;wreg free
  2164  0027D4  0900               	iorlw	0
  2165  0027D6  A4D8               	btfss	status,2,c
  2166  0027D8  EFF0  F013         	goto	u2221
  2167  0027DC  EFF2  F013         	goto	u2220
  2168  0027E0                     u2221:
  2169  0027E0  EFFD  F013         	goto	l3020
  2170  0027E4                     u2220:
  2171  0027E4                     
  2172                           ;dht11.c: 72:             temperature_value = 256;
  2173  0027E4  0E01               	movlw	1
  2174  0027E6  0100               	movlb	0	; () banked
  2175  0027E8  6FDD               	movwf	(_temperature_value+1)& (0+255),b
  2176  0027EA  0E00               	movlw	0
  2177  0027EC  6FDC               	movwf	_temperature_value& (0+255),b
  2178                           
  2179                           ;dht11.c: 73:             humidity_value = 256;
  2180  0027EE  0E01               	movlw	1
  2181  0027F0  6FDB               	movwf	(_humidity_value+1)& (0+255),b
  2182  0027F2  0E00               	movlw	0
  2183  0027F4  6FDA               	movwf	_humidity_value& (0+255),b
  2184  0027F6  EF2C  F014         	goto	l643
  2185  0027FA                     l3020:
  2186                           
  2187                           ;dht11.c: 77:         print_temp_humid();
  2188  0027FA  EC7E  F012         	call	_print_temp_humid	;wreg free
  2189  0027FE                     
  2190                           ;dht11.c: 78:         temperature_value = temper[0];
  2191  0027FE  C0DE  F0DC         	movff	_temper,_temperature_value
  2192  002802  0100               	movlb	0	; () banked
  2193  002804  6BDD               	clrf	(_temperature_value+1)& (0+255),b
  2194  002806                     
  2195                           ; BSR set to: 0
  2196                           ;dht11.c: 79:         humidity_value = humid[0];
  2197  002806  C0E0  F0DA         	movff	_humid,_humidity_value
  2198  00280A  6BDB               	clrf	(_humidity_value+1)& (0+255),b
  2199  00280C                     
  2200                           ; BSR set to: 0
  2201                           ;dht11.c: 81:         if (humidity_value>46) turn_fan3 = 1;
  2202  00280C  51DB               	movf	(_humidity_value+1)& (0+255),w,b
  2203  00280E  E109               	bnz	u2230
  2204  002810  0E2F               	movlw	47
  2205  002812  5DDA               	subwf	_humidity_value& (0+255),w,b
  2206  002814  A0D8               	btfss	status,0,c
  2207  002816  EF0F  F014         	goto	u2231
  2208  00281A  EF11  F014         	goto	u2230
  2209  00281E                     u2231:
  2210  00281E  EF17  F014         	goto	l3030
  2211  002822                     u2230:
  2212  002822                     
  2213                           ; BSR set to: 0
  2214  002822  0E00               	movlw	0
  2215  002824  6FD9               	movwf	(_turn_fan3+1)& (0+255),b
  2216  002826  0E01               	movlw	1
  2217  002828  6FD8               	movwf	_turn_fan3& (0+255),b
  2218  00282A  EF1B  F014         	goto	l3032
  2219  00282E                     l3030:
  2220                           
  2221                           ; BSR set to: 0
  2222  00282E  0E00               	movlw	0
  2223  002830  6FD9               	movwf	(_turn_fan3+1)& (0+255),b
  2224  002832  0E00               	movlw	0
  2225  002834  6FD8               	movwf	_turn_fan3& (0+255),b
  2226  002836                     l3032:
  2227                           
  2228                           ; BSR set to: 0
  2229                           ;dht11.c: 83:         if (humidity_value >= 90) fan3 = 100;
  2230  002836  51DB               	movf	(_humidity_value+1)& (0+255),w,b
  2231  002838  E109               	bnz	u2240
  2232  00283A  0E5A               	movlw	90
  2233  00283C  5DDA               	subwf	_humidity_value& (0+255),w,b
  2234  00283E  A0D8               	btfss	status,0,c
  2235  002840  EF24  F014         	goto	u2241
  2236  002844  EF26  F014         	goto	u2240
  2237  002848                     u2241:
  2238  002848  EF2A  F014         	goto	l646
  2239  00284C                     u2240:
  2240  00284C                     
  2241                           ; BSR set to: 0
  2242  00284C  0E64               	movlw	100
  2243  00284E  6FE6               	movwf	_fan3& (0+255),b
  2244  002850  EF2C  F014         	goto	l643
  2245  002854                     l646:
  2246                           
  2247                           ; BSR set to: 0
  2248  002854  C0E0  F0E6         	movff	_humid,_fan3
  2249  002858                     l643:
  2250                           
  2251                           ; BSR set to: 0
  2252  002858  0012               	return		;funcret
  2253  00285A                     __end_of_get_temp_humid:
  2254                           	opt callstack 0
  2255                           
  2256 ;; *************** function _heater_heatpumper *****************
  2257 ;; Defined at:
  2258 ;;		line 25 in file "main.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;		None
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;		None
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;Total ram usage:        0 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:   11
  2279 ;; This function calls:
  2280 ;;		___awdiv
  2281 ;;		___awmod
  2282 ;;		_printLCD_char
  2283 ;;		_printLCD_string
  2284 ;; This function is called by:
  2285 ;;		_main
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text9
  2290  00194E                     __ptext9:
  2291                           	opt callstack 0
  2292  00194E                     _heater_heatpumper:
  2293                           	opt callstack 19
  2294  00194E                     
  2295                           ;main.c: 27:     static int check_off = 1;;main.c: 28:     if (state == ON)
  2296  00194E  0100               	movlb	0	; () banked
  2297  001950  05E4               	decf	_state& (0+255),w,b
  2298  001952  A4D8               	btfss	status,2,c
  2299  001954  EFAE  F00C         	goto	u2051
  2300  001958  EFB0  F00C         	goto	u2050
  2301  00195C                     u2051:
  2302  00195C  EF82  F00D         	goto	l2942
  2303  001960                     u2050:
  2304  001960                     
  2305                           ; BSR set to: 0
  2306                           ;main.c: 29:     {;main.c: 30:         if (time_each_state>0)
  2307  001960  BFEA               	btfsc	(_time_each_state+1)& (0+255),7,b
  2308  001962  EFBB  F00C         	goto	u2061
  2309  001966  51EA               	movf	(_time_each_state+1)& (0+255),w,b
  2310  001968  E108               	bnz	u2060
  2311  00196A  05E9               	decf	_time_each_state& (0+255),w,b
  2312  00196C  A0D8               	btfss	status,0,c
  2313  00196E  EFBB  F00C         	goto	u2061
  2314  001972  EFBD  F00C         	goto	u2060
  2315  001976                     u2061:
  2316  001976  EF00  F00D         	goto	l2922
  2317  00197A                     u2060:
  2318  00197A                     
  2319                           ; BSR set to: 0
  2320                           ;main.c: 31:         {;main.c: 32:             if (FUNCTION == Heater)
  2321  00197A  51E5               	movf	_FUNCTION& (0+255),w,b
  2322  00197C  A4D8               	btfss	status,2,c
  2323  00197E  EFC3  F00C         	goto	u2071
  2324  001982  EFC5  F00C         	goto	u2070
  2325  001986                     u2071:
  2326  001986  EFEC  F00C         	goto	l2916
  2327  00198A                     u2070:
  2328  00198A                     
  2329                           ; BSR set to: 0
  2330                           ;main.c: 33:             {;main.c: 34:                 if (temperature_value < 100) prin
      +                          tLCD_string(0,"Heating   F3:   ");
  2331  00198A  51DD               	movf	(_temperature_value+1)& (0+255),w,b
  2332  00198C  E107               	bnz	u2081
  2333  00198E  0E64               	movlw	100
  2334  001990  5DDC               	subwf	_temperature_value& (0+255),w,b
  2335  001992  B0D8               	btfsc	status,0,c
  2336  001994  EFCE  F00C         	goto	u2081
  2337  001998  EFD0  F00C         	goto	u2080
  2338  00199C                     u2081:
  2339  00199C  EFDC  F00C         	goto	l2912
  2340  0019A0                     u2080:
  2341  0019A0                     
  2342                           ; BSR set to: 0
  2343  0019A0  0E00               	movlw	0
  2344  0019A2  6F72               	movwf	(printLCD_string@line+1)& (0+255),b
  2345  0019A4  0E00               	movlw	0
  2346  0019A6  6F71               	movwf	printLCD_string@line& (0+255),b
  2347  0019A8  0E12               	movlw	low STR_1
  2348  0019AA  6F73               	movwf	printLCD_string@array& (0+255),b
  2349  0019AC  0E10               	movlw	high STR_1
  2350  0019AE  6F74               	movwf	(printLCD_string@array+1)& (0+255),b
  2351  0019B0  EC82  F017         	call	_printLCD_string	;wreg free
  2352  0019B4  EFE6  F00C         	goto	l2914
  2353  0019B8                     l2912:
  2354                           
  2355                           ; BSR set to: 0
  2356  0019B8  0E00               	movlw	0
  2357  0019BA  6F72               	movwf	(printLCD_string@line+1)& (0+255),b
  2358  0019BC  0E00               	movlw	0
  2359  0019BE  6F71               	movwf	printLCD_string@line& (0+255),b
  2360  0019C0  0E01               	movlw	low STR_2
  2361  0019C2  6F73               	movwf	printLCD_string@array& (0+255),b
  2362  0019C4  0E10               	movlw	high STR_2
  2363  0019C6  6F74               	movwf	(printLCD_string@array+1)& (0+255),b
  2364  0019C8  EC82  F017         	call	_printLCD_string	;wreg free
  2365  0019CC                     l2914:
  2366                           
  2367                           ;main.c: 36:                 time_each_state--;
  2368  0019CC  0100               	movlb	0	; () banked
  2369  0019CE  07E9               	decf	_time_each_state& (0+255),f,b
  2370  0019D0  A0D8               	btfss	status,0,c
  2371  0019D2  07EA               	decf	(_time_each_state+1)& (0+255),f,b
  2372                           
  2373                           ;main.c: 37:             }else if (FUNCTION == Heat_pumper)
  2374  0019D4  EF1A  F00D         	goto	l2930
  2375  0019D8                     l2916:
  2376                           
  2377                           ; BSR set to: 0
  2378  0019D8  05E5               	decf	_FUNCTION& (0+255),w,b
  2379  0019DA  A4D8               	btfss	status,2,c
  2380  0019DC  EFF2  F00C         	goto	u2091
  2381  0019E0  EFF4  F00C         	goto	u2090
  2382  0019E4                     u2091:
  2383  0019E4  EF1A  F00D         	goto	l2930
  2384  0019E8                     u2090:
  2385  0019E8                     
  2386                           ; BSR set to: 0
  2387                           ;main.c: 38:             {;main.c: 39:                 printLCD_string(0,"Pump heat F3: 
      +                            ");
  2388  0019E8  0E00               	movlw	0
  2389  0019EA  6F72               	movwf	(printLCD_string@line+1)& (0+255),b
  2390  0019EC  0E00               	movlw	0
  2391  0019EE  6F71               	movwf	printLCD_string@line& (0+255),b
  2392  0019F0  0E23               	movlw	low STR_3
  2393  0019F2  6F73               	movwf	printLCD_string@array& (0+255),b
  2394  0019F4  0E10               	movlw	high STR_3
  2395  0019F6  6F74               	movwf	(printLCD_string@array+1)& (0+255),b
  2396  0019F8  EC82  F017         	call	_printLCD_string	;wreg free
  2397  0019FC  EFE6  F00C         	goto	l2914
  2398  001A00                     l2922:
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;main.c: 44:             time_each_state = 20;
  2402  001A00  0E00               	movlw	0
  2403  001A02  6FEA               	movwf	(_time_each_state+1)& (0+255),b
  2404  001A04  0E14               	movlw	20
  2405  001A06  6FE9               	movwf	_time_each_state& (0+255),b
  2406                           
  2407                           ;main.c: 45:             if (FUNCTION == Heater) FUNCTION = Heat_pumper;
  2408  001A08  51E5               	movf	_FUNCTION& (0+255),w,b
  2409  001A0A  A4D8               	btfss	status,2,c
  2410  001A0C  EF0A  F00D         	goto	u2101
  2411  001A10  EF0C  F00D         	goto	u2100
  2412  001A14                     u2101:
  2413  001A14  EF10  F00D         	goto	l2926
  2414  001A18                     u2100:
  2415  001A18                     
  2416                           ; BSR set to: 0
  2417  001A18  0E01               	movlw	1
  2418  001A1A  6FE5               	movwf	_FUNCTION& (0+255),b
  2419  001A1C  EF1A  F00D         	goto	l2930
  2420  001A20                     l2926:
  2421                           
  2422                           ; BSR set to: 0
  2423  001A20  05E5               	decf	_FUNCTION& (0+255),w,b
  2424  001A22  A4D8               	btfss	status,2,c
  2425  001A24  EF16  F00D         	goto	u2111
  2426  001A28  EF18  F00D         	goto	u2110
  2427  001A2C                     u2111:
  2428  001A2C  EF1A  F00D         	goto	l2930
  2429  001A30                     u2110:
  2430  001A30                     
  2431                           ; BSR set to: 0
  2432  001A30  0E00               	movlw	0
  2433  001A32  6FE5               	movwf	_FUNCTION& (0+255),b
  2434  001A34                     l2930:
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;main.c: 49:         if (turn_fan3 == 1)
  2438  001A34  05D8               	decf	_turn_fan3& (0+255),w,b
  2439  001A36  11D9               	iorwf	(_turn_fan3+1)& (0+255),w,b
  2440  001A38  A4D8               	btfss	status,2,c
  2441  001A3A  EF21  F00D         	goto	u2121
  2442  001A3E  EF23  F00D         	goto	u2120
  2443  001A42                     u2121:
  2444  001A42  EF5B  F00D         	goto	l2938
  2445  001A46                     u2120:
  2446  001A46                     
  2447                           ; BSR set to: 0
  2448                           ;main.c: 58:             {;main.c: 59:                 printLCD_char(0,13,fan3/10+'0');
  2449  001A46  0E00               	movlw	0
  2450  001A48  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2451  001A4A  0E00               	movlw	0
  2452  001A4C  6F70               	movwf	printLCD_char@line& (0+255),b
  2453  001A4E  0E0D               	movlw	13
  2454  001A50  6F72               	movwf	printLCD_char@position& (0+255),b
  2455  001A52  C0E6  F068         	movff	_fan3,___awdiv@dividend
  2456  001A56  6B69               	clrf	(___awdiv@dividend+1)& (0+255),b
  2457  001A58  0E00               	movlw	0
  2458  001A5A  6F6B               	movwf	(___awdiv@divisor+1)& (0+255),b
  2459  001A5C  0E0A               	movlw	10
  2460  001A5E  6F6A               	movwf	___awdiv@divisor& (0+255),b
  2461  001A60  ECBA  F011         	call	___awdiv	;wreg free
  2462  001A64  0100               	movlb	0	; () banked
  2463  001A66  5168               	movf	?___awdiv& (0+255),w,b
  2464  001A68  0F30               	addlw	48
  2465  001A6A  6F73               	movwf	printLCD_char@c& (0+255),b
  2466  001A6C  ECD8  F016         	call	_printLCD_char	;wreg free
  2467                           
  2468                           ;main.c: 60:                 printLCD_char(0,14,fan3%10+'0');
  2469  001A70  0E00               	movlw	0
  2470  001A72  0100               	movlb	0	; () banked
  2471  001A74  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2472  001A76  0E00               	movlw	0
  2473  001A78  6F70               	movwf	printLCD_char@line& (0+255),b
  2474  001A7A  0E0E               	movlw	14
  2475  001A7C  6F72               	movwf	printLCD_char@position& (0+255),b
  2476  001A7E  C0E6  F068         	movff	_fan3,___awmod@dividend
  2477  001A82  6B69               	clrf	(___awmod@dividend+1)& (0+255),b
  2478  001A84  0E00               	movlw	0
  2479  001A86  6F6B               	movwf	(___awmod@divisor+1)& (0+255),b
  2480  001A88  0E0A               	movlw	10
  2481  001A8A  6F6A               	movwf	___awmod@divisor& (0+255),b
  2482  001A8C  ECD7  F012         	call	___awmod	;wreg free
  2483  001A90  0100               	movlb	0	; () banked
  2484  001A92  5168               	movf	?___awmod& (0+255),w,b
  2485  001A94  0F30               	addlw	48
  2486  001A96  6F73               	movwf	printLCD_char@c& (0+255),b
  2487  001A98  ECD8  F016         	call	_printLCD_char	;wreg free
  2488                           
  2489                           ;main.c: 61:                 printLCD_char(0 , 15 , ' ');
  2490  001A9C  0E00               	movlw	0
  2491  001A9E  0100               	movlb	0	; () banked
  2492  001AA0  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2493  001AA2  0E00               	movlw	0
  2494  001AA4  6F70               	movwf	printLCD_char@line& (0+255),b
  2495  001AA6  0E0F               	movlw	15
  2496  001AA8  6F72               	movwf	printLCD_char@position& (0+255),b
  2497  001AAA  0E20               	movlw	32
  2498  001AAC  6F73               	movwf	printLCD_char@c& (0+255),b
  2499  001AAE  ECD8  F016         	call	_printLCD_char	;wreg free
  2500  001AB2  EF7B  F00D         	goto	l2940
  2501  001AB6                     l2938:
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;main.c: 65:         {;main.c: 66:             printLCD_char(0 , 13 , 'O');
  2505  001AB6  0E00               	movlw	0
  2506  001AB8  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2507  001ABA  0E00               	movlw	0
  2508  001ABC  6F70               	movwf	printLCD_char@line& (0+255),b
  2509  001ABE  0E0D               	movlw	13
  2510  001AC0  6F72               	movwf	printLCD_char@position& (0+255),b
  2511  001AC2  0E4F               	movlw	79
  2512  001AC4  6F73               	movwf	printLCD_char@c& (0+255),b
  2513  001AC6  ECD8  F016         	call	_printLCD_char	;wreg free
  2514                           
  2515                           ;main.c: 67:             printLCD_char(0 , 14, 'F');
  2516  001ACA  0E00               	movlw	0
  2517  001ACC  0100               	movlb	0	; () banked
  2518  001ACE  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2519  001AD0  0E00               	movlw	0
  2520  001AD2  6F70               	movwf	printLCD_char@line& (0+255),b
  2521  001AD4  0E0E               	movlw	14
  2522  001AD6  6F72               	movwf	printLCD_char@position& (0+255),b
  2523  001AD8  0E46               	movlw	70
  2524  001ADA  6F73               	movwf	printLCD_char@c& (0+255),b
  2525  001ADC  ECD8  F016         	call	_printLCD_char	;wreg free
  2526                           
  2527                           ;main.c: 68:             printLCD_char(0 , 15 , 'F');
  2528  001AE0  0E00               	movlw	0
  2529  001AE2  0100               	movlb	0	; () banked
  2530  001AE4  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2531  001AE6  0E00               	movlw	0
  2532  001AE8  6F70               	movwf	printLCD_char@line& (0+255),b
  2533  001AEA  0E0F               	movlw	15
  2534  001AEC  6F72               	movwf	printLCD_char@position& (0+255),b
  2535  001AEE  0E46               	movlw	70
  2536  001AF0  6F73               	movwf	printLCD_char@c& (0+255),b
  2537  001AF2  ECD8  F016         	call	_printLCD_char	;wreg free
  2538  001AF6                     l2940:
  2539                           
  2540                           ;main.c: 70:         check_off = 1;
  2541  001AF6  0E00               	movlw	0
  2542  001AF8  0100               	movlb	0	; () banked
  2543  001AFA  6FE8               	movwf	(heater_heatpumper@check_off+1)& (0+255),b
  2544  001AFC  0E01               	movlw	1
  2545  001AFE  6FE7               	movwf	heater_heatpumper@check_off& (0+255),b
  2546                           
  2547                           ;main.c: 71:     }
  2548  001B00  EFEF  F00D         	goto	l460
  2549  001B04                     l2942:
  2550                           
  2551                           ; BSR set to: 0
  2552  001B04  51E4               	movf	_state& (0+255),w,b
  2553  001B06  A4D8               	btfss	status,2,c
  2554  001B08  EF88  F00D         	goto	u2131
  2555  001B0C  EF8A  F00D         	goto	u2130
  2556  001B10                     u2131:
  2557  001B10  EFEF  F00D         	goto	l460
  2558  001B14                     u2130:
  2559  001B14                     
  2560                           ; BSR set to: 0
  2561                           ;main.c: 73:         if (check_off==1)
  2562  001B14  05E7               	decf	heater_heatpumper@check_off& (0+255),w,b
  2563  001B16  11E8               	iorwf	(heater_heatpumper@check_off+1)& (0+255),w,b
  2564  001B18  A4D8               	btfss	status,2,c
  2565  001B1A  EF91  F00D         	goto	u2141
  2566  001B1E  EF93  F00D         	goto	u2140
  2567  001B22                     u2141:
  2568  001B22  EFEF  F00D         	goto	l460
  2569  001B26                     u2140:
  2570  001B26                     
  2571                           ; BSR set to: 0
  2572                           ;main.c: 74:         {;main.c: 75:             printLCD_string(0,"OFF       F3:  ");
  2573  001B26  0E00               	movlw	0
  2574  001B28  6F72               	movwf	(printLCD_string@line+1)& (0+255),b
  2575  001B2A  0E00               	movlw	0
  2576  001B2C  6F71               	movwf	printLCD_string@line& (0+255),b
  2577  001B2E  0E34               	movlw	low STR_4
  2578  001B30  6F73               	movwf	printLCD_string@array& (0+255),b
  2579  001B32  0E10               	movlw	high STR_4
  2580  001B34  6F74               	movwf	(printLCD_string@array+1)& (0+255),b
  2581  001B36  EC82  F017         	call	_printLCD_string	;wreg free
  2582  001B3A                     
  2583                           ;main.c: 76:             printLCD_char(0 , 13 , 'O');
  2584  001B3A  0E00               	movlw	0
  2585  001B3C  0100               	movlb	0	; () banked
  2586  001B3E  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2587  001B40  0E00               	movlw	0
  2588  001B42  6F70               	movwf	printLCD_char@line& (0+255),b
  2589  001B44  0E0D               	movlw	13
  2590  001B46  6F72               	movwf	printLCD_char@position& (0+255),b
  2591  001B48  0E4F               	movlw	79
  2592  001B4A  6F73               	movwf	printLCD_char@c& (0+255),b
  2593  001B4C  ECD8  F016         	call	_printLCD_char	;wreg free
  2594  001B50                     
  2595                           ;main.c: 77:             printLCD_char(0 , 14, 'F');
  2596  001B50  0E00               	movlw	0
  2597  001B52  0100               	movlb	0	; () banked
  2598  001B54  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2599  001B56  0E00               	movlw	0
  2600  001B58  6F70               	movwf	printLCD_char@line& (0+255),b
  2601  001B5A  0E0E               	movlw	14
  2602  001B5C  6F72               	movwf	printLCD_char@position& (0+255),b
  2603  001B5E  0E46               	movlw	70
  2604  001B60  6F73               	movwf	printLCD_char@c& (0+255),b
  2605  001B62  ECD8  F016         	call	_printLCD_char	;wreg free
  2606  001B66                     
  2607                           ;main.c: 78:             printLCD_char(0 , 15 , 'F');
  2608  001B66  0E00               	movlw	0
  2609  001B68  0100               	movlb	0	; () banked
  2610  001B6A  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2611  001B6C  0E00               	movlw	0
  2612  001B6E  6F70               	movwf	printLCD_char@line& (0+255),b
  2613  001B70  0E0F               	movlw	15
  2614  001B72  6F72               	movwf	printLCD_char@position& (0+255),b
  2615  001B74  0E46               	movlw	70
  2616  001B76  6F73               	movwf	printLCD_char@c& (0+255),b
  2617  001B78  ECD8  F016         	call	_printLCD_char	;wreg free
  2618  001B7C                     
  2619                           ;main.c: 79:             printLCD_char(1 , 5 , '0');
  2620  001B7C  0E00               	movlw	0
  2621  001B7E  0100               	movlb	0	; () banked
  2622  001B80  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2623  001B82  0E01               	movlw	1
  2624  001B84  6F70               	movwf	printLCD_char@line& (0+255),b
  2625  001B86  0E05               	movlw	5
  2626  001B88  6F72               	movwf	printLCD_char@position& (0+255),b
  2627  001B8A  0E30               	movlw	48
  2628  001B8C  6F73               	movwf	printLCD_char@c& (0+255),b
  2629  001B8E  ECD8  F016         	call	_printLCD_char	;wreg free
  2630  001B92                     
  2631                           ;main.c: 80:             printLCD_char(1 , 6 , '0');
  2632  001B92  0E00               	movlw	0
  2633  001B94  0100               	movlb	0	; () banked
  2634  001B96  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2635  001B98  0E01               	movlw	1
  2636  001B9A  6F70               	movwf	printLCD_char@line& (0+255),b
  2637  001B9C  0E06               	movlw	6
  2638  001B9E  6F72               	movwf	printLCD_char@position& (0+255),b
  2639  001BA0  0E30               	movlw	48
  2640  001BA2  6F73               	movwf	printLCD_char@c& (0+255),b
  2641  001BA4  ECD8  F016         	call	_printLCD_char	;wreg free
  2642  001BA8                     
  2643                           ;main.c: 81:             printLCD_char(1 , 14 ,'0');
  2644  001BA8  0E00               	movlw	0
  2645  001BAA  0100               	movlb	0	; () banked
  2646  001BAC  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2647  001BAE  0E01               	movlw	1
  2648  001BB0  6F70               	movwf	printLCD_char@line& (0+255),b
  2649  001BB2  0E0E               	movlw	14
  2650  001BB4  6F72               	movwf	printLCD_char@position& (0+255),b
  2651  001BB6  0E30               	movlw	48
  2652  001BB8  6F73               	movwf	printLCD_char@c& (0+255),b
  2653  001BBA  ECD8  F016         	call	_printLCD_char	;wreg free
  2654  001BBE                     
  2655                           ;main.c: 82:             printLCD_char(1 , 15 ,'0');
  2656  001BBE  0E00               	movlw	0
  2657  001BC0  0100               	movlb	0	; () banked
  2658  001BC2  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2659  001BC4  0E01               	movlw	1
  2660  001BC6  6F70               	movwf	printLCD_char@line& (0+255),b
  2661  001BC8  0E0F               	movlw	15
  2662  001BCA  6F72               	movwf	printLCD_char@position& (0+255),b
  2663  001BCC  0E30               	movlw	48
  2664  001BCE  6F73               	movwf	printLCD_char@c& (0+255),b
  2665  001BD0  ECD8  F016         	call	_printLCD_char	;wreg free
  2666  001BD4                     
  2667                           ;main.c: 83:             check_off =0;
  2668  001BD4  0E00               	movlw	0
  2669  001BD6  0100               	movlb	0	; () banked
  2670  001BD8  6FE8               	movwf	(heater_heatpumper@check_off+1)& (0+255),b
  2671  001BDA  0E00               	movlw	0
  2672  001BDC  6FE7               	movwf	heater_heatpumper@check_off& (0+255),b
  2673  001BDE                     l460:
  2674                           
  2675                           ; BSR set to: 0
  2676  001BDE  0012               	return		;funcret
  2677  001BE0                     __end_of_heater_heatpumper:
  2678                           	opt callstack 0
  2679                           
  2680 ;; *************** function _readDHT *****************
  2681 ;; Defined at:
  2682 ;;		line 22 in file "dht11.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;		None
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;  temp            1   15[BANK0 ] unsigned char 
  2687 ;;  check_sum       1   14[BANK0 ] unsigned char 
  2688 ;; Return value:  Size  Location     Type
  2689 ;;                  1    wreg      unsigned char 
  2690 ;; Registers used:
  2691 ;;		wreg, status,2, status,0, cstack
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2701 ;;Total ram usage:        4 bytes
  2702 ;; Hardware stack levels used:    1
  2703 ;; Hardware stack levels required when called:    7
  2704 ;; This function calls:
  2705 ;;		_getByte
  2706 ;; This function is called by:
  2707 ;;		_get_temp_humid
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711                           	psect	text10
  2712  001DEE                     __ptext10:
  2713                           	opt callstack 0
  2714  001DEE                     _readDHT:
  2715                           	opt callstack 22
  2716  001DEE                     
  2717                           ;dht11.c: 23:     char check_sum;;dht11.c: 24:     TRISDbits.TRISD0 = 0;
  2718  001DEE  9095               	bcf	149,0,c	;volatile
  2719                           
  2720                           ;dht11.c: 25:     LATDbits.LATD0 = 0;
  2721  001DF0  908C               	bcf	140,0,c	;volatile
  2722  001DF2                     
  2723                           ;dht11.c: 26:     _delay((unsigned long)((20)*(10000000/4000.0)));
  2724  001DF2  0E41               	movlw	65
  2725  001DF4  0100               	movlb	0	; () banked
  2726  001DF6  6F6C               	movwf	??_readDHT& (0+255),b
  2727  001DF8  0EEE               	movlw	238
  2728  001DFA                     u2357:
  2729  001DFA  2EE8               	decfsz	wreg,f,c
  2730  001DFC  D7FE               	bra	u2357
  2731  001DFE  2F6C               	decfsz	??_readDHT& (0+255),f,b
  2732  001E00  D7FC               	bra	u2357
  2733  001E02  F000               	nop	
  2734  001E04                     
  2735                           ;dht11.c: 28:     LATDbits.LATD0 = 1;
  2736  001E04  808C               	bsf	140,0,c	;volatile
  2737                           
  2738                           ;dht11.c: 29:     _delay((unsigned long)((20)*(10000000/4000000.0)));
  2739  001E06  0E10               	movlw	16
  2740  001E08                     u2367:
  2741  001E08  2EE8               	decfsz	wreg,f,c
  2742  001E0A  D7FE               	bra	u2367
  2743  001E0C  D000               	nop2	
  2744  001E0E                     
  2745                           ;dht11.c: 30:     TRISDbits.TRISD0 = 1;
  2746  001E0E  8095               	bsf	149,0,c	;volatile
  2747  001E10                     
  2748                           ;dht11.c: 32:     time_out_dht = 100;
  2749  001E10  0E00               	movlw	0
  2750  001E12  6E5E               	movwf	(_time_out_dht+1)^0,c
  2751  001E14  0E64               	movlw	100
  2752  001E16  6E5D               	movwf	_time_out_dht^0,c
  2753                           
  2754                           ;dht11.c: 33:     while(PORTDbits.RD0 & 1) {
  2755  001E18  EF1A  F00F         	goto	l624
  2756  001E1C                     l2798:
  2757                           
  2758                           ;dht11.c: 34:         if(time_out_dht == 0) return 0;
  2759  001E1C  505D               	movf	_time_out_dht^0,w,c
  2760  001E1E  105E               	iorwf	(_time_out_dht+1)^0,w,c
  2761  001E20  A4D8               	btfss	status,2,c
  2762  001E22  EF15  F00F         	goto	u1891
  2763  001E26  EF17  F00F         	goto	u1890
  2764  001E2A                     u1891:
  2765  001E2A  EF1A  F00F         	goto	l624
  2766  001E2E                     u1890:
  2767  001E2E                     l2800:
  2768  001E2E  0E00               	movlw	0
  2769  001E30  EF80  F00F         	goto	l627
  2770  001E34                     l624:
  2771                           
  2772                           ;dht11.c: 33:     while(PORTDbits.RD0 & 1) {
  2773  001E34  B083               	btfsc	131,0,c	;volatile
  2774  001E36  EF1F  F00F         	goto	u1901
  2775  001E3A  EF21  F00F         	goto	u1900
  2776  001E3E                     u1901:
  2777  001E3E  EF0E  F00F         	goto	l2798
  2778  001E42                     u1900:
  2779  001E42                     
  2780                           ;dht11.c: 37:     time_out_dht = 100;
  2781  001E42  0E00               	movlw	0
  2782  001E44  6E5E               	movwf	(_time_out_dht+1)^0,c
  2783  001E46  0E64               	movlw	100
  2784  001E48  6E5D               	movwf	_time_out_dht^0,c
  2785                           
  2786                           ;dht11.c: 38:     while(!PORTDbits.RD0 & 1) {
  2787  001E4A  EF32  F00F         	goto	l2812
  2788  001E4E                     l2806:
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;dht11.c: 39:         if(time_out_dht == 0) return 0;
  2792  001E4E  505D               	movf	_time_out_dht^0,w,c
  2793  001E50  105E               	iorwf	(_time_out_dht+1)^0,w,c
  2794  001E52  A4D8               	btfss	status,2,c
  2795  001E54  EF2E  F00F         	goto	u1911
  2796  001E58  EF30  F00F         	goto	u1910
  2797  001E5C                     u1911:
  2798  001E5C  EF32  F00F         	goto	l2812
  2799  001E60                     u1910:
  2800  001E60  EF17  F00F         	goto	l2800
  2801  001E64                     l2812:
  2802                           
  2803                           ;dht11.c: 38:     while(!PORTDbits.RD0 & 1) {
  2804  001E64  A083               	btfss	131,0,c	;volatile
  2805  001E66  EF37  F00F         	goto	u1921
  2806  001E6A  EF3A  F00F         	goto	u1920
  2807  001E6E                     u1921:
  2808  001E6E  0E01               	movlw	1
  2809  001E70  EF3B  F00F         	goto	u1930
  2810  001E74                     u1920:
  2811  001E74  0E00               	movlw	0
  2812  001E76                     u1930:
  2813  001E76  0100               	movlb	0	; () banked
  2814  001E78  6F6C               	movwf	??_readDHT& (0+255),b
  2815  001E7A  6B6D               	clrf	(??_readDHT+1)& (0+255),b
  2816  001E7C  B16C               	btfsc	??_readDHT& (0+255),0,b
  2817  001E7E  EF43  F00F         	goto	u1941
  2818  001E82  EF45  F00F         	goto	u1940
  2819  001E86                     u1941:
  2820  001E86  EF27  F00F         	goto	l2806
  2821  001E8A                     u1940:
  2822  001E8A                     
  2823                           ; BSR set to: 0
  2824                           ;dht11.c: 42:     time_out_dht = 100;
  2825  001E8A  0E00               	movlw	0
  2826  001E8C  6E5E               	movwf	(_time_out_dht+1)^0,c
  2827  001E8E  0E64               	movlw	100
  2828  001E90  6E5D               	movwf	_time_out_dht^0,c
  2829                           
  2830                           ;dht11.c: 43:     while(PORTDbits.RD0 & 1) {
  2831  001E92  EF56  F00F         	goto	l633
  2832  001E96                     l2816:
  2833                           
  2834                           ;dht11.c: 44:         if(time_out_dht == 0) return 0;
  2835  001E96  505D               	movf	_time_out_dht^0,w,c
  2836  001E98  105E               	iorwf	(_time_out_dht+1)^0,w,c
  2837  001E9A  A4D8               	btfss	status,2,c
  2838  001E9C  EF52  F00F         	goto	u1951
  2839  001EA0  EF54  F00F         	goto	u1950
  2840  001EA4                     u1951:
  2841  001EA4  EF56  F00F         	goto	l633
  2842  001EA8                     u1950:
  2843  001EA8  EF17  F00F         	goto	l2800
  2844  001EAC                     l633:
  2845                           
  2846                           ;dht11.c: 43:     while(PORTDbits.RD0 & 1) {
  2847  001EAC  B083               	btfsc	131,0,c	;volatile
  2848  001EAE  EF5B  F00F         	goto	u1961
  2849  001EB2  EF5D  F00F         	goto	u1960
  2850  001EB6                     u1961:
  2851  001EB6  EF4B  F00F         	goto	l2816
  2852  001EBA                     u1960:
  2853  001EBA                     
  2854                           ;dht11.c: 46:     humid[0] = getByte();
  2855  001EBA  EC81  F00F         	call	_getByte	;wreg free
  2856  001EBE  0100               	movlb	0	; () banked
  2857  001EC0  6FE0               	movwf	_humid& (0+255),b
  2858                           
  2859                           ;dht11.c: 47:     humid[1] = getByte();
  2860  001EC2  EC81  F00F         	call	_getByte	;wreg free
  2861  001EC6  0100               	movlb	0	; () banked
  2862  001EC8  6FE1               	movwf	(_humid+1)& (0+255),b
  2863                           
  2864                           ;dht11.c: 48:     temper[0] = getByte();
  2865  001ECA  EC81  F00F         	call	_getByte	;wreg free
  2866  001ECE  0100               	movlb	0	; () banked
  2867  001ED0  6FDE               	movwf	_temper& (0+255),b
  2868                           
  2869                           ;dht11.c: 49:     temper[1] = getByte();
  2870  001ED2  EC81  F00F         	call	_getByte	;wreg free
  2871  001ED6  0100               	movlb	0	; () banked
  2872  001ED8  6FDF               	movwf	(_temper+1)& (0+255),b
  2873                           
  2874                           ;dht11.c: 50:     check_sum = getByte();
  2875  001EDA  EC81  F00F         	call	_getByte	;wreg free
  2876  001EDE  0100               	movlb	0	; () banked
  2877  001EE0  6F6E               	movwf	readDHT@check_sum& (0+255),b
  2878  001EE2                     
  2879                           ; BSR set to: 0
  2880                           ;dht11.c: 51:     char temp = (humid[0] + humid[1] + temper[0] + temper[1] ) & 0xFF;
  2881  001EE2  51E1               	movf	(_humid+1)& (0+255),w,b
  2882  001EE4  25DF               	addwf	(_temper+1)& (0+255),w,b
  2883  001EE6  25E0               	addwf	_humid& (0+255),w,b
  2884  001EE8  25DE               	addwf	_temper& (0+255),w,b
  2885  001EEA  6F6F               	movwf	readDHT@temp& (0+255),b
  2886  001EEC                     
  2887                           ; BSR set to: 0
  2888                           ;dht11.c: 64:     if( temp == check_sum ) return 1;
  2889  001EEC  516E               	movf	readDHT@check_sum& (0+255),w,b
  2890  001EEE  196F               	xorwf	readDHT@temp& (0+255),w,b
  2891  001EF0  A4D8               	btfss	status,2,c
  2892  001EF2  EF7D  F00F         	goto	u1971
  2893  001EF6  EF7F  F00F         	goto	u1970
  2894  001EFA                     u1971:
  2895  001EFA  EF17  F00F         	goto	l2800
  2896  001EFE                     u1970:
  2897  001EFE                     
  2898                           ; BSR set to: 0
  2899  001EFE  0E01               	movlw	1
  2900  001F00                     l627:
  2901  001F00  0012               	return		;funcret
  2902  001F02                     __end_of_readDHT:
  2903                           	opt callstack 0
  2904                           
  2905 ;; *************** function _getByte *****************
  2906 ;; Defined at:
  2907 ;;		line 3 in file "dht11.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;		None
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;  j               1   11[BANK0 ] unsigned char 
  2912 ;;  i               1   10[BANK0 ] unsigned char 
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      unsigned char 
  2915 ;; Registers used:
  2916 ;;		wreg, status,2, status,0
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2924 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;Total ram usage:        4 bytes
  2927 ;; Hardware stack levels used:    1
  2928 ;; Hardware stack levels required when called:    6
  2929 ;; This function calls:
  2930 ;;		Nothing
  2931 ;; This function is called by:
  2932 ;;		_readDHT
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text11
  2937  001F02                     __ptext11:
  2938                           	opt callstack 0
  2939  001F02                     _getByte:
  2940                           	opt callstack 22
  2941  001F02                     
  2942                           ;dht11.c: 4:     char i, j;;dht11.c: 5:     for(j = 0; j < 8; j++){
  2943  001F02  0E00               	movlw	0
  2944  001F04  0100               	movlb	0	; () banked
  2945  001F06  6F6B               	movwf	getByte@j& (0+255),b
  2946  001F08                     l2478:
  2947                           
  2948                           ; BSR set to: 0
  2949                           ;dht11.c: 6:         time_out_dht = 100;
  2950  001F08  0E00               	movlw	0
  2951  001F0A  6E5E               	movwf	(_time_out_dht+1)^0,c
  2952  001F0C  0E64               	movlw	100
  2953  001F0E  6E5D               	movwf	_time_out_dht^0,c
  2954                           
  2955                           ;dht11.c: 7:         while(!PORTDbits.RD0 & 1)
  2956  001F10  EF96  F00F         	goto	l2486
  2957  001F14                     l2480:
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;dht11.c: 8:             if(time_out_dht == 0) return 0;
  2961  001F14  505D               	movf	_time_out_dht^0,w,c
  2962  001F16  105E               	iorwf	(_time_out_dht+1)^0,w,c
  2963  001F18  A4D8               	btfss	status,2,c
  2964  001F1A  EF91  F00F         	goto	u1371
  2965  001F1E  EF93  F00F         	goto	u1370
  2966  001F22                     u1371:
  2967  001F22  EF96  F00F         	goto	l2486
  2968  001F26                     u1370:
  2969  001F26                     l2482:
  2970  001F26  0E00               	movlw	0
  2971  001F28  EF04  F010         	goto	l614
  2972  001F2C                     l2486:
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;dht11.c: 7:         while(!PORTDbits.RD0 & 1)
  2976  001F2C  A083               	btfss	131,0,c	;volatile
  2977  001F2E  EF9B  F00F         	goto	u1381
  2978  001F32  EF9E  F00F         	goto	u1380
  2979  001F36                     u1381:
  2980  001F36  0E01               	movlw	1
  2981  001F38  EF9F  F00F         	goto	u1390
  2982  001F3C                     u1380:
  2983  001F3C  0E00               	movlw	0
  2984  001F3E                     u1390:
  2985  001F3E  6F68               	movwf	??_getByte& (0+255),b
  2986  001F40  6B69               	clrf	(??_getByte+1)& (0+255),b
  2987  001F42  B168               	btfsc	??_getByte& (0+255),0,b
  2988  001F44  EFA6  F00F         	goto	u1401
  2989  001F48  EFA8  F00F         	goto	u1400
  2990  001F4C                     u1401:
  2991  001F4C  EF8A  F00F         	goto	l2480
  2992  001F50                     u1400:
  2993  001F50                     
  2994                           ; BSR set to: 0
  2995                           ;dht11.c: 9:         _delay((unsigned long)((30)*(10000000/4000000.0)));
  2996  001F50  0E19               	movlw	25
  2997  001F52                     u2377:
  2998  001F52  2EE8               	decfsz	wreg,f,c
  2999  001F54  D7FE               	bra	u2377
  3000  001F56                     
  3001                           ;dht11.c: 10:         if(!PORTDbits.RD0 & 1)
  3002  001F56  A083               	btfss	131,0,c	;volatile
  3003  001F58  EFB0  F00F         	goto	u1411
  3004  001F5C  EFB3  F00F         	goto	u1410
  3005  001F60                     u1411:
  3006  001F60  0E01               	movlw	1
  3007  001F62  EFB4  F00F         	goto	u1420
  3008  001F66                     u1410:
  3009  001F66  0E00               	movlw	0
  3010  001F68                     u1420:
  3011  001F68  0100               	movlb	0	; () banked
  3012  001F6A  6F68               	movwf	??_getByte& (0+255),b
  3013  001F6C  6B69               	clrf	(??_getByte+1)& (0+255),b
  3014  001F6E  A168               	btfss	??_getByte& (0+255),0,b
  3015  001F70  EFBC  F00F         	goto	u1431
  3016  001F74  EFBE  F00F         	goto	u1430
  3017  001F78                     u1431:
  3018  001F78  EFD1  F00F         	goto	l2494
  3019  001F7C                     u1430:
  3020  001F7C                     
  3021                           ; BSR set to: 0
  3022                           ;dht11.c: 11:             i&= ~(1<<(7 - j));
  3023  001F7C  516B               	movf	getByte@j& (0+255),w,b
  3024  001F7E  0807               	sublw	7
  3025  001F80  6F68               	movwf	??_getByte& (0+255),b
  3026  001F82  0E01               	movlw	1
  3027  001F84  6F69               	movwf	(??_getByte+1)& (0+255),b
  3028  001F86  2B68               	incf	??_getByte& (0+255),f,b
  3029  001F88  EFC8  F00F         	goto	u1444
  3030  001F8C                     u1445:
  3031  001F8C  90D8               	bcf	status,0,c
  3032  001F8E  3769               	rlcf	(??_getByte+1)& (0+255),f,b
  3033  001F90                     u1444:
  3034  001F90  2F68               	decfsz	??_getByte& (0+255),f,b
  3035  001F92  EFC6  F00F         	goto	u1445
  3036  001F96  0100               	movlb	0	; () banked
  3037  001F98  5169               	movf	(??_getByte+1)& (0+255),w,b
  3038  001F9A  0AFF               	xorlw	255
  3039  001F9C  176A               	andwf	getByte@i& (0+255),f,b
  3040  001F9E  EFF2  F00F         	goto	l618
  3041  001FA2                     l2494:
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;dht11.c: 13:             i|= (1 << (7 - j));
  3045  001FA2  516B               	movf	getByte@j& (0+255),w,b
  3046  001FA4  0807               	sublw	7
  3047  001FA6  6F68               	movwf	??_getByte& (0+255),b
  3048  001FA8  0E01               	movlw	1
  3049  001FAA  6F69               	movwf	(??_getByte+1)& (0+255),b
  3050  001FAC  2B68               	incf	??_getByte& (0+255),f,b
  3051  001FAE  EFDB  F00F         	goto	u1454
  3052  001FB2                     u1455:
  3053  001FB2  90D8               	bcf	status,0,c
  3054  001FB4  3769               	rlcf	(??_getByte+1)& (0+255),f,b
  3055  001FB6                     u1454:
  3056  001FB6  2F68               	decfsz	??_getByte& (0+255),f,b
  3057  001FB8  EFD9  F00F         	goto	u1455
  3058  001FBC  0100               	movlb	0	; () banked
  3059  001FBE  5169               	movf	(??_getByte+1)& (0+255),w,b
  3060  001FC0  136A               	iorwf	getByte@i& (0+255),f,b
  3061  001FC2                     
  3062                           ; BSR set to: 0
  3063                           ;dht11.c: 14:             time_out_dht = 100;
  3064  001FC2  0E00               	movlw	0
  3065  001FC4  6E5E               	movwf	(_time_out_dht+1)^0,c
  3066  001FC6  0E64               	movlw	100
  3067  001FC8  6E5D               	movwf	_time_out_dht^0,c
  3068  001FCA  EFF2  F00F         	goto	l618
  3069  001FCE                     l2498:
  3070                           
  3071                           ;dht11.c: 17:             if(time_out_dht == 0) return 0;
  3072  001FCE  505D               	movf	_time_out_dht^0,w,c
  3073  001FD0  105E               	iorwf	(_time_out_dht+1)^0,w,c
  3074  001FD2  A4D8               	btfss	status,2,c
  3075  001FD4  EFEE  F00F         	goto	u1461
  3076  001FD8  EFF0  F00F         	goto	u1460
  3077  001FDC                     u1461:
  3078  001FDC  EFF2  F00F         	goto	l618
  3079  001FE0                     u1460:
  3080  001FE0  EF93  F00F         	goto	l2482
  3081  001FE4                     l618:
  3082                           
  3083                           ;dht11.c: 16:         while(PORTDbits.RD0 & 1)
  3084  001FE4  B083               	btfsc	131,0,c	;volatile
  3085  001FE6  EFF7  F00F         	goto	u1471
  3086  001FEA  EFF9  F00F         	goto	u1470
  3087  001FEE                     u1471:
  3088  001FEE  EFE7  F00F         	goto	l2498
  3089  001FF2                     u1470:
  3090  001FF2                     
  3091                           ;dht11.c: 18:     }
  3092  001FF2  0100               	movlb	0	; () banked
  3093  001FF4  2B6B               	incf	getByte@j& (0+255),f,b
  3094  001FF6                     
  3095                           ; BSR set to: 0
  3096  001FF6  0E07               	movlw	7
  3097  001FF8  656B               	cpfsgt	getByte@j& (0+255),b
  3098  001FFA  EF01  F010         	goto	u1481
  3099  001FFE  EF03  F010         	goto	u1480
  3100  002002                     u1481:
  3101  002002  EF84  F00F         	goto	l2478
  3102  002006                     u1480:
  3103  002006                     
  3104                           ; BSR set to: 0
  3105                           ;dht11.c: 19:     return i;
  3106  002006  516A               	movf	getByte@i& (0+255),w,b
  3107  002008                     l614:
  3108  002008  0012               	return		;funcret
  3109  00200A                     __end_of_getByte:
  3110                           	opt callstack 0
  3111                           
  3112 ;; *************** function _print_temp_humid *****************
  3113 ;; Defined at:
  3114 ;;		line 88 in file "dht11.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;		None
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;		None
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  1    wreg      void 
  3121 ;; Registers used:
  3122 ;;		wreg, status,2, status,0, cstack
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;Total ram usage:        0 bytes
  3133 ;; Hardware stack levels used:    1
  3134 ;; Hardware stack levels required when called:   10
  3135 ;; This function calls:
  3136 ;;		___awdiv
  3137 ;;		___awmod
  3138 ;;		_printLCD_char
  3139 ;; This function is called by:
  3140 ;;		_get_temp_humid
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           	psect	text12
  3145  0024FC                     __ptext12:
  3146                           	opt callstack 0
  3147  0024FC                     _print_temp_humid:
  3148                           	opt callstack 19
  3149  0024FC                     
  3150                           ;dht11.c: 90:     printLCD_char(1 , 5 , temper[0]/10 +'0');
  3151  0024FC  0E00               	movlw	0
  3152  0024FE  0100               	movlb	0	; () banked
  3153  002500  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  3154  002502  0E01               	movlw	1
  3155  002504  6F70               	movwf	printLCD_char@line& (0+255),b
  3156  002506  0E05               	movlw	5
  3157  002508  6F72               	movwf	printLCD_char@position& (0+255),b
  3158  00250A  C0DE  F068         	movff	_temper,___awdiv@dividend
  3159  00250E  6B69               	clrf	(___awdiv@dividend+1)& (0+255),b
  3160  002510  0E00               	movlw	0
  3161  002512  6F6B               	movwf	(___awdiv@divisor+1)& (0+255),b
  3162  002514  0E0A               	movlw	10
  3163  002516  6F6A               	movwf	___awdiv@divisor& (0+255),b
  3164  002518  ECBA  F011         	call	___awdiv	;wreg free
  3165  00251C  0100               	movlb	0	; () banked
  3166  00251E  5168               	movf	?___awdiv& (0+255),w,b
  3167  002520  0F30               	addlw	48
  3168  002522  6F73               	movwf	printLCD_char@c& (0+255),b
  3169  002524  ECD8  F016         	call	_printLCD_char	;wreg free
  3170                           
  3171                           ;dht11.c: 91:     printLCD_char(1 , 6 , temper[0]%10 +'0');
  3172  002528  0E00               	movlw	0
  3173  00252A  0100               	movlb	0	; () banked
  3174  00252C  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  3175  00252E  0E01               	movlw	1
  3176  002530  6F70               	movwf	printLCD_char@line& (0+255),b
  3177  002532  0E06               	movlw	6
  3178  002534  6F72               	movwf	printLCD_char@position& (0+255),b
  3179  002536  C0DE  F068         	movff	_temper,___awmod@dividend
  3180  00253A  6B69               	clrf	(___awmod@dividend+1)& (0+255),b
  3181  00253C  0E00               	movlw	0
  3182  00253E  6F6B               	movwf	(___awmod@divisor+1)& (0+255),b
  3183  002540  0E0A               	movlw	10
  3184  002542  6F6A               	movwf	___awmod@divisor& (0+255),b
  3185  002544  ECD7  F012         	call	___awmod	;wreg free
  3186  002548  0100               	movlb	0	; () banked
  3187  00254A  5168               	movf	?___awmod& (0+255),w,b
  3188  00254C  0F30               	addlw	48
  3189  00254E  6F73               	movwf	printLCD_char@c& (0+255),b
  3190  002550  ECD8  F016         	call	_printLCD_char	;wreg free
  3191                           
  3192                           ;dht11.c: 92:     printLCD_char(1 , 14 , humid[0]/10 +'0');
  3193  002554  0E00               	movlw	0
  3194  002556  0100               	movlb	0	; () banked
  3195  002558  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  3196  00255A  0E01               	movlw	1
  3197  00255C  6F70               	movwf	printLCD_char@line& (0+255),b
  3198  00255E  0E0E               	movlw	14
  3199  002560  6F72               	movwf	printLCD_char@position& (0+255),b
  3200  002562  C0E0  F068         	movff	_humid,___awdiv@dividend
  3201  002566  6B69               	clrf	(___awdiv@dividend+1)& (0+255),b
  3202  002568  0E00               	movlw	0
  3203  00256A  6F6B               	movwf	(___awdiv@divisor+1)& (0+255),b
  3204  00256C  0E0A               	movlw	10
  3205  00256E  6F6A               	movwf	___awdiv@divisor& (0+255),b
  3206  002570  ECBA  F011         	call	___awdiv	;wreg free
  3207  002574  0100               	movlb	0	; () banked
  3208  002576  5168               	movf	?___awdiv& (0+255),w,b
  3209  002578  0F30               	addlw	48
  3210  00257A  6F73               	movwf	printLCD_char@c& (0+255),b
  3211  00257C  ECD8  F016         	call	_printLCD_char	;wreg free
  3212                           
  3213                           ;dht11.c: 93:     printLCD_char(1 , 15 , humid[0]%10 +'0');
  3214  002580  0E00               	movlw	0
  3215  002582  0100               	movlb	0	; () banked
  3216  002584  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  3217  002586  0E01               	movlw	1
  3218  002588  6F70               	movwf	printLCD_char@line& (0+255),b
  3219  00258A  0E0F               	movlw	15
  3220  00258C  6F72               	movwf	printLCD_char@position& (0+255),b
  3221  00258E  C0E0  F068         	movff	_humid,___awmod@dividend
  3222  002592  6B69               	clrf	(___awmod@dividend+1)& (0+255),b
  3223  002594  0E00               	movlw	0
  3224  002596  6F6B               	movwf	(___awmod@divisor+1)& (0+255),b
  3225  002598  0E0A               	movlw	10
  3226  00259A  6F6A               	movwf	___awmod@divisor& (0+255),b
  3227  00259C  ECD7  F012         	call	___awmod	;wreg free
  3228  0025A0  0100               	movlb	0	; () banked
  3229  0025A2  5168               	movf	?___awmod& (0+255),w,b
  3230  0025A4  0F30               	addlw	48
  3231  0025A6  6F73               	movwf	printLCD_char@c& (0+255),b
  3232  0025A8  ECD8  F016         	call	_printLCD_char	;wreg free
  3233  0025AC  0012               	return		;funcret
  3234  0025AE                     __end_of_print_temp_humid:
  3235                           	opt callstack 0
  3236                           
  3237 ;; *************** function _printLCD_char *****************
  3238 ;; Defined at:
  3239 ;;		line 180 in file "BBSPI_LCD.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;  line            2   16[BANK0 ] int 
  3242 ;;  position        1   18[BANK0 ] unsigned char 
  3243 ;;  c               1   19[BANK0 ] unsigned char 
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;		None
  3246 ;; Return value:  Size  Location     Type
  3247 ;;                  1    wreg      void 
  3248 ;; Registers used:
  3249 ;;		wreg, status,2, status,0, cstack
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3255 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3258 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3259 ;;Total ram usage:        4 bytes
  3260 ;; Hardware stack levels used:    1
  3261 ;; Hardware stack levels required when called:    9
  3262 ;; This function calls:
  3263 ;;		_LCDPutChar
  3264 ;;		_LCDPutInst
  3265 ;; This function is called by:
  3266 ;;		_heater_heatpumper
  3267 ;;		_print_temp_humid
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           	psect	text13
  3272  002DB0                     __ptext13:
  3273                           	opt callstack 0
  3274  002DB0                     _printLCD_char:
  3275                           	opt callstack 20
  3276  002DB0                     
  3277                           ;BBSPI_LCD.c: 181:     if (line ==0)
  3278  002DB0  0100               	movlb	0	; () banked
  3279  002DB2  5170               	movf	printLCD_char@line& (0+255),w,b
  3280  002DB4  1171               	iorwf	(printLCD_char@line+1)& (0+255),w,b
  3281  002DB6  A4D8               	btfss	status,2,c
  3282  002DB8  EFE0  F016         	goto	u1311
  3283  002DBC  EFE2  F016         	goto	u1310
  3284  002DC0                     u1311:
  3285  002DC0  EFEC  F016         	goto	l2412
  3286  002DC4                     u1310:
  3287  002DC4                     
  3288                           ; BSR set to: 0
  3289                           ;BBSPI_LCD.c: 182:     {;BBSPI_LCD.c: 183:         LCDPutInst(0x80 + position);
  3290  002DC4  5172               	movf	printLCD_char@position& (0+255),w,b
  3291  002DC6  0F80               	addlw	128
  3292  002DC8  EC1C  F016         	call	_LCDPutInst
  3293                           
  3294                           ;BBSPI_LCD.c: 184:         LCDPutChar(c);
  3295  002DCC  0100               	movlb	0	; () banked
  3296  002DCE  5173               	movf	printLCD_char@c& (0+255),w,b
  3297  002DD0  ECB2  F015         	call	_LCDPutChar
  3298                           
  3299                           ;BBSPI_LCD.c: 185:     }
  3300  002DD4  EFFD  F016         	goto	l68
  3301  002DD8                     l2412:
  3302                           
  3303                           ; BSR set to: 0
  3304  002DD8  0570               	decf	printLCD_char@line& (0+255),w,b
  3305  002DDA  1171               	iorwf	(printLCD_char@line+1)& (0+255),w,b
  3306  002DDC  A4D8               	btfss	status,2,c
  3307  002DDE  EFF3  F016         	goto	u1321
  3308  002DE2  EFF5  F016         	goto	u1320
  3309  002DE6                     u1321:
  3310  002DE6  EFFD  F016         	goto	l68
  3311  002DEA                     u1320:
  3312  002DEA                     
  3313                           ; BSR set to: 0
  3314                           ;BBSPI_LCD.c: 187:         LCDPutInst(0xC0 + position);
  3315  002DEA  5172               	movf	printLCD_char@position& (0+255),w,b
  3316  002DEC  0FC0               	addlw	192
  3317  002DEE  EC1C  F016         	call	_LCDPutInst
  3318                           
  3319                           ;BBSPI_LCD.c: 188:         LCDPutChar(c);
  3320  002DF2  0100               	movlb	0	; () banked
  3321  002DF4  5173               	movf	printLCD_char@c& (0+255),w,b
  3322  002DF6  ECB2  F015         	call	_LCDPutChar
  3323  002DFA                     l68:
  3324  002DFA  0012               	return		;funcret
  3325  002DFC                     __end_of_printLCD_char:
  3326                           	opt callstack 0
  3327                           
  3328 ;; *************** function ___awdiv *****************
  3329 ;; Defined at:
  3330 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;  dividend        2    8[BANK0 ] int 
  3333 ;;  divisor         2   10[BANK0 ] int 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  quotient        2   14[BANK0 ] int 
  3336 ;;  sign            1   13[BANK0 ] unsigned char 
  3337 ;;  counter         1   12[BANK0 ] unsigned char 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  2    8[BANK0 ] int 
  3340 ;; Registers used:
  3341 ;;		wreg, status,2, status,0
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3347 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;Total ram usage:        8 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; Hardware stack levels required when called:    6
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_heater_heatpumper
  3358 ;;		_print_temp_humid
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           	psect	text14
  3363  002374                     __ptext14:
  3364                           	opt callstack 0
  3365  002374                     ___awdiv:
  3366                           	opt callstack 23
  3367  002374  0E00               	movlw	0
  3368  002376  0100               	movlb	0	; () banked
  3369  002378  6F6D               	movwf	___awdiv@sign& (0+255),b
  3370  00237A                     
  3371                           ; BSR set to: 0
  3372  00237A  BF6B               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  3373  00237C  EFC4  F011         	goto	u1490
  3374  002380  EFC2  F011         	goto	u1491
  3375  002384                     u1491:
  3376  002384  EFCA  F011         	goto	l2520
  3377  002388                     u1490:
  3378  002388                     
  3379                           ; BSR set to: 0
  3380  002388  6D6A               	negf	___awdiv@divisor& (0+255),b
  3381  00238A  1F6B               	comf	(___awdiv@divisor+1)& (0+255),f,b
  3382  00238C  B0D8               	btfsc	status,0,c
  3383  00238E  2B6B               	incf	(___awdiv@divisor+1)& (0+255),f,b
  3384  002390                     
  3385                           ; BSR set to: 0
  3386  002390  0E01               	movlw	1
  3387  002392  6F6D               	movwf	___awdiv@sign& (0+255),b
  3388  002394                     l2520:
  3389                           
  3390                           ; BSR set to: 0
  3391  002394  BF69               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  3392  002396  EFD1  F011         	goto	u1500
  3393  00239A  EFCF  F011         	goto	u1501
  3394  00239E                     u1501:
  3395  00239E  EFD7  F011         	goto	l2526
  3396  0023A2                     u1500:
  3397  0023A2                     
  3398                           ; BSR set to: 0
  3399  0023A2  6D68               	negf	___awdiv@dividend& (0+255),b
  3400  0023A4  1F69               	comf	(___awdiv@dividend+1)& (0+255),f,b
  3401  0023A6  B0D8               	btfsc	status,0,c
  3402  0023A8  2B69               	incf	(___awdiv@dividend+1)& (0+255),f,b
  3403  0023AA                     
  3404                           ; BSR set to: 0
  3405  0023AA  0E01               	movlw	1
  3406  0023AC  1B6D               	xorwf	___awdiv@sign& (0+255),f,b
  3407  0023AE                     l2526:
  3408                           
  3409                           ; BSR set to: 0
  3410  0023AE  0E00               	movlw	0
  3411  0023B0  6F6F               	movwf	(___awdiv@quotient+1)& (0+255),b
  3412  0023B2  0E00               	movlw	0
  3413  0023B4  6F6E               	movwf	___awdiv@quotient& (0+255),b
  3414  0023B6                     
  3415                           ; BSR set to: 0
  3416  0023B6  516A               	movf	___awdiv@divisor& (0+255),w,b
  3417  0023B8  116B               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  3418  0023BA  B4D8               	btfsc	status,2,c
  3419  0023BC  EFE2  F011         	goto	u1511
  3420  0023C0  EFE4  F011         	goto	u1510
  3421  0023C4                     u1511:
  3422  0023C4  EF0C  F012         	goto	l2548
  3423  0023C8                     u1510:
  3424  0023C8                     
  3425                           ; BSR set to: 0
  3426  0023C8  0E01               	movlw	1
  3427  0023CA  6F6C               	movwf	___awdiv@counter& (0+255),b
  3428  0023CC  EFEC  F011         	goto	l2534
  3429  0023D0                     l2532:
  3430                           
  3431                           ; BSR set to: 0
  3432  0023D0  90D8               	bcf	status,0,c
  3433  0023D2  376A               	rlcf	___awdiv@divisor& (0+255),f,b
  3434  0023D4  376B               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3435  0023D6  2B6C               	incf	___awdiv@counter& (0+255),f,b
  3436  0023D8                     l2534:
  3437                           
  3438                           ; BSR set to: 0
  3439  0023D8  AF6B               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3440  0023DA  EFF1  F011         	goto	u1521
  3441  0023DE  EFF3  F011         	goto	u1520
  3442  0023E2                     u1521:
  3443  0023E2  EFE8  F011         	goto	l2532
  3444  0023E6                     u1520:
  3445  0023E6                     l2536:
  3446                           
  3447                           ; BSR set to: 0
  3448  0023E6  90D8               	bcf	status,0,c
  3449  0023E8  376E               	rlcf	___awdiv@quotient& (0+255),f,b
  3450  0023EA  376F               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3451  0023EC                     
  3452                           ; BSR set to: 0
  3453  0023EC  516A               	movf	___awdiv@divisor& (0+255),w,b
  3454  0023EE  5D68               	subwf	___awdiv@dividend& (0+255),w,b
  3455  0023F0  516B               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3456  0023F2  5969               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3457  0023F4  A0D8               	btfss	status,0,c
  3458  0023F6  EFFF  F011         	goto	u1531
  3459  0023FA  EF01  F012         	goto	u1530
  3460  0023FE                     u1531:
  3461  0023FE  EF06  F012         	goto	l2544
  3462  002402                     u1530:
  3463  002402                     
  3464                           ; BSR set to: 0
  3465  002402  516A               	movf	___awdiv@divisor& (0+255),w,b
  3466  002404  5F68               	subwf	___awdiv@dividend& (0+255),f,b
  3467  002406  516B               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3468  002408  5B69               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3469  00240A                     
  3470                           ; BSR set to: 0
  3471  00240A  816E               	bsf	___awdiv@quotient& (0+255),0,b
  3472  00240C                     l2544:
  3473                           
  3474                           ; BSR set to: 0
  3475  00240C  90D8               	bcf	status,0,c
  3476  00240E  336B               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3477  002410  336A               	rrcf	___awdiv@divisor& (0+255),f,b
  3478  002412                     
  3479                           ; BSR set to: 0
  3480  002412  2F6C               	decfsz	___awdiv@counter& (0+255),f,b
  3481  002414  EFF3  F011         	goto	l2536
  3482  002418                     l2548:
  3483                           
  3484                           ; BSR set to: 0
  3485  002418  516D               	movf	___awdiv@sign& (0+255),w,b
  3486  00241A  B4D8               	btfsc	status,2,c
  3487  00241C  EF12  F012         	goto	u1541
  3488  002420  EF14  F012         	goto	u1540
  3489  002424                     u1541:
  3490  002424  EF18  F012         	goto	l2552
  3491  002428                     u1540:
  3492  002428                     
  3493                           ; BSR set to: 0
  3494  002428  6D6E               	negf	___awdiv@quotient& (0+255),b
  3495  00242A  1F6F               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3496  00242C  B0D8               	btfsc	status,0,c
  3497  00242E  2B6F               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3498  002430                     l2552:
  3499                           
  3500                           ; BSR set to: 0
  3501  002430  C06E  F068         	movff	___awdiv@quotient,?___awdiv
  3502  002434  C06F  F069         	movff	___awdiv@quotient+1,?___awdiv+1
  3503  002438                     
  3504                           ; BSR set to: 0
  3505  002438  0012               	return		;funcret
  3506  00243A                     __end_of___awdiv:
  3507                           	opt callstack 0
  3508                           
  3509 ;; *************** function _dequeue *****************
  3510 ;; Defined at:
  3511 ;;		line 155 in file "linked_list.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;		None
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  temp            3   19[BANK0 ] PTR FTN()void 
  3516 ;;		 -> get_temp_humid(1), check_button(1), heater_heatpumper(1), NULL(0), 
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  3   16[BANK0 ] PTR FTN()void 
  3519 ;; Registers used:
  3520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3526 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3527 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3529 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3530 ;;Total ram usage:        6 bytes
  3531 ;; Hardware stack levels used:    1
  3532 ;; Hardware stack levels required when called:    8
  3533 ;; This function calls:
  3534 ;;		___awmod
  3535 ;;		___wmul
  3536 ;;		_init_queue
  3537 ;; This function is called by:
  3538 ;;		_main
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text15
  3543  002970                     __ptext15:
  3544                           	opt callstack 0
  3545  002970                     _dequeue:
  3546                           	opt callstack 22
  3547  002970                     
  3548                           ;linked_list.c: 157:     FUNCTION_PTR temp = queue[front];
  3549  002970  C0D2  F068         	movff	_front,___wmul@multiplier
  3550  002974  C0D3  F069         	movff	_front+1,___wmul@multiplier+1
  3551  002978  0E00               	movlw	0
  3552  00297A  0100               	movlb	0	; () banked
  3553  00297C  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3554  00297E  0E03               	movlw	3
  3555  002980  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  3556  002982  ECD5  F017         	call	___wmul	;wreg free
  3557  002986  0E28               	movlw	low _queue
  3558  002988  0100               	movlb	0	; () banked
  3559  00298A  2568               	addwf	?___wmul& (0+255),w,b
  3560  00298C  6ED9               	movwf	fsr2l,c
  3561  00298E  0E01               	movlw	high _queue
  3562  002990  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  3563  002992  6EDA               	movwf	fsr2h,c
  3564  002994  CFDE F073          	movff	postinc2,dequeue@temp
  3565  002998  CFDE F074          	movff	postinc2,dequeue@temp+1
  3566  00299C  CFDD F075          	movff	postdec2,dequeue@temp+2
  3567  0029A0                     
  3568                           ; BSR set to: 0
  3569                           ;linked_list.c: 158:     no_q --;
  3570  0029A0  07CE               	decf	_no_q& (0+255),f,b
  3571  0029A2  A0D8               	btfss	status,0,c
  3572  0029A4  07CF               	decf	(_no_q+1)& (0+255),f,b
  3573  0029A6                     
  3574                           ; BSR set to: 0
  3575                           ;linked_list.c: 159:     if (no_q ==0)
  3576  0029A6  51CE               	movf	_no_q& (0+255),w,b
  3577  0029A8  11CF               	iorwf	(_no_q+1)& (0+255),w,b
  3578  0029AA  A4D8               	btfss	status,2,c
  3579  0029AC  EFDA  F014         	goto	u2041
  3580  0029B0  EFDC  F014         	goto	u2040
  3581  0029B4                     u2041:
  3582  0029B4  EFE6  F014         	goto	l2896
  3583  0029B8                     u2040:
  3584  0029B8                     
  3585                           ; BSR set to: 0
  3586                           ;linked_list.c: 160:     {;linked_list.c: 161:         init_queue();
  3587  0029B8  ECE7  F015         	call	_init_queue	;wreg free
  3588  0029BC                     l2890:
  3589                           
  3590                           ;linked_list.c: 162:         return temp;
  3591  0029BC  C073  F070         	movff	dequeue@temp,?_dequeue
  3592  0029C0  C074  F071         	movff	dequeue@temp+1,?_dequeue+1
  3593  0029C4  C075  F072         	movff	dequeue@temp+2,?_dequeue+2
  3594  0029C8  EFF8  F014         	goto	l341
  3595  0029CC                     l2896:
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;linked_list.c: 165:         front = (front +1)%1000;
  3599  0029CC  0E01               	movlw	1
  3600  0029CE  25D2               	addwf	_front& (0+255),w,b
  3601  0029D0  6F68               	movwf	___awmod@dividend& (0+255),b
  3602  0029D2  0E00               	movlw	0
  3603  0029D4  21D3               	addwfc	(_front+1)& (0+255),w,b
  3604  0029D6  6F69               	movwf	(___awmod@dividend+1)& (0+255),b
  3605  0029D8  0E03               	movlw	3
  3606  0029DA  6F6B               	movwf	(___awmod@divisor+1)& (0+255),b
  3607  0029DC  0EE8               	movlw	232
  3608  0029DE  6F6A               	movwf	___awmod@divisor& (0+255),b
  3609  0029E0  ECD7  F012         	call	___awmod	;wreg free
  3610  0029E4  C068  F0D2         	movff	?___awmod,_front
  3611  0029E8  C069  F0D3         	movff	?___awmod+1,_front+1
  3612  0029EC  EFDE  F014         	goto	l2890
  3613  0029F0                     l341:
  3614  0029F0  0012               	return		;funcret
  3615  0029F2                     __end_of_dequeue:
  3616                           	opt callstack 0
  3617                           
  3618 ;; *************** function ___awmod *****************
  3619 ;; Defined at:
  3620 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;  dividend        2    8[BANK0 ] int 
  3623 ;;  divisor         2   10[BANK0 ] int 
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;  sign            1   13[BANK0 ] unsigned char 
  3626 ;;  counter         1   12[BANK0 ] unsigned char 
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  2    8[BANK0 ] int 
  3629 ;; Registers used:
  3630 ;;		wreg, status,2, status,0
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3636 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3639 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3640 ;;Total ram usage:        6 bytes
  3641 ;; Hardware stack levels used:    1
  3642 ;; Hardware stack levels required when called:    6
  3643 ;; This function calls:
  3644 ;;		Nothing
  3645 ;; This function is called by:
  3646 ;;		_dequeue
  3647 ;;		_heater_heatpumper
  3648 ;;		_print_temp_humid
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           	psect	text16
  3653  0025AE                     __ptext16:
  3654                           	opt callstack 0
  3655  0025AE                     ___awmod:
  3656                           	opt callstack 23
  3657  0025AE  0E00               	movlw	0
  3658  0025B0  0100               	movlb	0	; () banked
  3659  0025B2  6F6D               	movwf	___awmod@sign& (0+255),b
  3660  0025B4                     
  3661                           ; BSR set to: 0
  3662  0025B4  BF69               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  3663  0025B6  EFE1  F012         	goto	u1550
  3664  0025BA  EFDF  F012         	goto	u1551
  3665  0025BE                     u1551:
  3666  0025BE  EFE7  F012         	goto	l2564
  3667  0025C2                     u1550:
  3668  0025C2                     
  3669                           ; BSR set to: 0
  3670  0025C2  6D68               	negf	___awmod@dividend& (0+255),b
  3671  0025C4  1F69               	comf	(___awmod@dividend+1)& (0+255),f,b
  3672  0025C6  B0D8               	btfsc	status,0,c
  3673  0025C8  2B69               	incf	(___awmod@dividend+1)& (0+255),f,b
  3674  0025CA                     
  3675                           ; BSR set to: 0
  3676  0025CA  0E01               	movlw	1
  3677  0025CC  6F6D               	movwf	___awmod@sign& (0+255),b
  3678  0025CE                     l2564:
  3679                           
  3680                           ; BSR set to: 0
  3681  0025CE  BF6B               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  3682  0025D0  EFEE  F012         	goto	u1560
  3683  0025D4  EFEC  F012         	goto	u1561
  3684  0025D8                     u1561:
  3685  0025D8  EFF2  F012         	goto	l2568
  3686  0025DC                     u1560:
  3687  0025DC                     
  3688                           ; BSR set to: 0
  3689  0025DC  6D6A               	negf	___awmod@divisor& (0+255),b
  3690  0025DE  1F6B               	comf	(___awmod@divisor+1)& (0+255),f,b
  3691  0025E0  B0D8               	btfsc	status,0,c
  3692  0025E2  2B6B               	incf	(___awmod@divisor+1)& (0+255),f,b
  3693  0025E4                     l2568:
  3694                           
  3695                           ; BSR set to: 0
  3696  0025E4  516A               	movf	___awmod@divisor& (0+255),w,b
  3697  0025E6  116B               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  3698  0025E8  B4D8               	btfsc	status,2,c
  3699  0025EA  EFF9  F012         	goto	u1571
  3700  0025EE  EFFB  F012         	goto	u1570
  3701  0025F2                     u1571:
  3702  0025F2  EF1F  F013         	goto	l2584
  3703  0025F6                     u1570:
  3704  0025F6                     
  3705                           ; BSR set to: 0
  3706  0025F6  0E01               	movlw	1
  3707  0025F8  6F6C               	movwf	___awmod@counter& (0+255),b
  3708  0025FA  EF03  F013         	goto	l2574
  3709  0025FE                     l2572:
  3710                           
  3711                           ; BSR set to: 0
  3712  0025FE  90D8               	bcf	status,0,c
  3713  002600  376A               	rlcf	___awmod@divisor& (0+255),f,b
  3714  002602  376B               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  3715  002604  2B6C               	incf	___awmod@counter& (0+255),f,b
  3716  002606                     l2574:
  3717                           
  3718                           ; BSR set to: 0
  3719  002606  AF6B               	btfss	(___awmod@divisor+1)& (0+255),7,b
  3720  002608  EF08  F013         	goto	u1581
  3721  00260C  EF0A  F013         	goto	u1580
  3722  002610                     u1581:
  3723  002610  EFFF  F012         	goto	l2572
  3724  002614                     u1580:
  3725  002614                     l2576:
  3726                           
  3727                           ; BSR set to: 0
  3728  002614  516A               	movf	___awmod@divisor& (0+255),w,b
  3729  002616  5D68               	subwf	___awmod@dividend& (0+255),w,b
  3730  002618  516B               	movf	(___awmod@divisor+1)& (0+255),w,b
  3731  00261A  5969               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  3732  00261C  A0D8               	btfss	status,0,c
  3733  00261E  EF13  F013         	goto	u1591
  3734  002622  EF15  F013         	goto	u1590
  3735  002626                     u1591:
  3736  002626  EF19  F013         	goto	l2580
  3737  00262A                     u1590:
  3738  00262A                     
  3739                           ; BSR set to: 0
  3740  00262A  516A               	movf	___awmod@divisor& (0+255),w,b
  3741  00262C  5F68               	subwf	___awmod@dividend& (0+255),f,b
  3742  00262E  516B               	movf	(___awmod@divisor+1)& (0+255),w,b
  3743  002630  5B69               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  3744  002632                     l2580:
  3745                           
  3746                           ; BSR set to: 0
  3747  002632  90D8               	bcf	status,0,c
  3748  002634  336B               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  3749  002636  336A               	rrcf	___awmod@divisor& (0+255),f,b
  3750  002638                     
  3751                           ; BSR set to: 0
  3752  002638  2F6C               	decfsz	___awmod@counter& (0+255),f,b
  3753  00263A  EF0A  F013         	goto	l2576
  3754  00263E                     l2584:
  3755                           
  3756                           ; BSR set to: 0
  3757  00263E  516D               	movf	___awmod@sign& (0+255),w,b
  3758  002640  B4D8               	btfsc	status,2,c
  3759  002642  EF25  F013         	goto	u1601
  3760  002646  EF27  F013         	goto	u1600
  3761  00264A                     u1601:
  3762  00264A  EF2B  F013         	goto	l2588
  3763  00264E                     u1600:
  3764  00264E                     
  3765                           ; BSR set to: 0
  3766  00264E  6D68               	negf	___awmod@dividend& (0+255),b
  3767  002650  1F69               	comf	(___awmod@dividend+1)& (0+255),f,b
  3768  002652  B0D8               	btfsc	status,0,c
  3769  002654  2B69               	incf	(___awmod@dividend+1)& (0+255),f,b
  3770  002656                     l2588:
  3771                           
  3772                           ; BSR set to: 0
  3773  002656  C068  F068         	movff	___awmod@dividend,?___awmod
  3774  00265A  C069  F069         	movff	___awmod@dividend+1,?___awmod+1
  3775  00265E                     
  3776                           ; BSR set to: 0
  3777  00265E  0012               	return		;funcret
  3778  002660                     __end_of___awmod:
  3779                           	opt callstack 0
  3780                           
  3781 ;; *************** function _SYSTEM_INITIALIZATION *****************
  3782 ;; Defined at:
  3783 ;;		line 110 in file "main.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;		None
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;		None
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      void 
  3790 ;; Registers used:
  3791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3801 ;;Total ram usage:        0 bytes
  3802 ;; Hardware stack levels used:    1
  3803 ;; Hardware stack levels required when called:   11
  3804 ;; This function calls:
  3805 ;;		_LCDInit
  3806 ;;		_TMR0_INITIALIZATION
  3807 ;;		_TMR1_INITIALIZATION
  3808 ;;		_init_queue
  3809 ;;		_printLCD_string
  3810 ;; This function is called by:
  3811 ;;		_main
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815                           	psect	text17
  3816  002EC6                     __ptext17:
  3817                           	opt callstack 0
  3818  002EC6                     _SYSTEM_INITIALIZATION:
  3819                           	opt callstack 19
  3820  002EC6                     
  3821                           ;main.c: 112:     LCDInit();
  3822  002EC6  ECAE  F016         	call	_LCDInit	;wreg free
  3823  002ECA                     
  3824                           ;main.c: 113:     printLCD_string(1,"Temp:   Humid:");
  3825  002ECA  0E00               	movlw	0
  3826  002ECC  0100               	movlb	0	; () banked
  3827  002ECE  6F72               	movwf	(printLCD_string@line+1)& (0+255),b
  3828  002ED0  0E01               	movlw	1
  3829  002ED2  6F71               	movwf	printLCD_string@line& (0+255),b
  3830  002ED4  0E44               	movlw	low STR_5
  3831  002ED6  6F73               	movwf	printLCD_string@array& (0+255),b
  3832  002ED8  0E10               	movlw	high STR_5
  3833  002EDA  6F74               	movwf	(printLCD_string@array+1)& (0+255),b
  3834  002EDC  EC82  F017         	call	_printLCD_string	;wreg free
  3835  002EE0                     
  3836                           ;main.c: 114:     INTCONbits.GIE=1;
  3837  002EE0  8EF2               	bsf	242,7,c	;volatile
  3838  002EE2                     
  3839                           ;main.c: 117:     OSCCON=0x73;
  3840  002EE2  0E73               	movlw	115
  3841  002EE4  6ED3               	movwf	211,c	;volatile
  3842  002EE6                     
  3843                           ;main.c: 118:     OSCTUNE=0b00001111;
  3844  002EE6  0E0F               	movlw	15
  3845  002EE8  6E9B               	movwf	155,c	;volatile
  3846  002EEA                     
  3847                           ;main.c: 119:     TRISAbits.TRISA5 = 1;
  3848  002EEA  8A92               	bsf	146,5,c	;volatile
  3849  002EEC                     
  3850                           ;main.c: 120:     TRISBbits.TRISB0 = 1;
  3851  002EEC  8093               	bsf	147,0,c	;volatile
  3852  002EEE                     
  3853                           ;main.c: 121:     TRISDbits.TRISD1 = 0;
  3854  002EEE  9295               	bcf	149,1,c	;volatile
  3855  002EF0                     
  3856                           ;main.c: 122:     ADCON1 = 0b00001111;
  3857  002EF0  0E0F               	movlw	15
  3858  002EF2  6EC1               	movwf	193,c	;volatile
  3859  002EF4                     
  3860                           ;main.c: 123:     LATDbits.LATD1 = 0;
  3861  002EF4  928C               	bcf	140,1,c	;volatile
  3862  002EF6                     
  3863                           ;main.c: 124:     TMR0_INITIALIZATION();
  3864  002EF6  EC2C  F018         	call	_TMR0_INITIALIZATION	;wreg free
  3865  002EFA                     
  3866                           ;main.c: 125:     TMR1_INITIALIZATION();
  3867  002EFA  EC24  F018         	call	_TMR1_INITIALIZATION	;wreg free
  3868  002EFE                     
  3869                           ;main.c: 126:     init_queue();
  3870  002EFE  ECE7  F015         	call	_init_queue	;wreg free
  3871  002F02  0012               	return		;funcret
  3872  002F04                     __end_of_SYSTEM_INITIALIZATION:
  3873                           	opt callstack 0
  3874                           
  3875 ;; *************** function _printLCD_string *****************
  3876 ;; Defined at:
  3877 ;;		line 168 in file "BBSPI_LCD.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;  line            2   17[BANK0 ] int 
  3880 ;;  array           2   19[BANK0 ] PTR unsigned char 
  3881 ;;		 -> STR_5(15), STR_4(16), STR_3(17), STR_2(17), 
  3882 ;;		 -> STR_1(17), 
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;		None
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  1    wreg      void 
  3887 ;; Registers used:
  3888 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3894 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3898 ;;Total ram usage:        4 bytes
  3899 ;; Hardware stack levels used:    1
  3900 ;; Hardware stack levels required when called:   10
  3901 ;; This function calls:
  3902 ;;		_LCDPutInst
  3903 ;;		_LCDPutStr
  3904 ;; This function is called by:
  3905 ;;		_heater_heatpumper
  3906 ;;		_SYSTEM_INITIALIZATION
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text18
  3911  002F04                     __ptext18:
  3912                           	opt callstack 0
  3913  002F04                     _printLCD_string:
  3914                           	opt callstack 19
  3915  002F04                     
  3916                           ;BBSPI_LCD.c: 169:     if (line == 0)
  3917  002F04  0100               	movlb	0	; () banked
  3918  002F06  5171               	movf	printLCD_string@line& (0+255),w,b
  3919  002F08  1172               	iorwf	(printLCD_string@line+1)& (0+255),w,b
  3920  002F0A  A4D8               	btfss	status,2,c
  3921  002F0C  EF8A  F017         	goto	u1731
  3922  002F10  EF8C  F017         	goto	u1730
  3923  002F14                     u1731:
  3924  002F14  EF97  F017         	goto	l2686
  3925  002F18                     u1730:
  3926  002F18                     
  3927                           ; BSR set to: 0
  3928                           ;BBSPI_LCD.c: 170:     {;BBSPI_LCD.c: 171:         LCDPutInst(0x80);
  3929  002F18  0E80               	movlw	128
  3930  002F1A  EC1C  F016         	call	_LCDPutInst
  3931  002F1E                     
  3932                           ;BBSPI_LCD.c: 172:         LCDPutStr(array);
  3933  002F1E  C073  F06F         	movff	printLCD_string@array,LCDPutStr@ptr
  3934  002F22  C074  F070         	movff	printLCD_string@array+1,LCDPutStr@ptr+1
  3935  002F26  EC43  F017         	call	_LCDPutStr	;wreg free
  3936                           
  3937                           ;BBSPI_LCD.c: 173:     }
  3938  002F2A  EFA0  F017         	goto	l62
  3939  002F2E                     l2686:
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;BBSPI_LCD.c: 175:     {;BBSPI_LCD.c: 176:         LCDPutInst(0xC0);
  3943  002F2E  0EC0               	movlw	192
  3944  002F30  EC1C  F016         	call	_LCDPutInst
  3945  002F34                     
  3946                           ;BBSPI_LCD.c: 177:         LCDPutStr(array);
  3947  002F34  C073  F06F         	movff	printLCD_string@array,LCDPutStr@ptr
  3948  002F38  C074  F070         	movff	printLCD_string@array+1,LCDPutStr@ptr+1
  3949  002F3C  EC43  F017         	call	_LCDPutStr	;wreg free
  3950  002F40                     l62:
  3951  002F40  0012               	return		;funcret
  3952  002F42                     __end_of_printLCD_string:
  3953                           	opt callstack 0
  3954                           
  3955 ;; *************** function _LCDPutStr *****************
  3956 ;; Defined at:
  3957 ;;		line 163 in file "BBSPI_LCD.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;  ptr             2   15[BANK0 ] PTR const unsigned char 
  3960 ;;		 -> STR_5(15), STR_4(16), STR_3(17), STR_2(17), 
  3961 ;;		 -> STR_1(17), 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;		None
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  1    wreg      void 
  3966 ;; Registers used:
  3967 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3973 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3976 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3977 ;;Total ram usage:        2 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; Hardware stack levels required when called:    9
  3980 ;; This function calls:
  3981 ;;		_LCDPutChar
  3982 ;; This function is called by:
  3983 ;;		_printLCD_string
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           	psect	text19
  3988  002E86                     __ptext19:
  3989                           	opt callstack 0
  3990  002E86                     _LCDPutStr:
  3991                           	opt callstack 19
  3992  002E86                     
  3993                           ;BBSPI_LCD.c: 163: void LCDPutStr (const char *ptr);BBSPI_LCD.c: 164: {;BBSPI_LCD.c: 165
      +                          :     while(*ptr) LCDPutChar(*(ptr++));
  3994  002E86  EF52  F017         	goto	l2406
  3995  002E8A                     l2402:
  3996  002E8A  C06F  FFF6         	movff	LCDPutStr@ptr,tblptrl
  3997  002E8E  C070  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  3998  002E92                     	if	0	;tblptru may be non-zero
  3999  002E92                     	endif
  4000  002E92                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4001  002E92  0E00               	movlw	low (__mediumconst shr (0+16))
  4002  002E94  6EF8               	movwf	tblptru,c
  4003  002E96                     	endif
  4004  002E96  0008               	tblrd		*
  4005  002E98  50F5               	movf	tablat,w,c
  4006  002E9A  ECB2  F015         	call	_LCDPutChar
  4007  002E9E  0100               	movlb	0	; () banked
  4008  002EA0  4B6F               	infsnz	LCDPutStr@ptr& (0+255),f,b
  4009  002EA2  2B70               	incf	(LCDPutStr@ptr+1)& (0+255),f,b
  4010  002EA4                     l2406:
  4011  002EA4  C06F  FFF6         	movff	LCDPutStr@ptr,tblptrl
  4012  002EA8  C070  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  4013  002EAC                     	if	0	;tblptru may be non-zero
  4014  002EAC                     	endif
  4015  002EAC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4016  002EAC  0E00               	movlw	low (__mediumconst shr (0+16))
  4017  002EAE  6EF8               	movwf	tblptru,c
  4018  002EB0                     	endif
  4019  002EB0  0008               	tblrd		*
  4020  002EB2  50F5               	movf	tablat,w,c
  4021  002EB4  0900               	iorlw	0
  4022  002EB6  A4D8               	btfss	status,2,c
  4023  002EB8  EF60  F017         	goto	u1301
  4024  002EBC  EF62  F017         	goto	u1300
  4025  002EC0                     u1301:
  4026  002EC0  EF45  F017         	goto	l2402
  4027  002EC4                     u1300:
  4028  002EC4  0012               	return		;funcret
  4029  002EC6                     __end_of_LCDPutStr:
  4030                           	opt callstack 0
  4031                           
  4032 ;; *************** function _LCDPutChar *****************
  4033 ;; Defined at:
  4034 ;;		line 125 in file "BBSPI_LCD.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;  ch              1    wreg     unsigned char 
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;  ch              1   14[BANK0 ] unsigned char 
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  1    wreg      void 
  4041 ;; Registers used:
  4042 ;;		wreg, status,2, status,0, cstack
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4049 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4050 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4051 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4052 ;;Total ram usage:        2 bytes
  4053 ;; Hardware stack levels used:    1
  4054 ;; Hardware stack levels required when called:    8
  4055 ;; This function calls:
  4056 ;;		_WritePort_BBSPI
  4057 ;; This function is called by:
  4058 ;;		_LCDPutStr
  4059 ;;		_printLCD_char
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           	psect	text20
  4064  002B64                     __ptext20:
  4065                           	opt callstack 0
  4066  002B64                     _LCDPutChar:
  4067                           	opt callstack 19
  4068                           
  4069                           ;incstack = 0
  4070                           ;LCDPutChar@ch stored from wreg
  4071  002B64  0100               	movlb	0	; () banked
  4072  002B66  6F6E               	movwf	LCDPutChar@ch& (0+255),b
  4073  002B68                     
  4074                           ;BBSPI_LCD.c: 128:     WritePort_BBSPI (0x12, 0x80);
  4075  002B68  0E80               	movlw	128
  4076  002B6A  0100               	movlb	0	; () banked
  4077  002B6C  6F6B               	movwf	WritePort_BBSPI@a& (0+255),b
  4078  002B6E  0E12               	movlw	18
  4079  002B70  ECFC  F017         	call	_WritePort_BBSPI
  4080  002B74                     
  4081                           ;BBSPI_LCD.c: 129:     _delay((unsigned long)((1)*(10000000/4000.0)));
  4082  002B74  0E04               	movlw	4
  4083  002B76  0100               	movlb	0	; () banked
  4084  002B78  6F6D               	movwf	??_LCDPutChar& (0+255),b
  4085  002B7A  0E3D               	movlw	61
  4086  002B7C                     u2387:
  4087  002B7C  2EE8               	decfsz	wreg,f,c
  4088  002B7E  D7FE               	bra	u2387
  4089  002B80  2F6D               	decfsz	??_LCDPutChar& (0+255),f,b
  4090  002B82  D7FC               	bra	u2387
  4091  002B84  D000               	nop2	
  4092  002B86                     
  4093                           ;BBSPI_LCD.c: 130:     WritePort_BBSPI (0x13, ch);
  4094  002B86  C06E  F06B         	movff	LCDPutChar@ch,WritePort_BBSPI@a
  4095  002B8A  0E13               	movlw	19
  4096  002B8C  ECFC  F017         	call	_WritePort_BBSPI
  4097                           
  4098                           ;BBSPI_LCD.c: 131:     _delay((unsigned long)((1)*(10000000/4000.0)));
  4099  002B90  0E04               	movlw	4
  4100  002B92  0100               	movlb	0	; () banked
  4101  002B94  6F6D               	movwf	??_LCDPutChar& (0+255),b
  4102  002B96  0E3D               	movlw	61
  4103  002B98                     u2397:
  4104  002B98  2EE8               	decfsz	wreg,f,c
  4105  002B9A  D7FE               	bra	u2397
  4106  002B9C  2F6D               	decfsz	??_LCDPutChar& (0+255),f,b
  4107  002B9E  D7FC               	bra	u2397
  4108  002BA0  D000               	nop2	
  4109  002BA2                     
  4110                           ;BBSPI_LCD.c: 132:     WritePort_BBSPI (0x12, 0xC0);
  4111  002BA2  0EC0               	movlw	192
  4112  002BA4  0100               	movlb	0	; () banked
  4113  002BA6  6F6B               	movwf	WritePort_BBSPI@a& (0+255),b
  4114  002BA8  0E12               	movlw	18
  4115  002BAA  ECFC  F017         	call	_WritePort_BBSPI
  4116  002BAE                     
  4117                           ;BBSPI_LCD.c: 133:     _delay((unsigned long)((1)*(10000000/4000.0)));
  4118  002BAE  0E04               	movlw	4
  4119  002BB0  0100               	movlb	0	; () banked
  4120  002BB2  6F6D               	movwf	??_LCDPutChar& (0+255),b
  4121  002BB4  0E3D               	movlw	61
  4122  002BB6                     u2407:
  4123  002BB6  2EE8               	decfsz	wreg,f,c
  4124  002BB8  D7FE               	bra	u2407
  4125  002BBA  2F6D               	decfsz	??_LCDPutChar& (0+255),f,b
  4126  002BBC  D7FC               	bra	u2407
  4127  002BBE  D000               	nop2	
  4128                           
  4129                           ;BBSPI_LCD.c: 134:     WritePort_BBSPI (0x12, 0x00);
  4130  002BC0  0E00               	movlw	0
  4131  002BC2  0100               	movlb	0	; () banked
  4132  002BC4  6F6B               	movwf	WritePort_BBSPI@a& (0+255),b
  4133  002BC6  0E12               	movlw	18
  4134  002BC8  ECFC  F017         	call	_WritePort_BBSPI
  4135  002BCC  0012               	return		;funcret
  4136  002BCE                     __end_of_LCDPutChar:
  4137                           	opt callstack 0
  4138                           
  4139 ;; *************** function _init_queue *****************
  4140 ;; Defined at:
  4141 ;;		line 146 in file "linked_list.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;		None
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  i               2   14[BANK0 ] int 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  1    wreg      void 
  4148 ;; Registers used:
  4149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;Total ram usage:        2 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:    7
  4162 ;; This function calls:
  4163 ;;		___wmul
  4164 ;; This function is called by:
  4165 ;;		_dequeue
  4166 ;;		_SYSTEM_INITIALIZATION
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169                           
  4170                           	psect	text21
  4171  002BCE                     __ptext21:
  4172                           	opt callstack 0
  4173  002BCE                     _init_queue:
  4174                           	opt callstack 22
  4175  002BCE                     
  4176                           ;linked_list.c: 148:     front = -1;
  4177  002BCE  0100               	movlb	0	; () banked
  4178  002BD0  69D2               	setf	_front& (0+255),b
  4179  002BD2  69D3               	setf	(_front+1)& (0+255),b
  4180                           
  4181                           ;linked_list.c: 149:     rear = -1;
  4182  002BD4  69D0               	setf	_rear& (0+255),b
  4183  002BD6  69D1               	setf	(_rear+1)& (0+255),b
  4184  002BD8                     
  4185                           ; BSR set to: 0
  4186                           ;linked_list.c: 150:     no_q = 0;
  4187  002BD8  0E00               	movlw	0
  4188  002BDA  6FCF               	movwf	(_no_q+1)& (0+255),b
  4189  002BDC  0E00               	movlw	0
  4190  002BDE  6FCE               	movwf	_no_q& (0+255),b
  4191                           
  4192                           ;linked_list.c: 152:     for (int i = 0; i<1000 ; i++)
  4193  002BE0  0E00               	movlw	0
  4194  002BE2  6F6F               	movwf	(init_queue@i+1)& (0+255),b
  4195  002BE4  0E00               	movlw	0
  4196  002BE6  6F6E               	movwf	init_queue@i& (0+255),b
  4197  002BE8                     l2774:
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;linked_list.c: 153:         queue[i] = ((void*)0);
  4201  002BE8  C06E  F068         	movff	init_queue@i,___wmul@multiplier
  4202  002BEC  C06F  F069         	movff	init_queue@i+1,___wmul@multiplier+1
  4203  002BF0  0E00               	movlw	0
  4204  002BF2  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4205  002BF4  0E03               	movlw	3
  4206  002BF6  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  4207  002BF8  ECD5  F017         	call	___wmul	;wreg free
  4208  002BFC  0E28               	movlw	low _queue
  4209  002BFE  0100               	movlb	0	; () banked
  4210  002C00  2568               	addwf	?___wmul& (0+255),w,b
  4211  002C02  6ED9               	movwf	fsr2l,c
  4212  002C04  0E01               	movlw	high _queue
  4213  002C06  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  4214  002C08  6EDA               	movwf	fsr2h,c
  4215  002C0A  0E00               	movlw	0
  4216  002C0C  6EDE               	movwf	postinc2,c
  4217  002C0E  0E00               	movlw	0
  4218  002C10  6EDE               	movwf	postinc2,c
  4219  002C12  0E00               	movlw	0
  4220  002C14  6EDE               	movwf	postinc2,c
  4221  002C16                     
  4222                           ; BSR set to: 0
  4223  002C16  4B6E               	infsnz	init_queue@i& (0+255),f,b
  4224  002C18  2B6F               	incf	(init_queue@i+1)& (0+255),f,b
  4225  002C1A                     
  4226                           ; BSR set to: 0
  4227  002C1A  BF6F               	btfsc	(init_queue@i+1)& (0+255),7,b
  4228  002C1C  EF19  F016         	goto	u1881
  4229  002C20  0EE8               	movlw	232
  4230  002C22  5D6E               	subwf	init_queue@i& (0+255),w,b
  4231  002C24  0E03               	movlw	3
  4232  002C26  596F               	subwfb	(init_queue@i+1)& (0+255),w,b
  4233  002C28  A0D8               	btfss	status,0,c
  4234  002C2A  EF19  F016         	goto	u1881
  4235  002C2E  EF1B  F016         	goto	u1880
  4236  002C32                     u1881:
  4237  002C32  EFF4  F015         	goto	l2774
  4238  002C36                     u1880:
  4239  002C36                     
  4240                           ; BSR set to: 0
  4241  002C36  0012               	return		;funcret
  4242  002C38                     __end_of_init_queue:
  4243                           	opt callstack 0
  4244                           
  4245 ;; *************** function _TMR1_INITIALIZATION *****************
  4246 ;; Defined at:
  4247 ;;		line 3 in file "timer1.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;		None
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;		None
  4252 ;; Return value:  Size  Location     Type
  4253 ;;                  1    wreg      void 
  4254 ;; Registers used:
  4255 ;;		wreg, status,2
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/0
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4265 ;;Total ram usage:        0 bytes
  4266 ;; Hardware stack levels used:    1
  4267 ;; Hardware stack levels required when called:    6
  4268 ;; This function calls:
  4269 ;;		Nothing
  4270 ;; This function is called by:
  4271 ;;		_SYSTEM_INITIALIZATION
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           	psect	text22
  4276  003048                     __ptext22:
  4277                           	opt callstack 0
  4278  003048                     _TMR1_INITIALIZATION:
  4279                           	opt callstack 23
  4280  003048                     
  4281                           ;timer1.c: 5:     T1CON = 0b10000001;
  4282  003048  0E81               	movlw	129
  4283  00304A  6ECD               	movwf	205,c	;volatile
  4284  00304C                     
  4285                           ;timer1.c: 6:     PIR1bits.TMR1IF = 0;
  4286  00304C  909E               	bcf	158,0,c	;volatile
  4287                           
  4288                           ;timer1.c: 7:     TMR1H = 0xB1;
  4289  00304E  0EB1               	movlw	177
  4290  003050  6ECF               	movwf	207,c	;volatile
  4291                           
  4292                           ;timer1.c: 8:     TMR1L = 0xE0;
  4293  003052  0EE0               	movlw	224
  4294  003054  6ECE               	movwf	206,c	;volatile
  4295  003056  0012               	return		;funcret
  4296  003058                     __end_of_TMR1_INITIALIZATION:
  4297                           	opt callstack 0
  4298                           
  4299 ;; *************** function _TMR0_INITIALIZATION *****************
  4300 ;; Defined at:
  4301 ;;		line 3 in file "timer0.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;		None
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;		None
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  1    wreg      void 
  4308 ;; Registers used:
  4309 ;;		wreg, status,2
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4319 ;;Total ram usage:        0 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; Hardware stack levels required when called:    6
  4322 ;; This function calls:
  4323 ;;		Nothing
  4324 ;; This function is called by:
  4325 ;;		_SYSTEM_INITIALIZATION
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           	psect	text23
  4330  003058                     __ptext23:
  4331                           	opt callstack 0
  4332  003058                     _TMR0_INITIALIZATION:
  4333                           	opt callstack 23
  4334  003058                     
  4335                           ;timer0.c: 5:     T0CON = 0b11000111;
  4336  003058  0EC7               	movlw	199
  4337  00305A  6ED5               	movwf	213,c	;volatile
  4338                           
  4339                           ;timer0.c: 6:     TMR0 = 0xB2;
  4340  00305C  0E00               	movlw	0
  4341  00305E  6ED7               	movwf	215,c	;volatile
  4342  003060  0EB2               	movlw	178
  4343  003062  6ED6               	movwf	214,c	;volatile
  4344  003064                     
  4345                           ;timer0.c: 7:     INTCONbits.TMR0IF = 0;
  4346  003064  94F2               	bcf	242,2,c	;volatile
  4347  003066  0012               	return		;funcret
  4348  003068                     __end_of_TMR0_INITIALIZATION:
  4349                           	opt callstack 0
  4350                           
  4351 ;; *************** function _LCDInit *****************
  4352 ;; Defined at:
  4353 ;;		line 10 in file "BBSPI_LCD.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;		None
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;		None
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  1    wreg      void 
  4360 ;; Registers used:
  4361 ;;		wreg, status,2, status,0, cstack
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4369 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4370 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4371 ;;Total ram usage:        1 bytes
  4372 ;; Hardware stack levels used:    1
  4373 ;; Hardware stack levels required when called:    9
  4374 ;; This function calls:
  4375 ;;		_InitBBSPI
  4376 ;;		_LCDPutInst
  4377 ;;		_Port_BBSPIInit
  4378 ;;		_WritePort_BBSPI
  4379 ;; This function is called by:
  4380 ;;		_SYSTEM_INITIALIZATION
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           	psect	text24
  4385  002D5C                     __ptext24:
  4386                           	opt callstack 0
  4387  002D5C                     _LCDInit:
  4388                           	opt callstack 20
  4389  002D5C                     
  4390                           ;BBSPI_LCD.c: 12:     InitBBSPI();
  4391  002D5C  EC1B  F018         	call	_InitBBSPI	;wreg free
  4392  002D60                     
  4393                           ;BBSPI_LCD.c: 13:     TRISFbits.TRISF6 = 0;
  4394  002D60  9C97               	bcf	151,6,c	;volatile
  4395  002D62                     
  4396                           ;BBSPI_LCD.c: 14:     LATFbits.LATF6 = 0;
  4397  002D62  9C8E               	bcf	142,6,c	;volatile
  4398  002D64                     
  4399                           ;BBSPI_LCD.c: 16:     LATFbits.LATF6 = 1;
  4400  002D64  8C8E               	bsf	142,6,c	;volatile
  4401  002D66                     
  4402                           ;BBSPI_LCD.c: 17:     Port_BBSPIInit (0x00);
  4403  002D66  0E00               	movlw	0
  4404  002D68  EC0C  F018         	call	_Port_BBSPIInit
  4405  002D6C                     
  4406                           ;BBSPI_LCD.c: 18:     Port_BBSPIInit (0x01);
  4407  002D6C  0E01               	movlw	1
  4408  002D6E  EC0C  F018         	call	_Port_BBSPIInit
  4409  002D72                     
  4410                           ;BBSPI_LCD.c: 19:     WritePort_BBSPI (0x12, 0);
  4411  002D72  0E00               	movlw	0
  4412  002D74  0100               	movlb	0	; () banked
  4413  002D76  6F6B               	movwf	WritePort_BBSPI@a& (0+255),b
  4414  002D78  0E12               	movlw	18
  4415  002D7A  ECFC  F017         	call	_WritePort_BBSPI
  4416  002D7E                     
  4417                           ;BBSPI_LCD.c: 20:     _delay((unsigned long)((15)*(10000000/4000.0)));
  4418  002D7E  0E31               	movlw	49
  4419  002D80  0100               	movlb	0	; () banked
  4420  002D82  6F6F               	movwf	??_LCDInit& (0+255),b
  4421  002D84  0EB2               	movlw	178
  4422  002D86                     u2417:
  4423  002D86  2EE8               	decfsz	wreg,f,c
  4424  002D88  D7FE               	bra	u2417
  4425  002D8A  2F6F               	decfsz	??_LCDInit& (0+255),f,b
  4426  002D8C  D7FC               	bra	u2417
  4427  002D8E  F000               	nop	
  4428  002D90                     
  4429                           ;BBSPI_LCD.c: 21:     LCDPutInst(0x32);
  4430  002D90  0E32               	movlw	50
  4431  002D92  EC1C  F016         	call	_LCDPutInst
  4432  002D96                     
  4433                           ;BBSPI_LCD.c: 22:     LCDPutInst(0x3C);
  4434  002D96  0E3C               	movlw	60
  4435  002D98  EC1C  F016         	call	_LCDPutInst
  4436  002D9C                     
  4437                           ;BBSPI_LCD.c: 23:     LCDPutInst(0x0C);
  4438  002D9C  0E0C               	movlw	12
  4439  002D9E  EC1C  F016         	call	_LCDPutInst
  4440  002DA2                     
  4441                           ;BBSPI_LCD.c: 24:     LCDPutInst(0x01);
  4442  002DA2  0E01               	movlw	1
  4443  002DA4  EC1C  F016         	call	_LCDPutInst
  4444  002DA8                     
  4445                           ;BBSPI_LCD.c: 25:     LCDPutInst(0x06);
  4446  002DA8  0E06               	movlw	6
  4447  002DAA  EC1C  F016         	call	_LCDPutInst
  4448  002DAE  0012               	return		;funcret
  4449  002DB0                     __end_of_LCDInit:
  4450                           	opt callstack 0
  4451                           
  4452 ;; *************** function _Port_BBSPIInit *****************
  4453 ;; Defined at:
  4454 ;;		line 88 in file "BBSPI_LCD.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;  port_dir        1    wreg     unsigned char 
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;  port_dir        1   11[BANK0 ] unsigned char 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  1    wreg      void 
  4461 ;; Registers used:
  4462 ;;		wreg, status,2, status,0, cstack
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4469 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4471 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4472 ;;Total ram usage:        1 bytes
  4473 ;; Hardware stack levels used:    1
  4474 ;; Hardware stack levels required when called:    7
  4475 ;; This function calls:
  4476 ;;		_SendByteBBSPI
  4477 ;; This function is called by:
  4478 ;;		_LCDInit
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482                           	psect	text25
  4483  003018                     __ptext25:
  4484                           	opt callstack 0
  4485  003018                     _Port_BBSPIInit:
  4486                           	opt callstack 21
  4487                           
  4488                           ;incstack = 0
  4489                           ;Port_BBSPIInit@port_dir stored from wreg
  4490  003018  0100               	movlb	0	; () banked
  4491  00301A  6F6B               	movwf	Port_BBSPIInit@port_dir& (0+255),b
  4492  00301C                     
  4493                           ;BBSPI_LCD.c: 88: void Port_BBSPIInit (unsigned char port_dir);BBSPI_LCD.c: 89: {;BBSPI_
      +                          LCD.c: 93:     LATAbits.LATA2 = 0;
  4494  00301C  9489               	bcf	137,2,c	;volatile
  4495  00301E                     
  4496                           ;BBSPI_LCD.c: 94:     SendByteBBSPI(0x40);
  4497  00301E  0E40               	movlw	64
  4498  003020  EC77  F015         	call	_SendByteBBSPI
  4499                           
  4500                           ;BBSPI_LCD.c: 95:     SendByteBBSPI(port_dir);
  4501  003024  0100               	movlb	0	; () banked
  4502  003026  516B               	movf	Port_BBSPIInit@port_dir& (0+255),w,b
  4503  003028  EC77  F015         	call	_SendByteBBSPI
  4504                           
  4505                           ;BBSPI_LCD.c: 96:     SendByteBBSPI(0x00);
  4506  00302C  0E00               	movlw	0
  4507  00302E  EC77  F015         	call	_SendByteBBSPI
  4508  003032                     
  4509                           ;BBSPI_LCD.c: 97:     LATAbits.LATA2 = 1;
  4510  003032  8489               	bsf	137,2,c	;volatile
  4511  003034  0012               	return		;funcret
  4512  003036                     __end_of_Port_BBSPIInit:
  4513                           	opt callstack 0
  4514                           
  4515 ;; *************** function _LCDPutInst *****************
  4516 ;; Defined at:
  4517 ;;		line 144 in file "BBSPI_LCD.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;  ch              1    wreg     unsigned char 
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;  ch              1   14[BANK0 ] unsigned char 
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  1    wreg      void 
  4524 ;; Registers used:
  4525 ;;		wreg, status,2, status,0, cstack
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4532 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4533 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4534 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4535 ;;Total ram usage:        2 bytes
  4536 ;; Hardware stack levels used:    1
  4537 ;; Hardware stack levels required when called:    8
  4538 ;; This function calls:
  4539 ;;		_WritePort_BBSPI
  4540 ;; This function is called by:
  4541 ;;		_LCDInit
  4542 ;;		_printLCD_string
  4543 ;;		_printLCD_char
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547                           	psect	text26
  4548  002C38                     __ptext26:
  4549                           	opt callstack 0
  4550  002C38                     _LCDPutInst:
  4551                           	opt callstack 20
  4552                           
  4553                           ;incstack = 0
  4554                           ;LCDPutInst@ch stored from wreg
  4555  002C38  0100               	movlb	0	; () banked
  4556  002C3A  6F6E               	movwf	LCDPutInst@ch& (0+255),b
  4557  002C3C                     
  4558                           ;BBSPI_LCD.c: 147:     WritePort_BBSPI (0x12, 0x00);
  4559  002C3C  0E00               	movlw	0
  4560  002C3E  0100               	movlb	0	; () banked
  4561  002C40  6F6B               	movwf	WritePort_BBSPI@a& (0+255),b
  4562  002C42  0E12               	movlw	18
  4563  002C44  ECFC  F017         	call	_WritePort_BBSPI
  4564  002C48                     
  4565                           ;BBSPI_LCD.c: 148:     _delay((unsigned long)((1)*(10000000/4000.0)));
  4566  002C48  0E04               	movlw	4
  4567  002C4A  0100               	movlb	0	; () banked
  4568  002C4C  6F6D               	movwf	??_LCDPutInst& (0+255),b
  4569  002C4E  0E3D               	movlw	61
  4570  002C50                     u2427:
  4571  002C50  2EE8               	decfsz	wreg,f,c
  4572  002C52  D7FE               	bra	u2427
  4573  002C54  2F6D               	decfsz	??_LCDPutInst& (0+255),f,b
  4574  002C56  D7FC               	bra	u2427
  4575  002C58  D000               	nop2	
  4576  002C5A                     
  4577                           ;BBSPI_LCD.c: 149:     WritePort_BBSPI (0x13, ch);
  4578  002C5A  C06E  F06B         	movff	LCDPutInst@ch,WritePort_BBSPI@a
  4579  002C5E  0E13               	movlw	19
  4580  002C60  ECFC  F017         	call	_WritePort_BBSPI
  4581                           
  4582                           ;BBSPI_LCD.c: 150:     _delay((unsigned long)((1)*(10000000/4000.0)));
  4583  002C64  0E04               	movlw	4
  4584  002C66  0100               	movlb	0	; () banked
  4585  002C68  6F6D               	movwf	??_LCDPutInst& (0+255),b
  4586  002C6A  0E3D               	movlw	61
  4587  002C6C                     u2437:
  4588  002C6C  2EE8               	decfsz	wreg,f,c
  4589  002C6E  D7FE               	bra	u2437
  4590  002C70  2F6D               	decfsz	??_LCDPutInst& (0+255),f,b
  4591  002C72  D7FC               	bra	u2437
  4592  002C74  D000               	nop2	
  4593  002C76                     
  4594                           ;BBSPI_LCD.c: 151:     WritePort_BBSPI (0x12,0x40);
  4595  002C76  0E40               	movlw	64
  4596  002C78  0100               	movlb	0	; () banked
  4597  002C7A  6F6B               	movwf	WritePort_BBSPI@a& (0+255),b
  4598  002C7C  0E12               	movlw	18
  4599  002C7E  ECFC  F017         	call	_WritePort_BBSPI
  4600  002C82                     
  4601                           ;BBSPI_LCD.c: 152:     _delay((unsigned long)((1)*(10000000/4000.0)));
  4602  002C82  0E04               	movlw	4
  4603  002C84  0100               	movlb	0	; () banked
  4604  002C86  6F6D               	movwf	??_LCDPutInst& (0+255),b
  4605  002C88  0E3D               	movlw	61
  4606  002C8A                     u2447:
  4607  002C8A  2EE8               	decfsz	wreg,f,c
  4608  002C8C  D7FE               	bra	u2447
  4609  002C8E  2F6D               	decfsz	??_LCDPutInst& (0+255),f,b
  4610  002C90  D7FC               	bra	u2447
  4611  002C92  D000               	nop2	
  4612                           
  4613                           ;BBSPI_LCD.c: 153:     WritePort_BBSPI (0x12, 0x00);
  4614  002C94  0E00               	movlw	0
  4615  002C96  0100               	movlb	0	; () banked
  4616  002C98  6F6B               	movwf	WritePort_BBSPI@a& (0+255),b
  4617  002C9A  0E12               	movlw	18
  4618  002C9C  ECFC  F017         	call	_WritePort_BBSPI
  4619  002CA0  0012               	return		;funcret
  4620  002CA2                     __end_of_LCDPutInst:
  4621                           	opt callstack 0
  4622                           
  4623 ;; *************** function _WritePort_BBSPI *****************
  4624 ;; Defined at:
  4625 ;;		line 109 in file "BBSPI_LCD.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;  port_add        1    wreg     unsigned char 
  4628 ;;  a               1   11[BANK0 ] unsigned char 
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;  port_add        1   12[BANK0 ] unsigned char 
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  1    wreg      void 
  4633 ;; Registers used:
  4634 ;;		wreg, status,2, status,0, cstack
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4640 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4641 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4643 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4644 ;;Total ram usage:        2 bytes
  4645 ;; Hardware stack levels used:    1
  4646 ;; Hardware stack levels required when called:    7
  4647 ;; This function calls:
  4648 ;;		_SendByteBBSPI
  4649 ;; This function is called by:
  4650 ;;		_LCDInit
  4651 ;;		_LCDPutChar
  4652 ;;		_LCDPutInst
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           	psect	text27
  4657  002FF8                     __ptext27:
  4658                           	opt callstack 0
  4659  002FF8                     _WritePort_BBSPI:
  4660                           	opt callstack 19
  4661                           
  4662                           ;incstack = 0
  4663                           ;WritePort_BBSPI@port_add stored from wreg
  4664  002FF8  0100               	movlb	0	; () banked
  4665  002FFA  6F6C               	movwf	WritePort_BBSPI@port_add& (0+255),b
  4666  002FFC                     
  4667                           ;BBSPI_LCD.c: 109: void WritePort_BBSPI (unsigned char port_add, unsigned char a);BBSPI_
      +                          LCD.c: 110: {;BBSPI_LCD.c: 111:     LATAbits.LATA2 = 0;
  4668  002FFC  9489               	bcf	137,2,c	;volatile
  4669  002FFE                     
  4670                           ;BBSPI_LCD.c: 112:     SendByteBBSPI(0x40);
  4671  002FFE  0E40               	movlw	64
  4672  003000  EC77  F015         	call	_SendByteBBSPI
  4673                           
  4674                           ;BBSPI_LCD.c: 113:     SendByteBBSPI(port_add);
  4675  003004  0100               	movlb	0	; () banked
  4676  003006  516C               	movf	WritePort_BBSPI@port_add& (0+255),w,b
  4677  003008  EC77  F015         	call	_SendByteBBSPI
  4678                           
  4679                           ;BBSPI_LCD.c: 114:     SendByteBBSPI(a);
  4680  00300C  0100               	movlb	0	; () banked
  4681  00300E  516B               	movf	WritePort_BBSPI@a& (0+255),w,b
  4682  003010  EC77  F015         	call	_SendByteBBSPI
  4683  003014                     
  4684                           ;BBSPI_LCD.c: 115:     LATAbits.LATA2 = 1;
  4685  003014  8489               	bsf	137,2,c	;volatile
  4686  003016  0012               	return		;funcret
  4687  003018                     __end_of_WritePort_BBSPI:
  4688                           	opt callstack 0
  4689                           
  4690 ;; *************** function _SendByteBBSPI *****************
  4691 ;; Defined at:
  4692 ;;		line 56 in file "BBSPI_LCD.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;  output          1    wreg     unsigned char 
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;  output          1    8[BANK0 ] unsigned char 
  4697 ;;  input           1   10[BANK0 ] unsigned char 
  4698 ;;  bitcount        1    9[BANK0 ] unsigned char 
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  1    wreg      void 
  4701 ;; Registers used:
  4702 ;;		wreg, status,2, status,0
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4709 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4711 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4712 ;;Total ram usage:        3 bytes
  4713 ;; Hardware stack levels used:    1
  4714 ;; Hardware stack levels required when called:    6
  4715 ;; This function calls:
  4716 ;;		Nothing
  4717 ;; This function is called by:
  4718 ;;		_Port_BBSPIInit
  4719 ;;		_WritePort_BBSPI
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722                           
  4723                           	psect	text28
  4724  002AEE                     __ptext28:
  4725                           	opt callstack 0
  4726  002AEE                     _SendByteBBSPI:
  4727                           	opt callstack 19
  4728                           
  4729                           ;incstack = 0
  4730                           ;SendByteBBSPI@output stored from wreg
  4731  002AEE  0100               	movlb	0	; () banked
  4732  002AF0  6F68               	movwf	SendByteBBSPI@output& (0+255),b
  4733  002AF2                     
  4734                           ;BBSPI_LCD.c: 56: void SendByteBBSPI (unsigned char output);BBSPI_LCD.c: 57: {;BBSPI_LCD
      +                          .c: 58:     unsigned char bitcount;;BBSPI_LCD.c: 59:     unsigned char input = output;
  4735  002AF2  C068  F06A         	movff	SendByteBBSPI@output,SendByteBBSPI@input
  4736  002AF6                     
  4737                           ;BBSPI_LCD.c: 61:     for(bitcount=0;bitcount<8;bitcount++)
  4738  002AF6  0E00               	movlw	0
  4739  002AF8  0100               	movlb	0	; () banked
  4740  002AFA  6F69               	movwf	SendByteBBSPI@bitcount& (0+255),b
  4741  002AFC                     l33:
  4742                           
  4743                           ; BSR set to: 0
  4744                           ;BBSPI_LCD.c: 62:     {;BBSPI_LCD.c: 64:         if(output & 0x80)
  4745  002AFC  AF68               	btfss	SendByteBBSPI@output& (0+255),7,b
  4746  002AFE  EF83  F015         	goto	u1181
  4747  002B02  EF85  F015         	goto	u1180
  4748  002B06                     u1181:
  4749  002B06  EF88  F015         	goto	l35
  4750  002B0A                     u1180:
  4751  002B0A                     
  4752                           ; BSR set to: 0
  4753                           ;BBSPI_LCD.c: 65:             LATCbits.LATC5 = 1;
  4754  002B0A  8A8B               	bsf	139,5,c	;volatile
  4755  002B0C  EF89  F015         	goto	l36
  4756  002B10                     l35:
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;BBSPI_LCD.c: 67:             LATCbits.LATC5 = 0;
  4760  002B10  9A8B               	bcf	139,5,c	;volatile
  4761  002B12                     l36:
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;BBSPI_LCD.c: 69:         if (LATCbits.LATC4)
  4765  002B12  A88B               	btfss	139,4,c	;volatile
  4766  002B14  EF8E  F015         	goto	u1191
  4767  002B18  EF90  F015         	goto	u1190
  4768  002B1C                     u1191:
  4769  002B1C  EF94  F015         	goto	l2244
  4770  002B20                     u1190:
  4771  002B20                     
  4772                           ; BSR set to: 0
  4773                           ;BBSPI_LCD.c: 70:             input = (input << 1) | 0x1;
  4774  002B20  80D8               	bsf	status,0,c
  4775  002B22  376A               	rlcf	SendByteBBSPI@input& (0+255),f,b
  4776  002B24  EF97  F015         	goto	l2246
  4777  002B28                     l2244:
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;BBSPI_LCD.c: 72:             input = input << 1;
  4781  002B28  516A               	movf	SendByteBBSPI@input& (0+255),w,b
  4782  002B2A  256A               	addwf	SendByteBBSPI@input& (0+255),w,b
  4783  002B2C  6F6A               	movwf	SendByteBBSPI@input& (0+255),b
  4784  002B2E                     l2246:
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;BBSPI_LCD.c: 73:         LATCbits.LATC3 = 1;
  4788  002B2E  868B               	bsf	139,3,c	;volatile
  4789  002B30                     
  4790                           ; BSR set to: 0
  4791                           ;BBSPI_LCD.c: 74:         __nop();__nop();__nop();__nop();__nop();__nop();
  4792  002B30  F000               	nop	
  4793  002B32  F000               	nop	
  4794  002B34  F000               	nop	
  4795  002B36  F000               	nop	
  4796  002B38  F000               	nop	
  4797  002B3A  F000               	nop	
  4798  002B3C                     
  4799                           ;BBSPI_LCD.c: 75:         __nop();__nop();__nop();__nop();__nop();__nop();
  4800  002B3C  F000               	nop	
  4801  002B3E  F000               	nop	
  4802  002B40  F000               	nop	
  4803  002B42  F000               	nop	
  4804  002B44  F000               	nop	
  4805  002B46  F000               	nop	
  4806  002B48                     
  4807                           ;BBSPI_LCD.c: 76:         LATCbits.LATC3 = 0;
  4808  002B48  968B               	bcf	139,3,c	;volatile
  4809                           
  4810                           ;BBSPI_LCD.c: 77:         output <<= 1;
  4811  002B4A  0100               	movlb	0	; () banked
  4812  002B4C  90D8               	bcf	status,0,c
  4813  002B4E  3768               	rlcf	SendByteBBSPI@output& (0+255),f,b
  4814  002B50                     
  4815                           ; BSR set to: 0
  4816                           ;BBSPI_LCD.c: 78:     }
  4817  002B50  2B69               	incf	SendByteBBSPI@bitcount& (0+255),f,b
  4818  002B52                     
  4819                           ; BSR set to: 0
  4820  002B52  0E07               	movlw	7
  4821  002B54  6569               	cpfsgt	SendByteBBSPI@bitcount& (0+255),b
  4822  002B56  EFAF  F015         	goto	u1201
  4823  002B5A  EFB1  F015         	goto	u1200
  4824  002B5E                     u1201:
  4825  002B5E  EF7E  F015         	goto	l33
  4826  002B62                     u1200:
  4827  002B62                     
  4828                           ; BSR set to: 0
  4829  002B62  0012               	return		;funcret
  4830  002B64                     __end_of_SendByteBBSPI:
  4831                           	opt callstack 0
  4832                           
  4833 ;; *************** function _InitBBSPI *****************
  4834 ;; Defined at:
  4835 ;;		line 35 in file "BBSPI_LCD.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;		None
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;		None
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  1    wreg      void 
  4842 ;; Registers used:
  4843 ;;		None
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4853 ;;Total ram usage:        0 bytes
  4854 ;; Hardware stack levels used:    1
  4855 ;; Hardware stack levels required when called:    6
  4856 ;; This function calls:
  4857 ;;		Nothing
  4858 ;; This function is called by:
  4859 ;;		_LCDInit
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           
  4863                           	psect	text29
  4864  003036                     __ptext29:
  4865                           	opt callstack 0
  4866  003036                     _InitBBSPI:
  4867                           	opt callstack 22
  4868  003036                     
  4869                           ;BBSPI_LCD.c: 37:     TRISAbits.TRISA2 = 0;
  4870  003036  9492               	bcf	146,2,c	;volatile
  4871                           
  4872                           ;BBSPI_LCD.c: 38:     TRISCbits.TRISC4 = 1;
  4873  003038  8894               	bsf	148,4,c	;volatile
  4874                           
  4875                           ;BBSPI_LCD.c: 39:     TRISCbits.TRISC5 = 0;
  4876  00303A  9A94               	bcf	148,5,c	;volatile
  4877                           
  4878                           ;BBSPI_LCD.c: 40:     TRISCbits.TRISC3 = 0;
  4879  00303C  9694               	bcf	148,3,c	;volatile
  4880                           
  4881                           ;BBSPI_LCD.c: 42:     LATAbits.LATA2 = 1;
  4882  00303E  8489               	bsf	137,2,c	;volatile
  4883                           
  4884                           ;BBSPI_LCD.c: 43:     LATCbits.LATC4 = 1;
  4885  003040  888B               	bsf	139,4,c	;volatile
  4886                           
  4887                           ;BBSPI_LCD.c: 44:     LATCbits.LATC5 = 0;
  4888  003042  9A8B               	bcf	139,5,c	;volatile
  4889                           
  4890                           ;BBSPI_LCD.c: 45:     LATCbits.LATC3 = 0;
  4891  003044  968B               	bcf	139,3,c	;volatile
  4892  003046  0012               	return		;funcret
  4893  003048                     __end_of_InitBBSPI:
  4894                           	opt callstack 0
  4895                           
  4896 ;; *************** function _LINKED_LIST_INITIALIZATION *****************
  4897 ;; Defined at:
  4898 ;;		line 2 in file "linked_list.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;		None
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;  i               2   14[BANK0 ] int 
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  1    wreg      void 
  4905 ;; Registers used:
  4906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4913 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4915 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4916 ;;Total ram usage:        2 bytes
  4917 ;; Hardware stack levels used:    1
  4918 ;; Hardware stack levels required when called:    7
  4919 ;; This function calls:
  4920 ;;		___wmul
  4921 ;; This function is called by:
  4922 ;;		_main
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           	psect	text30
  4927  0020FC                     __ptext30:
  4928                           	opt callstack 0
  4929  0020FC                     _LINKED_LIST_INITIALIZATION:
  4930                           	opt callstack 23
  4931  0020FC                     
  4932                           ;linked_list.c: 4:     head = -1;
  4933  0020FC  0100               	movlb	0	; () banked
  4934  0020FE  69EB               	setf	_head& (0+255),b
  4935  002100  69EC               	setf	(_head+1)& (0+255),b
  4936  002102                     
  4937                           ; BSR set to: 0
  4938                           ;linked_list.c: 5:     no_funcs = 0;
  4939  002102  0E00               	movlw	0
  4940  002104  6FE3               	movwf	(_no_funcs+1)& (0+255),b
  4941  002106  0E00               	movlw	0
  4942  002108  6FE2               	movwf	_no_funcs& (0+255),b
  4943                           
  4944                           ;linked_list.c: 6:  for (int i = 0; i < 20; i++)
  4945  00210A  0E00               	movlw	0
  4946  00210C  6F6F               	movwf	(LINKED_LIST_INITIALIZATION@i+1)& (0+255),b
  4947  00210E  0E00               	movlw	0
  4948  002110  6F6E               	movwf	LINKED_LIST_INITIALIZATION@i& (0+255),b
  4949  002112                     l2876:
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;linked_list.c: 7:  {;linked_list.c: 8:   array[i].next = -1;
  4953  002112  C06E  F068         	movff	LINKED_LIST_INITIALIZATION@i,___wmul@multiplier
  4954  002116  C06F  F069         	movff	LINKED_LIST_INITIALIZATION@i+1,___wmul@multiplier+1
  4955  00211A  0E00               	movlw	0
  4956  00211C  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4957  00211E  0E0D               	movlw	13
  4958  002120  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  4959  002122  ECD5  F017         	call	___wmul	;wreg free
  4960  002126  0EE0               	movlw	low _array
  4961  002128  0100               	movlb	0	; () banked
  4962  00212A  2568               	addwf	?___wmul& (0+255),w,b
  4963  00212C  6ED9               	movwf	fsr2l,c
  4964  00212E  0E0C               	movlw	high _array
  4965  002130  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  4966  002132  6EDA               	movwf	fsr2h,c
  4967  002134  0EFF               	movlw	255
  4968  002136  6EDE               	movwf	postinc2,c
  4969  002138  0EFF               	movlw	255
  4970  00213A  6EDD               	movwf	postdec2,c
  4971                           
  4972                           ;linked_list.c: 9:   array[i].delay = 0;
  4973  00213C  C06E  F068         	movff	LINKED_LIST_INITIALIZATION@i,___wmul@multiplier
  4974  002140  C06F  F069         	movff	LINKED_LIST_INITIALIZATION@i+1,___wmul@multiplier+1
  4975  002144  0E00               	movlw	0
  4976  002146  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4977  002148  0E0D               	movlw	13
  4978  00214A  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  4979  00214C  ECD5  F017         	call	___wmul	;wreg free
  4980  002150  0EE2               	movlw	low (_array+2)
  4981  002152  0100               	movlb	0	; () banked
  4982  002154  2568               	addwf	?___wmul& (0+255),w,b
  4983  002156  6ED9               	movwf	fsr2l,c
  4984  002158  0E0C               	movlw	high (_array+2)
  4985  00215A  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  4986  00215C  6EDA               	movwf	fsr2h,c
  4987  00215E  6ADE               	clrf	postinc2,c
  4988  002160  6ADE               	clrf	postinc2,c
  4989  002162  6ADE               	clrf	postinc2,c
  4990  002164  6ADD               	clrf	postdec2,c
  4991                           
  4992                           ;linked_list.c: 10:   array[i].period = 0;
  4993  002166  C06E  F068         	movff	LINKED_LIST_INITIALIZATION@i,___wmul@multiplier
  4994  00216A  C06F  F069         	movff	LINKED_LIST_INITIALIZATION@i+1,___wmul@multiplier+1
  4995  00216E  0E00               	movlw	0
  4996  002170  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4997  002172  0E0D               	movlw	13
  4998  002174  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  4999  002176  ECD5  F017         	call	___wmul	;wreg free
  5000  00217A  0EE6               	movlw	low (_array+6)
  5001  00217C  0100               	movlb	0	; () banked
  5002  00217E  2568               	addwf	?___wmul& (0+255),w,b
  5003  002180  6ED9               	movwf	fsr2l,c
  5004  002182  0E0C               	movlw	high (_array+6)
  5005  002184  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  5006  002186  6EDA               	movwf	fsr2h,c
  5007  002188  6ADE               	clrf	postinc2,c
  5008  00218A  6ADE               	clrf	postinc2,c
  5009  00218C  6ADE               	clrf	postinc2,c
  5010  00218E  6ADD               	clrf	postdec2,c
  5011                           
  5012                           ;linked_list.c: 11:   array[i].function = ((void*)0);
  5013  002190  C06E  F068         	movff	LINKED_LIST_INITIALIZATION@i,___wmul@multiplier
  5014  002194  C06F  F069         	movff	LINKED_LIST_INITIALIZATION@i+1,___wmul@multiplier+1
  5015  002198  0E00               	movlw	0
  5016  00219A  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5017  00219C  0E0D               	movlw	13
  5018  00219E  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  5019  0021A0  ECD5  F017         	call	___wmul	;wreg free
  5020  0021A4  0EEA               	movlw	low (_array+10)
  5021  0021A6  0100               	movlb	0	; () banked
  5022  0021A8  2568               	addwf	?___wmul& (0+255),w,b
  5023  0021AA  6ED9               	movwf	fsr2l,c
  5024  0021AC  0E0C               	movlw	high (_array+10)
  5025  0021AE  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  5026  0021B0  6EDA               	movwf	fsr2h,c
  5027  0021B2  0E00               	movlw	0
  5028  0021B4  6EDE               	movwf	postinc2,c
  5029  0021B6  0E00               	movlw	0
  5030  0021B8  6EDE               	movwf	postinc2,c
  5031  0021BA  0E00               	movlw	0
  5032  0021BC  6EDE               	movwf	postinc2,c
  5033  0021BE                     
  5034                           ; BSR set to: 0
  5035                           ;linked_list.c: 12:  }
  5036  0021BE  4B6E               	infsnz	LINKED_LIST_INITIALIZATION@i& (0+255),f,b
  5037  0021C0  2B6F               	incf	(LINKED_LIST_INITIALIZATION@i+1)& (0+255),f,b
  5038  0021C2                     
  5039                           ; BSR set to: 0
  5040  0021C2  BF6F               	btfsc	(LINKED_LIST_INITIALIZATION@i+1)& (0+255),7,b
  5041  0021C4  EFED  F010         	goto	u2031
  5042  0021C8  516F               	movf	(LINKED_LIST_INITIALIZATION@i+1)& (0+255),w,b
  5043  0021CA  E109               	bnz	u2030
  5044  0021CC  0E14               	movlw	20
  5045  0021CE  5D6E               	subwf	LINKED_LIST_INITIALIZATION@i& (0+255),w,b
  5046  0021D0  A0D8               	btfss	status,0,c
  5047  0021D2  EFED  F010         	goto	u2031
  5048  0021D6  EFEF  F010         	goto	u2030
  5049  0021DA                     u2031:
  5050  0021DA  EF89  F010         	goto	l2876
  5051  0021DE                     u2030:
  5052  0021DE                     
  5053                           ; BSR set to: 0
  5054  0021DE  0012               	return		;funcret
  5055  0021E0                     __end_of_LINKED_LIST_INITIALIZATION:
  5056                           	opt callstack 0
  5057                           
  5058 ;; *************** function ___wmul *****************
  5059 ;; Defined at:
  5060 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;  multiplier      2    8[BANK0 ] unsigned int 
  5063 ;;  multiplicand    2   10[BANK0 ] unsigned int 
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;  product         2   12[BANK0 ] unsigned int 
  5066 ;; Return value:  Size  Location     Type
  5067 ;;                  2    8[BANK0 ] unsigned int 
  5068 ;; Registers used:
  5069 ;;		wreg, status,2, status,0, prodl, prodh
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5075 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5076 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5078 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5079 ;;Total ram usage:        6 bytes
  5080 ;; Hardware stack levels used:    1
  5081 ;; Hardware stack levels required when called:    6
  5082 ;; This function calls:
  5083 ;;		Nothing
  5084 ;; This function is called by:
  5085 ;;		_LINKED_LIST_INITIALIZATION
  5086 ;;		_ADD_NODE
  5087 ;;		_add
  5088 ;;		_init_queue
  5089 ;;		_dequeue
  5090 ;;		_REMOVE_NODE
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           	psect	text31
  5095  002FAA                     __ptext31:
  5096                           	opt callstack 0
  5097  002FAA                     ___wmul:
  5098                           	opt callstack 21
  5099  002FAA  0100               	movlb	0	; () banked
  5100  002FAC  5168               	movf	___wmul@multiplier& (0+255),w,b
  5101  002FAE  036A               	mulwf	___wmul@multiplicand& (0+255),b
  5102  002FB0  CFF3 F06C          	movff	prodl,___wmul@product
  5103  002FB4  CFF4 F06D          	movff	prodh,___wmul@product+1
  5104  002FB8  5168               	movf	___wmul@multiplier& (0+255),w,b
  5105  002FBA  036B               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5106  002FBC  50F3               	movf	243,w,c
  5107  002FBE  276D               	addwf	(___wmul@product+1)& (0+255),f,b
  5108  002FC0  5169               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5109  002FC2  036A               	mulwf	___wmul@multiplicand& (0+255),b
  5110  002FC4  50F3               	movf	243,w,c
  5111  002FC6  276D               	addwf	(___wmul@product+1)& (0+255),f,b
  5112  002FC8                     
  5113                           ; BSR set to: 0
  5114  002FC8  C06C  F068         	movff	___wmul@product,?___wmul
  5115  002FCC  C06D  F069         	movff	___wmul@product+1,?___wmul+1
  5116  002FD0                     
  5117                           ; BSR set to: 0
  5118  002FD0  0012               	return		;funcret
  5119  002FD2                     __end_of___wmul:
  5120                           	opt callstack 0
  5121                           
  5122 ;; *************** function _INTERRUPT_InterruptManager *****************
  5123 ;; Defined at:
  5124 ;;		line 3 in file "interrupt.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;		None
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;		None
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  1    wreg      void 
  5131 ;; Registers used:
  5132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5140 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5141 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5142 ;;Total ram usage:        8 bytes
  5143 ;; Hardware stack levels used:    1
  5144 ;; Hardware stack levels required when called:    5
  5145 ;; This function calls:
  5146 ;;		_TMR0_IRS
  5147 ;;		_read_button
  5148 ;;		_timer_ISR
  5149 ;; This function is called by:
  5150 ;;		Interrupt level 2
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           	psect	intcode
  5155  000008                     __pintcode:
  5156                           	opt callstack 0
  5157  000008                     _INTERRUPT_InterruptManager:
  5158                           	opt callstack 19
  5159                           
  5160                           ; BSR set to: 0
  5161                           ;incstack = 0
  5162  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5163  00000A  ED75  F014         	call	int_func,f	;refresh shadow registers
  5164                           
  5165                           	psect	intcode_body
  5166  0028EA                     __pintcode_body:
  5167                           	opt callstack 19
  5168  0028EA                     int_func:
  5169                           	opt callstack 19
  5170  0028EA  0006               	pop		; remove dummy address from shadow register refresh
  5171  0028EC  CFE9 F060          	movff	fsr0l,??_INTERRUPT_InterruptManager
  5172  0028F0  CFEA F061          	movff	fsr0h,??_INTERRUPT_InterruptManager+1
  5173  0028F4  CFE1 F062          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
  5174  0028F8  CFE2 F063          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
  5175  0028FC  CFD9 F064          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
  5176  002900  CFDA F065          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
  5177  002904  CFF3 F066          	movff	prodl,??_INTERRUPT_InterruptManager+6
  5178  002908  CFF4 F067          	movff	prodh,??_INTERRUPT_InterruptManager+7
  5179  00290C                     
  5180                           ;interrupt.c: 5:     if (INTCONbits.TMR0IF == 1 && INTCONbits.TMR0IE == 1)
  5181  00290C  A4F2               	btfss	242,2,c	;volatile
  5182  00290E  EF8B  F014         	goto	i2u227_41
  5183  002912  EF8D  F014         	goto	i2u227_40
  5184  002916                     i2u227_41:
  5185  002916  EFA6  F014         	goto	i2l216
  5186  00291A                     i2u227_40:
  5187  00291A  AAF2               	btfss	242,5,c	;volatile
  5188  00291C  EF92  F014         	goto	i2u228_41
  5189  002920  EF94  F014         	goto	i2u228_40
  5190  002924                     i2u228_41:
  5191  002924  EFA6  F014         	goto	i2l216
  5192  002928                     i2u228_40:
  5193  002928                     
  5194                           ;interrupt.c: 6:     {;interrupt.c: 7:         read_button();
  5195  002928  EC51  F016         	call	_read_button	;wreg free
  5196  00292C                     
  5197                           ;interrupt.c: 9:         if (time_out_dht>0) time_out_dht--;
  5198  00292C  505D               	movf	_time_out_dht^0,w,c
  5199  00292E  105E               	iorwf	(_time_out_dht+1)^0,w,c
  5200  002930  B4D8               	btfsc	status,2,c
  5201  002932  EF9D  F014         	goto	i2u229_41
  5202  002936  EF9F  F014         	goto	i2u229_40
  5203  00293A                     i2u229_41:
  5204  00293A  EFA2  F014         	goto	i2l3078
  5205  00293E                     i2u229_40:
  5206  00293E  065D               	decf	_time_out_dht^0,f,c
  5207  002940  A0D8               	btfss	status,0,c
  5208  002942  065E               	decf	(_time_out_dht+1)^0,f,c
  5209  002944                     i2l3078:
  5210                           
  5211                           ;interrupt.c: 10:         timer_ISR();
  5212  002944  ECA1  F017         	call	_timer_ISR	;wreg free
  5213  002948                     
  5214                           ;interrupt.c: 11:         TMR0_IRS();
  5215  002948  EC34  F018         	call	_TMR0_IRS	;wreg free
  5216  00294C                     i2l216:
  5217  00294C  C067  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
  5218  002950  C066  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
  5219  002954  C065  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
  5220  002958  C064  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
  5221  00295C  C063  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
  5222  002960  C062  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
  5223  002964  C061  FFEA         	movff	??_INTERRUPT_InterruptManager+1,fsr0h
  5224  002968  C060  FFE9         	movff	??_INTERRUPT_InterruptManager,fsr0l
  5225  00296C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5226  00296E  0011               	retfie		f
  5227  002970                     __end_of_INTERRUPT_InterruptManager:
  5228                           	opt callstack 0
  5229                           
  5230 ;; *************** function _timer_ISR *****************
  5231 ;; Defined at:
  5232 ;;		line 37 in file "clock.c"
  5233 ;; Parameters:    Size  Location     Type
  5234 ;;		None
  5235 ;; Auto vars:     Size  Location     Type
  5236 ;;		None
  5237 ;; Return value:  Size  Location     Type
  5238 ;;                  1    wreg      void 
  5239 ;; Registers used:
  5240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5241 ;; Tracked objects:
  5242 ;;		On entry : 0/0
  5243 ;;		On exit  : 0/0
  5244 ;;		Unchanged: 0/0
  5245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5250 ;;Total ram usage:        0 bytes
  5251 ;; Hardware stack levels used:    1
  5252 ;; Hardware stack levels required when called:    4
  5253 ;; This function calls:
  5254 ;;		_UPDATE_TIMER
  5255 ;; This function is called by:
  5256 ;;		_INTERRUPT_InterruptManager
  5257 ;; This function uses a non-reentrant model
  5258 ;;
  5259                           
  5260                           	psect	text33
  5261  002F42                     __ptext33:
  5262                           	opt callstack 0
  5263  002F42                     _timer_ISR:
  5264                           	opt callstack 19
  5265  002F42                     
  5266                           ;clock.c: 39:     if (no_q<1000 && no_funcs != 0)UPDATE_TIMER();
  5267  002F42  0100               	movlb	0	; () banked
  5268  002F44  BFCF               	btfsc	(_no_q+1)& (0+255),7,b
  5269  002F46  EFB0  F017         	goto	i2u198_40
  5270  002F4A  0EE8               	movlw	232
  5271  002F4C  5DCE               	subwf	_no_q& (0+255),w,b
  5272  002F4E  0E03               	movlw	3
  5273  002F50  59CF               	subwfb	(_no_q+1)& (0+255),w,b
  5274  002F52  B0D8               	btfsc	status,0,c
  5275  002F54  EFAE  F017         	goto	i2u198_41
  5276  002F58  EFB0  F017         	goto	i2u198_40
  5277  002F5C                     i2u198_41:
  5278  002F5C  EFBB  F017         	goto	i2l145
  5279  002F60                     i2u198_40:
  5280  002F60                     
  5281                           ; BSR set to: 0
  5282  002F60  51E2               	movf	_no_funcs& (0+255),w,b
  5283  002F62  11E3               	iorwf	(_no_funcs+1)& (0+255),w,b
  5284  002F64  B4D8               	btfsc	status,2,c
  5285  002F66  EFB7  F017         	goto	i2u199_41
  5286  002F6A  EFB9  F017         	goto	i2u199_40
  5287  002F6E                     i2u199_41:
  5288  002F6E  EFBB  F017         	goto	i2l145
  5289  002F72                     i2u199_40:
  5290  002F72                     
  5291                           ; BSR set to: 0
  5292  002F72  ECF0  F00D         	call	_UPDATE_TIMER	;wreg free
  5293  002F76                     i2l145:
  5294  002F76  0012               	return		;funcret
  5295  002F78                     __end_of_timer_ISR:
  5296                           	opt callstack 0
  5297                           
  5298 ;; *************** function _UPDATE_TIMER *****************
  5299 ;; Defined at:
  5300 ;;		line 66 in file "linked_list.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;		None
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;  period          4   80[COMRAM] long 
  5305 ;;  delay           4   76[COMRAM] long 
  5306 ;;  function        3   84[COMRAM] PTR FTN()void 
  5307 ;;		 -> get_temp_humid(1), check_button(1), heater_heatpumper(1), NULL(0), 
  5308 ;;  temp_head       2   90[COMRAM] int 
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  1    wreg      void 
  5311 ;; Registers used:
  5312 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5319 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5320 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5321 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5322 ;;Total ram usage:       20 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; Hardware stack levels required when called:    3
  5325 ;; This function calls:
  5326 ;;		_clean_node
  5327 ;;		_enqueue
  5328 ;;		i2_ADD_NODE
  5329 ;;		i2___wmul
  5330 ;; This function is called by:
  5331 ;;		_timer_ISR
  5332 ;; This function uses a non-reentrant model
  5333 ;;
  5334                           
  5335                           	psect	text34
  5336  001BE0                     __ptext34:
  5337                           	opt callstack 0
  5338  001BE0                     _UPDATE_TIMER:
  5339                           	opt callstack 19
  5340  001BE0                     
  5341                           ;linked_list.c: 68:     if (array[head].delay != 0) array[head].delay = array[head].dela
      +                          y -10;
  5342  001BE0  C0EB  F001         	movff	_head,i2___wmul@multiplier
  5343  001BE4  C0EC  F002         	movff	_head+1,i2___wmul@multiplier+1
  5344  001BE8  0E00               	movlw	0
  5345  001BEA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5346  001BEC  0E0D               	movlw	13
  5347  001BEE  6E03               	movwf	i2___wmul@multiplicand^0,c
  5348  001BF0  ECE9  F017         	call	i2___wmul	;wreg free
  5349  001BF4  0EE2               	movlw	low (_array+2)
  5350  001BF6  2401               	addwf	?i2___wmul^0,w,c
  5351  001BF8  6ED9               	movwf	fsr2l,c
  5352  001BFA  0E0C               	movlw	high (_array+2)
  5353  001BFC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5354  001BFE  6EDA               	movwf	fsr2h,c
  5355  001C00  50DE               	movf	postinc2,w,c
  5356  001C02  10DE               	iorwf	postinc2,w,c
  5357  001C04  10DE               	iorwf	postinc2,w,c
  5358  001C06  10DE               	iorwf	postinc2,w,c
  5359  001C08  B4D8               	btfsc	status,2,c
  5360  001C0A  EF09  F00E         	goto	i2u186_41
  5361  001C0E  EF0B  F00E         	goto	i2u186_40
  5362  001C12                     i2u186_41:
  5363  001C12  EFDB  F00E         	goto	i2l2764
  5364  001C16                     i2u186_40:
  5365  001C16  C0EB  F001         	movff	_head,i2___wmul@multiplier
  5366  001C1A  C0EC  F002         	movff	_head+1,i2___wmul@multiplier+1
  5367  001C1E  0E00               	movlw	0
  5368  001C20  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5369  001C22  0E0D               	movlw	13
  5370  001C24  6E03               	movwf	i2___wmul@multiplicand^0,c
  5371  001C26  ECE9  F017         	call	i2___wmul	;wreg free
  5372  001C2A  0EE2               	movlw	low (_array+2)
  5373  001C2C  2401               	addwf	?i2___wmul^0,w,c
  5374  001C2E  6ED9               	movwf	fsr2l,c
  5375  001C30  0E0C               	movlw	high (_array+2)
  5376  001C32  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5377  001C34  6EDA               	movwf	fsr2h,c
  5378  001C36  0EF6               	movlw	246
  5379  001C38  24DE               	addwf	postinc2,w,c
  5380  001C3A  6E49               	movwf	??_UPDATE_TIMER^0,c
  5381  001C3C  0EFF               	movlw	255
  5382  001C3E  20DE               	addwfc	postinc2,w,c
  5383  001C40  6E4A               	movwf	(??_UPDATE_TIMER+1)^0,c
  5384  001C42  0EFF               	movlw	255
  5385  001C44  20DE               	addwfc	postinc2,w,c
  5386  001C46  6E4B               	movwf	(??_UPDATE_TIMER+2)^0,c
  5387  001C48  0EFF               	movlw	255
  5388  001C4A  20DE               	addwfc	postinc2,w,c
  5389  001C4C  6E4C               	movwf	(??_UPDATE_TIMER+3)^0,c
  5390  001C4E  C0EB  F001         	movff	_head,i2___wmul@multiplier
  5391  001C52  C0EC  F002         	movff	_head+1,i2___wmul@multiplier+1
  5392  001C56  0E00               	movlw	0
  5393  001C58  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5394  001C5A  0E0D               	movlw	13
  5395  001C5C  6E03               	movwf	i2___wmul@multiplicand^0,c
  5396  001C5E  ECE9  F017         	call	i2___wmul	;wreg free
  5397  001C62  0EE2               	movlw	low (_array+2)
  5398  001C64  2401               	addwf	?i2___wmul^0,w,c
  5399  001C66  6ED9               	movwf	fsr2l,c
  5400  001C68  0E0C               	movlw	high (_array+2)
  5401  001C6A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5402  001C6C  6EDA               	movwf	fsr2h,c
  5403  001C6E  C049  FFDE         	movff	??_UPDATE_TIMER,postinc2
  5404  001C72  C04A  FFDE         	movff	??_UPDATE_TIMER+1,postinc2
  5405  001C76  C04B  FFDE         	movff	??_UPDATE_TIMER+2,postinc2
  5406  001C7A  C04C  FFDE         	movff	??_UPDATE_TIMER+3,postinc2
  5407  001C7E  EFF6  F00E         	goto	i2l310
  5408  001C82                     i2l2758:
  5409                           
  5410                           ;linked_list.c: 72:         {;linked_list.c: 73:             enqueue(array[head].functio
      +                          n);
  5411  001C82  C0EB  F001         	movff	_head,i2___wmul@multiplier
  5412  001C86  C0EC  F002         	movff	_head+1,i2___wmul@multiplier+1
  5413  001C8A  0E00               	movlw	0
  5414  001C8C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5415  001C8E  0E0D               	movlw	13
  5416  001C90  6E03               	movwf	i2___wmul@multiplicand^0,c
  5417  001C92  ECE9  F017         	call	i2___wmul	;wreg free
  5418  001C96  0EEA               	movlw	low (_array+10)
  5419  001C98  2401               	addwf	?i2___wmul^0,w,c
  5420  001C9A  6ED9               	movwf	fsr2l,c
  5421  001C9C  0E0C               	movlw	high (_array+10)
  5422  001C9E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5423  001CA0  6EDA               	movwf	fsr2h,c
  5424  001CA2  CFDE F058          	movff	postinc2,_UPDATE_TIMER$2244
  5425  001CA6  CFDE F059          	movff	postinc2,_UPDATE_TIMER$2244+1
  5426  001CAA  CFDD F05A          	movff	postdec2,_UPDATE_TIMER$2244+2
  5427                           
  5428                           ;linked_list.c: 72:         {;linked_list.c: 73:             enqueue(array[head].functio
      +                          n);
  5429  001CAE  C058  F007         	movff	_UPDATE_TIMER$2244,enqueue@function
  5430  001CB2  C059  F008         	movff	_UPDATE_TIMER$2244+1,enqueue@function+1
  5431  001CB6  C05A  F009         	movff	_UPDATE_TIMER$2244+2,enqueue@function+2
  5432  001CBA  EC88  F013         	call	_enqueue	;wreg free
  5433                           
  5434                           ;linked_list.c: 74:             timestamp_t delay = array[head].period;
  5435  001CBE  C0EB  F001         	movff	_head,i2___wmul@multiplier
  5436  001CC2  C0EC  F002         	movff	_head+1,i2___wmul@multiplier+1
  5437  001CC6  0E00               	movlw	0
  5438  001CC8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5439  001CCA  0E0D               	movlw	13
  5440  001CCC  6E03               	movwf	i2___wmul@multiplicand^0,c
  5441  001CCE  ECE9  F017         	call	i2___wmul	;wreg free
  5442  001CD2  0EE6               	movlw	low (_array+6)
  5443  001CD4  2401               	addwf	?i2___wmul^0,w,c
  5444  001CD6  6ED9               	movwf	fsr2l,c
  5445  001CD8  0E0C               	movlw	high (_array+6)
  5446  001CDA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5447  001CDC  6EDA               	movwf	fsr2h,c
  5448  001CDE  CFDE F04D          	movff	postinc2,UPDATE_TIMER@delay
  5449  001CE2  CFDE F04E          	movff	postinc2,UPDATE_TIMER@delay+1
  5450  001CE6  CFDE F04F          	movff	postinc2,UPDATE_TIMER@delay+2
  5451  001CEA  CFDE F050          	movff	postinc2,UPDATE_TIMER@delay+3
  5452                           
  5453                           ;linked_list.c: 75:             timestamp_t period = array[head].period;
  5454  001CEE  C0EB  F001         	movff	_head,i2___wmul@multiplier
  5455  001CF2  C0EC  F002         	movff	_head+1,i2___wmul@multiplier+1
  5456  001CF6  0E00               	movlw	0
  5457  001CF8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5458  001CFA  0E0D               	movlw	13
  5459  001CFC  6E03               	movwf	i2___wmul@multiplicand^0,c
  5460  001CFE  ECE9  F017         	call	i2___wmul	;wreg free
  5461  001D02  0EE6               	movlw	low (_array+6)
  5462  001D04  2401               	addwf	?i2___wmul^0,w,c
  5463  001D06  6ED9               	movwf	fsr2l,c
  5464  001D08  0E0C               	movlw	high (_array+6)
  5465  001D0A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5466  001D0C  6EDA               	movwf	fsr2h,c
  5467  001D0E  CFDE F051          	movff	postinc2,UPDATE_TIMER@period
  5468  001D12  CFDE F052          	movff	postinc2,UPDATE_TIMER@period+1
  5469  001D16  CFDE F053          	movff	postinc2,UPDATE_TIMER@period+2
  5470  001D1A  CFDE F054          	movff	postinc2,UPDATE_TIMER@period+3
  5471                           
  5472                           ;linked_list.c: 76:             FUNCTION_PTR function = array[head].function;
  5473  001D1E  C0EB  F001         	movff	_head,i2___wmul@multiplier
  5474  001D22  C0EC  F002         	movff	_head+1,i2___wmul@multiplier+1
  5475  001D26  0E00               	movlw	0
  5476  001D28  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5477  001D2A  0E0D               	movlw	13
  5478  001D2C  6E03               	movwf	i2___wmul@multiplicand^0,c
  5479  001D2E  ECE9  F017         	call	i2___wmul	;wreg free
  5480  001D32  0EEA               	movlw	low (_array+10)
  5481  001D34  2401               	addwf	?i2___wmul^0,w,c
  5482  001D36  6ED9               	movwf	fsr2l,c
  5483  001D38  0E0C               	movlw	high (_array+10)
  5484  001D3A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5485  001D3C  6EDA               	movwf	fsr2h,c
  5486  001D3E  CFDE F055          	movff	postinc2,UPDATE_TIMER@function
  5487  001D42  CFDE F056          	movff	postinc2,UPDATE_TIMER@function+1
  5488  001D46  CFDD F057          	movff	postdec2,UPDATE_TIMER@function+2
  5489  001D4A                     
  5490                           ;linked_list.c: 77:             int temp_head = head;
  5491  001D4A  C0EB  F05B         	movff	_head,UPDATE_TIMER@temp_head
  5492  001D4E  C0EC  F05C         	movff	_head+1,UPDATE_TIMER@temp_head+1
  5493                           
  5494                           ;linked_list.c: 79:             head = array[head].next;
  5495  001D52  C0EB  F001         	movff	_head,i2___wmul@multiplier
  5496  001D56  C0EC  F002         	movff	_head+1,i2___wmul@multiplier+1
  5497  001D5A  0E00               	movlw	0
  5498  001D5C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5499  001D5E  0E0D               	movlw	13
  5500  001D60  6E03               	movwf	i2___wmul@multiplicand^0,c
  5501  001D62  ECE9  F017         	call	i2___wmul	;wreg free
  5502  001D66  0EE0               	movlw	low _array
  5503  001D68  2401               	addwf	?i2___wmul^0,w,c
  5504  001D6A  6ED9               	movwf	fsr2l,c
  5505  001D6C  0E0C               	movlw	high _array
  5506  001D6E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5507  001D70  6EDA               	movwf	fsr2h,c
  5508  001D72  CFDE F0EB          	movff	postinc2,_head
  5509  001D76  CFDD F0EC          	movff	postdec2,_head+1
  5510                           
  5511                           ;linked_list.c: 80:             clean_node(temp_head);
  5512  001D7A  C05B  F007         	movff	UPDATE_TIMER@temp_head,clean_node@index
  5513  001D7E  C05C  F008         	movff	UPDATE_TIMER@temp_head+1,clean_node@index+1
  5514  001D82  EC56  F011         	call	_clean_node	;wreg free
  5515  001D86                     
  5516                           ;linked_list.c: 82:             ADD_NODE(delay , period , function);
  5517  001D86  C04D  F01B         	movff	UPDATE_TIMER@delay,i2ADD_NODE@delay
  5518  001D8A  C04E  F01C         	movff	UPDATE_TIMER@delay+1,i2ADD_NODE@delay+1
  5519  001D8E  C04F  F01D         	movff	UPDATE_TIMER@delay+2,i2ADD_NODE@delay+2
  5520  001D92  C050  F01E         	movff	UPDATE_TIMER@delay+3,i2ADD_NODE@delay+3
  5521  001D96  C051  F01F         	movff	UPDATE_TIMER@period,i2ADD_NODE@period
  5522  001D9A  C052  F020         	movff	UPDATE_TIMER@period+1,i2ADD_NODE@period+1
  5523  001D9E  C053  F021         	movff	UPDATE_TIMER@period+2,i2ADD_NODE@period+2
  5524  001DA2  C054  F022         	movff	UPDATE_TIMER@period+3,i2ADD_NODE@period+3
  5525  001DA6  C055  F023         	movff	UPDATE_TIMER@function,i2ADD_NODE@function
  5526  001DAA  C056  F024         	movff	UPDATE_TIMER@function+1,i2ADD_NODE@function+1
  5527  001DAE  C057  F025         	movff	UPDATE_TIMER@function+2,i2ADD_NODE@function+2
  5528  001DB2  EC74  F00A         	call	i2_ADD_NODE	;wreg free
  5529  001DB6                     i2l2764:
  5530                           
  5531                           ;linked_list.c: 71:         while (array[head].delay ==0)
  5532  001DB6  C0EB  F001         	movff	_head,i2___wmul@multiplier
  5533  001DBA  C0EC  F002         	movff	_head+1,i2___wmul@multiplier+1
  5534  001DBE  0E00               	movlw	0
  5535  001DC0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5536  001DC2  0E0D               	movlw	13
  5537  001DC4  6E03               	movwf	i2___wmul@multiplicand^0,c
  5538  001DC6  ECE9  F017         	call	i2___wmul	;wreg free
  5539  001DCA  0EE2               	movlw	low (_array+2)
  5540  001DCC  2401               	addwf	?i2___wmul^0,w,c
  5541  001DCE  6ED9               	movwf	fsr2l,c
  5542  001DD0  0E0C               	movlw	high (_array+2)
  5543  001DD2  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5544  001DD4  6EDA               	movwf	fsr2h,c
  5545  001DD6  50DE               	movf	postinc2,w,c
  5546  001DD8  10DE               	iorwf	postinc2,w,c
  5547  001DDA  10DE               	iorwf	postinc2,w,c
  5548  001DDC  10DE               	iorwf	postinc2,w,c
  5549  001DDE  B4D8               	btfsc	status,2,c
  5550  001DE0  EFF4  F00E         	goto	i2u187_41
  5551  001DE4  EFF6  F00E         	goto	i2u187_40
  5552  001DE8                     i2u187_41:
  5553  001DE8  EF41  F00E         	goto	i2l2758
  5554  001DEC                     i2u187_40:
  5555  001DEC                     i2l310:
  5556  001DEC  0012               	return		;funcret
  5557  001DEE                     __end_of_UPDATE_TIMER:
  5558                           	opt callstack 0
  5559                           
  5560 ;; *************** function i2_ADD_NODE *****************
  5561 ;; Defined at:
  5562 ;;		line 15 in file "linked_list.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  delay           4   26[COMRAM] long 
  5565 ;;  period          4   30[COMRAM] long 
  5566 ;;  function        3   34[COMRAM] PTR FTN()void 
  5567 ;;		 -> get_temp_humid(1), check_button(1), heater_heatpumper(1), NULL(0), 
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;  ADD_NODE       13   55[COMRAM] struct Node
  5570 ;;  ADD_NODE        2   70[COMRAM] int 
  5571 ;;  ADD_NODE        2   68[COMRAM] int 
  5572 ;;  ADD_NODE        2   53[COMRAM] int 
  5573 ;;  ADD_NODE        2   51[COMRAM] int 
  5574 ;;  ADD_NODE        2   49[COMRAM] int 
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  2   26[COMRAM] int 
  5577 ;; Registers used:
  5578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5584 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5585 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5586 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5587 ;;      Totals:        46       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5588 ;;Total ram usage:       46 bytes
  5589 ;; Hardware stack levels used:    1
  5590 ;; Hardware stack levels required when called:    2
  5591 ;; This function calls:
  5592 ;;		i2___wmul
  5593 ;;		i2_add
  5594 ;;		i2_create_node
  5595 ;;		i2_return_index
  5596 ;; This function is called by:
  5597 ;;		_UPDATE_TIMER
  5598 ;; This function uses a non-reentrant model
  5599 ;;
  5600                           
  5601                           	psect	text35
  5602  0014E8                     __ptext35:
  5603                           	opt callstack 0
  5604  0014E8                     i2_ADD_NODE:
  5605                           	opt callstack 19
  5606  0014E8                     
  5607                           ;linked_list.c: 15: int ADD_NODE(timestamp_t delay , timestamp_t period , FUNCTION_PTR f
      +                          unction );linked_list.c: 16: {;linked_list.c: 17:     struct Node temp = create_node(del
      +                          ay , period , function);
  5608  0014E8  C01B  F001         	movff	i2ADD_NODE@delay,i2create_node@delay
  5609  0014EC  C01C  F002         	movff	i2ADD_NODE@delay+1,i2create_node@delay+1
  5610  0014F0  C01D  F003         	movff	i2ADD_NODE@delay+2,i2create_node@delay+2
  5611  0014F4  C01E  F004         	movff	i2ADD_NODE@delay+3,i2create_node@delay+3
  5612  0014F8  C01F  F005         	movff	i2ADD_NODE@period,i2create_node@period
  5613  0014FC  C020  F006         	movff	i2ADD_NODE@period+1,i2create_node@period+1
  5614  001500  C021  F007         	movff	i2ADD_NODE@period+2,i2create_node@period+2
  5615  001504  C022  F008         	movff	i2ADD_NODE@period+3,i2create_node@period+3
  5616  001508  C023  F009         	movff	i2ADD_NODE@function,i2create_node@function
  5617  00150C  C024  F00A         	movff	i2ADD_NODE@function+1,i2create_node@function+1
  5618  001510  C025  F00B         	movff	i2ADD_NODE@function+2,i2create_node@function+2
  5619  001514  EC21  F017         	call	i2_create_node	;wreg free
  5620  001518  EE20  F038         	lfsr	2,i2ADD_NODE@temp
  5621  00151C  0E0C               	movlw	12
  5622  00151E                     i2u161_41:
  5623  00151E  CFEB FFDB          	movff	plusw0,plusw2
  5624  001522  06E8               	decf	wreg,f,c
  5625  001524  E2FC               	bc	i2u161_41
  5626  001526                     
  5627                           ;linked_list.c: 18:     int index = return_index();
  5628  001526  EC38  F015         	call	i2_return_index	;wreg free
  5629  00152A  C001  F047         	movff	?i2_return_index,i2ADD_NODE@index
  5630  00152E  C002  F048         	movff	?i2_return_index+1,i2ADD_NODE@index+1
  5631  001532                     
  5632                           ;linked_list.c: 19:     if (index != -1)
  5633  001532  2847               	incf	i2ADD_NODE@index^0,w,c
  5634  001534  E108               	bnz	i2u162_40
  5635  001536  2848               	incf	(i2ADD_NODE@index+1)^0,w,c
  5636  001538  B4D8               	btfsc	status,2,c
  5637  00153A  EFA1  F00A         	goto	i2u162_41
  5638  00153E  EFA3  F00A         	goto	i2u162_40
  5639  001542                     i2u162_41:
  5640  001542  EFA6  F00C         	goto	i2l290
  5641  001546                     i2u162_40:
  5642  001546                     
  5643                           ;linked_list.c: 20:     {;linked_list.c: 21:         if (head == -1)
  5644  001546  0100               	movlb	0	; () banked
  5645  001548  29EB               	incf	_head& (0+255),w,b
  5646  00154A  E106               	bnz	i2u163_41
  5647  00154C  29EC               	incf	(_head+1)& (0+255),w,b
  5648  00154E  A4D8               	btfss	status,2,c
  5649  001550  EFAC  F00A         	goto	i2u163_41
  5650  001554  EFAE  F00A         	goto	i2u163_40
  5651  001558                     i2u163_41:
  5652  001558  EFC5  F00A         	goto	i2l289
  5653  00155C                     i2u163_40:
  5654  00155C                     
  5655                           ; BSR set to: 0
  5656                           ;linked_list.c: 22:         {;linked_list.c: 23:             head =index;
  5657  00155C  C047  F0EB         	movff	i2ADD_NODE@index,_head
  5658  001560  C048  F0EC         	movff	i2ADD_NODE@index+1,_head+1
  5659  001564                     
  5660                           ; BSR set to: 0
  5661                           ;linked_list.c: 24:             add(temp , head);
  5662  001564  EE20  F038         	lfsr	2,i2ADD_NODE@temp
  5663  001568  EE00  F007         	lfsr	0,i2add@temp
  5664  00156C  0E0C               	movlw	12
  5665  00156E                     i2u164_41:
  5666  00156E  CFDB FFEB          	movff	plusw2,plusw0
  5667  001572  06E8               	decf	wreg,f,c
  5668  001574  E2FC               	bc	i2u164_41
  5669  001576  C0EB  F014         	movff	_head,i2add@index
  5670  00157A  C0EC  F015         	movff	_head+1,i2add@index+1
  5671  00157E  EC1D  F012         	call	i2_add	;wreg free
  5672  001582  EFA6  F00C         	goto	i2l290
  5673  001586                     i2l2604:
  5674                           
  5675                           ; BSR set to: 0
  5676                           ;linked_list.c: 25:             return index;;	Return value of i2_ADD_NODE is never used
  5677  001586  EFA6  F00C         	goto	i2l290
  5678  00158A                     i2l289:
  5679                           
  5680                           ; BSR set to: 0
  5681                           ;linked_list.c: 28:         {;linked_list.c: 29:             int loc = head;
  5682  00158A  C0EB  F045         	movff	_head,i2ADD_NODE@loc
  5683  00158E  C0EC  F046         	movff	_head+1,i2ADD_NODE@loc+1
  5684                           
  5685                           ;linked_list.c: 30:             int pre = head;
  5686  001592  C0EB  F036         	movff	_head,i2ADD_NODE@pre
  5687  001596  C0EC  F037         	movff	_head+1,i2ADD_NODE@pre+1
  5688  00159A                     
  5689                           ; BSR set to: 0
  5690                           ;linked_list.c: 31:             int loop = 1;
  5691  00159A  0E00               	movlw	0
  5692  00159C  6E33               	movwf	(i2ADD_NODE@loop+1)^0,c
  5693  00159E  0E01               	movlw	1
  5694  0015A0  6E32               	movwf	i2ADD_NODE@loop^0,c
  5695                           
  5696                           ;linked_list.c: 32:             while (loop<no_funcs && temp.delay >= array[loc].delay)
  5697  0015A2  EF11  F00B         	goto	i2l2616
  5698  0015A6                     i2l293:
  5699                           
  5700                           ;linked_list.c: 33:             {;linked_list.c: 34:                 pre = loc;
  5701  0015A6  C045  F036         	movff	i2ADD_NODE@loc,i2ADD_NODE@pre
  5702  0015AA  C046  F037         	movff	i2ADD_NODE@loc+1,i2ADD_NODE@pre+1
  5703  0015AE                     
  5704                           ;linked_list.c: 35:                 loc = array[loc].next;
  5705  0015AE  C045  F001         	movff	i2ADD_NODE@loc,i2___wmul@multiplier
  5706  0015B2  C046  F002         	movff	i2ADD_NODE@loc+1,i2___wmul@multiplier+1
  5707  0015B6  0E00               	movlw	0
  5708  0015B8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5709  0015BA  0E0D               	movlw	13
  5710  0015BC  6E03               	movwf	i2___wmul@multiplicand^0,c
  5711  0015BE  ECE9  F017         	call	i2___wmul	;wreg free
  5712  0015C2  0EE0               	movlw	low _array
  5713  0015C4  2401               	addwf	?i2___wmul^0,w,c
  5714  0015C6  6ED9               	movwf	fsr2l,c
  5715  0015C8  0E0C               	movlw	high _array
  5716  0015CA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5717  0015CC  6EDA               	movwf	fsr2h,c
  5718  0015CE  CFDE F045          	movff	postinc2,i2ADD_NODE@loc
  5719  0015D2  CFDD F046          	movff	postdec2,i2ADD_NODE@loc+1
  5720  0015D6                     
  5721                           ;linked_list.c: 36:                 loop ++;
  5722  0015D6  4A32               	infsnz	i2ADD_NODE@loop^0,f,c
  5723  0015D8  2A33               	incf	(i2ADD_NODE@loop+1)^0,f,c
  5724  0015DA                     
  5725                           ;linked_list.c: 37:                 temp.delay = temp.delay - array[pre].delay;
  5726  0015DA  C036  F001         	movff	i2ADD_NODE@pre,i2___wmul@multiplier
  5727  0015DE  C037  F002         	movff	i2ADD_NODE@pre+1,i2___wmul@multiplier+1
  5728  0015E2  0E00               	movlw	0
  5729  0015E4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5730  0015E6  0E0D               	movlw	13
  5731  0015E8  6E03               	movwf	i2___wmul@multiplicand^0,c
  5732  0015EA  ECE9  F017         	call	i2___wmul	;wreg free
  5733  0015EE  0EE2               	movlw	low (_array+2)
  5734  0015F0  2401               	addwf	?i2___wmul^0,w,c
  5735  0015F2  6ED9               	movwf	fsr2l,c
  5736  0015F4  0E0C               	movlw	high (_array+2)
  5737  0015F6  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5738  0015F8  6EDA               	movwf	fsr2h,c
  5739  0015FA  CFDE F026          	movff	postinc2,??i2_ADD_NODE
  5740  0015FE  CFDE F027          	movff	postinc2,??i2_ADD_NODE+1
  5741  001602  CFDE F028          	movff	postinc2,??i2_ADD_NODE+2
  5742  001606  CFDE F029          	movff	postinc2,??i2_ADD_NODE+3
  5743  00160A  5026               	movf	??i2_ADD_NODE^0,w,c
  5744  00160C  5C3A               	subwf	(i2ADD_NODE@temp+2)^0,w,c
  5745  00160E  6E3A               	movwf	(i2ADD_NODE@temp+2)^0,c
  5746  001610  5027               	movf	(??i2_ADD_NODE+1)^0,w,c
  5747  001612  583B               	subwfb	(i2ADD_NODE@temp+3)^0,w,c
  5748  001614  6E3B               	movwf	(i2ADD_NODE@temp+3)^0,c
  5749  001616  5028               	movf	(??i2_ADD_NODE+2)^0,w,c
  5750  001618  583C               	subwfb	(i2ADD_NODE@temp+4)^0,w,c
  5751  00161A  6E3C               	movwf	(i2ADD_NODE@temp+4)^0,c
  5752  00161C  5029               	movf	(??i2_ADD_NODE+3)^0,w,c
  5753  00161E  583D               	subwfb	(i2ADD_NODE@temp+5)^0,w,c
  5754  001620  6E3D               	movwf	(i2ADD_NODE@temp+5)^0,c
  5755  001622                     i2l2616:
  5756                           
  5757                           ;linked_list.c: 32:             while (loop<no_funcs && temp.delay >= array[loc].delay)
  5758  001622  0100               	movlb	0	; () banked
  5759  001624  51E2               	movf	_no_funcs& (0+255),w,b
  5760  001626  5C32               	subwf	i2ADD_NODE@loop^0,w,c
  5761  001628  5033               	movf	(i2ADD_NODE@loop+1)^0,w,c
  5762  00162A  0A80               	xorlw	128
  5763  00162C  6E26               	movwf	??i2_ADD_NODE^0,c
  5764  00162E  51E3               	movf	(_no_funcs+1)& (0+255),w,b
  5765  001630  0A80               	xorlw	128
  5766  001632  5826               	subwfb	??i2_ADD_NODE^0,w,c
  5767  001634  B0D8               	btfsc	status,0,c
  5768  001636  EF1F  F00B         	goto	i2u165_41
  5769  00163A  EF21  F00B         	goto	i2u165_40
  5770  00163E                     i2u165_41:
  5771  00163E  EF44  F00B         	goto	i2l2620
  5772  001642                     i2u165_40:
  5773  001642                     
  5774                           ; BSR set to: 0
  5775  001642  C045  F001         	movff	i2ADD_NODE@loc,i2___wmul@multiplier
  5776  001646  C046  F002         	movff	i2ADD_NODE@loc+1,i2___wmul@multiplier+1
  5777  00164A  0E00               	movlw	0
  5778  00164C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5779  00164E  0E0D               	movlw	13
  5780  001650  6E03               	movwf	i2___wmul@multiplicand^0,c
  5781  001652  ECE9  F017         	call	i2___wmul	;wreg free
  5782  001656  0EE2               	movlw	low (_array+2)
  5783  001658  2401               	addwf	?i2___wmul^0,w,c
  5784  00165A  6ED9               	movwf	fsr2l,c
  5785  00165C  0E0C               	movlw	high (_array+2)
  5786  00165E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5787  001660  6EDA               	movwf	fsr2h,c
  5788  001662  50DE               	movf	postinc2,w,c
  5789  001664  5C3A               	subwf	(i2ADD_NODE@temp+2)^0,w,c
  5790  001666  50DE               	movf	postinc2,w,c
  5791  001668  583B               	subwfb	(i2ADD_NODE@temp+3)^0,w,c
  5792  00166A  50DE               	movf	postinc2,w,c
  5793  00166C  583C               	subwfb	(i2ADD_NODE@temp+4)^0,w,c
  5794  00166E  503D               	movf	(i2ADD_NODE@temp+5)^0,w,c
  5795  001670  0A80               	xorlw	128
  5796  001672  6E2A               	movwf	(??i2_ADD_NODE+4)^0,c
  5797  001674  50DE               	movf	postinc2,w,c
  5798  001676  0A80               	xorlw	128
  5799  001678  582A               	subwfb	(??i2_ADD_NODE+4)^0,w,c
  5800  00167A  B0D8               	btfsc	status,0,c
  5801  00167C  EF42  F00B         	goto	i2u166_41
  5802  001680  EF44  F00B         	goto	i2u166_40
  5803  001684                     i2u166_41:
  5804  001684  EFD3  F00A         	goto	i2l293
  5805  001688                     i2u166_40:
  5806  001688                     i2l2620:
  5807                           
  5808                           ;linked_list.c: 39:             if (loc == head)
  5809  001688  0100               	movlb	0	; () banked
  5810  00168A  51EB               	movf	_head& (0+255),w,b
  5811  00168C  1845               	xorwf	i2ADD_NODE@loc^0,w,c
  5812  00168E  E107               	bnz	i2u167_41
  5813  001690  51EC               	movf	(_head+1)& (0+255),w,b
  5814  001692  1846               	xorwf	(i2ADD_NODE@loc+1)^0,w,c
  5815  001694  A4D8               	btfss	status,2,c
  5816  001696  EF4F  F00B         	goto	i2u167_41
  5817  00169A  EF51  F00B         	goto	i2u167_40
  5818  00169E                     i2u167_41:
  5819  00169E  EFE2  F00B         	goto	i2l2632
  5820  0016A2                     i2u167_40:
  5821  0016A2                     
  5822                           ; BSR set to: 0
  5823                           ;linked_list.c: 40:             {;linked_list.c: 41:                 add(temp , index);
  5824  0016A2  EE20  F038         	lfsr	2,i2ADD_NODE@temp
  5825  0016A6  EE00  F007         	lfsr	0,i2add@temp
  5826  0016AA  0E0C               	movlw	12
  5827  0016AC                     i2u168_41:
  5828  0016AC  CFDB FFEB          	movff	plusw2,plusw0
  5829  0016B0  06E8               	decf	wreg,f,c
  5830  0016B2  E2FC               	bc	i2u168_41
  5831  0016B4  C047  F014         	movff	i2ADD_NODE@index,i2add@index
  5832  0016B8  C048  F015         	movff	i2ADD_NODE@index+1,i2add@index+1
  5833  0016BC  EC1D  F012         	call	i2_add	;wreg free
  5834  0016C0                     
  5835                           ;linked_list.c: 42:                 array[index].next = head;
  5836  0016C0  C047  F001         	movff	i2ADD_NODE@index,i2___wmul@multiplier
  5837  0016C4  C048  F002         	movff	i2ADD_NODE@index+1,i2___wmul@multiplier+1
  5838  0016C8  0E00               	movlw	0
  5839  0016CA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5840  0016CC  0E0D               	movlw	13
  5841  0016CE  6E03               	movwf	i2___wmul@multiplicand^0,c
  5842  0016D0  ECE9  F017         	call	i2___wmul	;wreg free
  5843  0016D4  0EE0               	movlw	low _array
  5844  0016D6  2401               	addwf	?i2___wmul^0,w,c
  5845  0016D8  6ED9               	movwf	fsr2l,c
  5846  0016DA  0E0C               	movlw	high _array
  5847  0016DC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5848  0016DE  6EDA               	movwf	fsr2h,c
  5849  0016E0  C0EB  FFDE         	movff	_head,postinc2
  5850  0016E4  C0EC  FFDD         	movff	_head+1,postdec2
  5851  0016E8                     
  5852                           ;linked_list.c: 43:                 head = index;
  5853  0016E8  C047  F0EB         	movff	i2ADD_NODE@index,_head
  5854  0016EC  C048  F0EC         	movff	i2ADD_NODE@index+1,_head+1
  5855  0016F0                     
  5856                           ;linked_list.c: 44:                 int next = array[index].next;
  5857  0016F0  C047  F001         	movff	i2ADD_NODE@index,i2___wmul@multiplier
  5858  0016F4  C048  F002         	movff	i2ADD_NODE@index+1,i2___wmul@multiplier+1
  5859  0016F8  0E00               	movlw	0
  5860  0016FA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5861  0016FC  0E0D               	movlw	13
  5862  0016FE  6E03               	movwf	i2___wmul@multiplicand^0,c
  5863  001700  ECE9  F017         	call	i2___wmul	;wreg free
  5864  001704  0EE0               	movlw	low _array
  5865  001706  2401               	addwf	?i2___wmul^0,w,c
  5866  001708  6ED9               	movwf	fsr2l,c
  5867  00170A  0E0C               	movlw	high _array
  5868  00170C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5869  00170E  6EDA               	movwf	fsr2h,c
  5870  001710  CFDE F034          	movff	postinc2,i2ADD_NODE@next
  5871  001714  CFDD F035          	movff	postdec2,i2ADD_NODE@next+1
  5872  001718                     
  5873                           ;linked_list.c: 45:                 array[next].delay = array[next].delay - array[index]
      +                          .delay;
  5874  001718  C047  F001         	movff	i2ADD_NODE@index,i2___wmul@multiplier
  5875  00171C  C048  F002         	movff	i2ADD_NODE@index+1,i2___wmul@multiplier+1
  5876  001720  0E00               	movlw	0
  5877  001722  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5878  001724  0E0D               	movlw	13
  5879  001726  6E03               	movwf	i2___wmul@multiplicand^0,c
  5880  001728  ECE9  F017         	call	i2___wmul	;wreg free
  5881  00172C  0EE2               	movlw	low (_array+2)
  5882  00172E  2401               	addwf	?i2___wmul^0,w,c
  5883  001730  6ED9               	movwf	fsr2l,c
  5884  001732  0E0C               	movlw	high (_array+2)
  5885  001734  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5886  001736  6EDA               	movwf	fsr2h,c
  5887  001738  CFDE F026          	movff	postinc2,??i2_ADD_NODE
  5888  00173C  CFDE F027          	movff	postinc2,??i2_ADD_NODE+1
  5889  001740  CFDE F028          	movff	postinc2,??i2_ADD_NODE+2
  5890  001744  CFDE F029          	movff	postinc2,??i2_ADD_NODE+3
  5891  001748  C034  F001         	movff	i2ADD_NODE@next,i2___wmul@multiplier
  5892  00174C  C035  F002         	movff	i2ADD_NODE@next+1,i2___wmul@multiplier+1
  5893  001750  0E00               	movlw	0
  5894  001752  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5895  001754  0E0D               	movlw	13
  5896  001756  6E03               	movwf	i2___wmul@multiplicand^0,c
  5897  001758  ECE9  F017         	call	i2___wmul	;wreg free
  5898  00175C  0EE2               	movlw	low (_array+2)
  5899  00175E  2401               	addwf	?i2___wmul^0,w,c
  5900  001760  6ED9               	movwf	fsr2l,c
  5901  001762  0E0C               	movlw	high (_array+2)
  5902  001764  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5903  001766  6EDA               	movwf	fsr2h,c
  5904  001768  CFDE F02A          	movff	postinc2,??i2_ADD_NODE+4
  5905  00176C  CFDE F02B          	movff	postinc2,??i2_ADD_NODE+5
  5906  001770  CFDE F02C          	movff	postinc2,??i2_ADD_NODE+6
  5907  001774  CFDE F02D          	movff	postinc2,??i2_ADD_NODE+7
  5908  001778  5026               	movf	??i2_ADD_NODE^0,w,c
  5909  00177A  5C2A               	subwf	(??i2_ADD_NODE+4)^0,w,c
  5910  00177C  6E2E               	movwf	(??i2_ADD_NODE+8)^0,c
  5911  00177E  5027               	movf	(??i2_ADD_NODE+1)^0,w,c
  5912  001780  582B               	subwfb	(??i2_ADD_NODE+5)^0,w,c
  5913  001782  6E2F               	movwf	(??i2_ADD_NODE+9)^0,c
  5914  001784  5028               	movf	(??i2_ADD_NODE+2)^0,w,c
  5915  001786  582C               	subwfb	(??i2_ADD_NODE+6)^0,w,c
  5916  001788  6E30               	movwf	(??i2_ADD_NODE+10)^0,c
  5917  00178A  5029               	movf	(??i2_ADD_NODE+3)^0,w,c
  5918  00178C  582D               	subwfb	(??i2_ADD_NODE+7)^0,w,c
  5919  00178E  6E31               	movwf	(??i2_ADD_NODE+11)^0,c
  5920  001790  C034  F001         	movff	i2ADD_NODE@next,i2___wmul@multiplier
  5921  001794  C035  F002         	movff	i2ADD_NODE@next+1,i2___wmul@multiplier+1
  5922  001798  0E00               	movlw	0
  5923  00179A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5924  00179C  0E0D               	movlw	13
  5925  00179E  6E03               	movwf	i2___wmul@multiplicand^0,c
  5926  0017A0  ECE9  F017         	call	i2___wmul	;wreg free
  5927  0017A4  0EE2               	movlw	low (_array+2)
  5928  0017A6  2401               	addwf	?i2___wmul^0,w,c
  5929  0017A8  6ED9               	movwf	fsr2l,c
  5930  0017AA  0E0C               	movlw	high (_array+2)
  5931  0017AC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5932  0017AE  6EDA               	movwf	fsr2h,c
  5933  0017B0  C02E  FFDE         	movff	??i2_ADD_NODE+8,postinc2
  5934  0017B4  C02F  FFDE         	movff	??i2_ADD_NODE+9,postinc2
  5935  0017B8  C030  FFDE         	movff	??i2_ADD_NODE+10,postinc2
  5936  0017BC  C031  FFDE         	movff	??i2_ADD_NODE+11,postinc2
  5937                           
  5938                           ;linked_list.c: 46:             }
  5939  0017C0  EFA6  F00C         	goto	i2l290
  5940  0017C4                     i2l2632:
  5941                           
  5942                           ; BSR set to: 0
  5943  0017C4  2845               	incf	i2ADD_NODE@loc^0,w,c
  5944  0017C6  E108               	bnz	i2u169_40
  5945  0017C8  2846               	incf	(i2ADD_NODE@loc+1)^0,w,c
  5946  0017CA  B4D8               	btfsc	status,2,c
  5947  0017CC  EFEA  F00B         	goto	i2u169_41
  5948  0017D0  EFEC  F00B         	goto	i2u169_40
  5949  0017D4                     i2u169_41:
  5950  0017D4  EF79  F00C         	goto	i2l2642
  5951  0017D8                     i2u169_40:
  5952  0017D8                     
  5953                           ; BSR set to: 0
  5954                           ;linked_list.c: 48:                 add(temp , index);
  5955  0017D8  EE20  F038         	lfsr	2,i2ADD_NODE@temp
  5956  0017DC  EE00  F007         	lfsr	0,i2add@temp
  5957  0017E0  0E0C               	movlw	12
  5958  0017E2                     i2u170_41:
  5959  0017E2  CFDB FFEB          	movff	plusw2,plusw0
  5960  0017E6  06E8               	decf	wreg,f,c
  5961  0017E8  E2FC               	bc	i2u170_41
  5962  0017EA  C047  F014         	movff	i2ADD_NODE@index,i2add@index
  5963  0017EE  C048  F015         	movff	i2ADD_NODE@index+1,i2add@index+1
  5964  0017F2  EC1D  F012         	call	i2_add	;wreg free
  5965  0017F6                     
  5966                           ;linked_list.c: 49:                 array[pre].next = index;
  5967  0017F6  C036  F001         	movff	i2ADD_NODE@pre,i2___wmul@multiplier
  5968  0017FA  C037  F002         	movff	i2ADD_NODE@pre+1,i2___wmul@multiplier+1
  5969  0017FE  0E00               	movlw	0
  5970  001800  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5971  001802  0E0D               	movlw	13
  5972  001804  6E03               	movwf	i2___wmul@multiplicand^0,c
  5973  001806  ECE9  F017         	call	i2___wmul	;wreg free
  5974  00180A  0EE0               	movlw	low _array
  5975  00180C  2401               	addwf	?i2___wmul^0,w,c
  5976  00180E  6ED9               	movwf	fsr2l,c
  5977  001810  0E0C               	movlw	high _array
  5978  001812  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5979  001814  6EDA               	movwf	fsr2h,c
  5980  001816  C047  FFDE         	movff	i2ADD_NODE@index,postinc2
  5981  00181A  C048  FFDD         	movff	i2ADD_NODE@index+1,postdec2
  5982  00181E                     
  5983                           ;linked_list.c: 50:                 array[index].next = loc;
  5984  00181E  C047  F001         	movff	i2ADD_NODE@index,i2___wmul@multiplier
  5985  001822  C048  F002         	movff	i2ADD_NODE@index+1,i2___wmul@multiplier+1
  5986  001826  0E00               	movlw	0
  5987  001828  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5988  00182A  0E0D               	movlw	13
  5989  00182C  6E03               	movwf	i2___wmul@multiplicand^0,c
  5990  00182E  ECE9  F017         	call	i2___wmul	;wreg free
  5991  001832  0EE0               	movlw	low _array
  5992  001834  2401               	addwf	?i2___wmul^0,w,c
  5993  001836  6ED9               	movwf	fsr2l,c
  5994  001838  0E0C               	movlw	high _array
  5995  00183A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5996  00183C  6EDA               	movwf	fsr2h,c
  5997  00183E  C045  FFDE         	movff	i2ADD_NODE@loc,postinc2
  5998  001842  C046  FFDD         	movff	i2ADD_NODE@loc+1,postdec2
  5999  001846                     
  6000                           ;linked_list.c: 51:                 array[loc].delay = array[loc].delay - array[index].d
      +                          elay;
  6001  001846  C047  F001         	movff	i2ADD_NODE@index,i2___wmul@multiplier
  6002  00184A  C048  F002         	movff	i2ADD_NODE@index+1,i2___wmul@multiplier+1
  6003  00184E  0E00               	movlw	0
  6004  001850  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6005  001852  0E0D               	movlw	13
  6006  001854  6E03               	movwf	i2___wmul@multiplicand^0,c
  6007  001856  ECE9  F017         	call	i2___wmul	;wreg free
  6008  00185A  0EE2               	movlw	low (_array+2)
  6009  00185C  2401               	addwf	?i2___wmul^0,w,c
  6010  00185E  6ED9               	movwf	fsr2l,c
  6011  001860  0E0C               	movlw	high (_array+2)
  6012  001862  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6013  001864  6EDA               	movwf	fsr2h,c
  6014  001866  CFDE F026          	movff	postinc2,??i2_ADD_NODE
  6015  00186A  CFDE F027          	movff	postinc2,??i2_ADD_NODE+1
  6016  00186E  CFDE F028          	movff	postinc2,??i2_ADD_NODE+2
  6017  001872  CFDE F029          	movff	postinc2,??i2_ADD_NODE+3
  6018  001876  C045  F001         	movff	i2ADD_NODE@loc,i2___wmul@multiplier
  6019  00187A  C046  F002         	movff	i2ADD_NODE@loc+1,i2___wmul@multiplier+1
  6020  00187E  0E00               	movlw	0
  6021  001880  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6022  001882  0E0D               	movlw	13
  6023  001884  6E03               	movwf	i2___wmul@multiplicand^0,c
  6024  001886  ECE9  F017         	call	i2___wmul	;wreg free
  6025  00188A  0EE2               	movlw	low (_array+2)
  6026  00188C  2401               	addwf	?i2___wmul^0,w,c
  6027  00188E  6ED9               	movwf	fsr2l,c
  6028  001890  0E0C               	movlw	high (_array+2)
  6029  001892  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6030  001894  6EDA               	movwf	fsr2h,c
  6031  001896  CFDE F02A          	movff	postinc2,??i2_ADD_NODE+4
  6032  00189A  CFDE F02B          	movff	postinc2,??i2_ADD_NODE+5
  6033  00189E  CFDE F02C          	movff	postinc2,??i2_ADD_NODE+6
  6034  0018A2  CFDE F02D          	movff	postinc2,??i2_ADD_NODE+7
  6035  0018A6  5026               	movf	??i2_ADD_NODE^0,w,c
  6036  0018A8  5C2A               	subwf	(??i2_ADD_NODE+4)^0,w,c
  6037  0018AA  6E2E               	movwf	(??i2_ADD_NODE+8)^0,c
  6038  0018AC  5027               	movf	(??i2_ADD_NODE+1)^0,w,c
  6039  0018AE  582B               	subwfb	(??i2_ADD_NODE+5)^0,w,c
  6040  0018B0  6E2F               	movwf	(??i2_ADD_NODE+9)^0,c
  6041  0018B2  5028               	movf	(??i2_ADD_NODE+2)^0,w,c
  6042  0018B4  582C               	subwfb	(??i2_ADD_NODE+6)^0,w,c
  6043  0018B6  6E30               	movwf	(??i2_ADD_NODE+10)^0,c
  6044  0018B8  5029               	movf	(??i2_ADD_NODE+3)^0,w,c
  6045  0018BA  582D               	subwfb	(??i2_ADD_NODE+7)^0,w,c
  6046  0018BC  6E31               	movwf	(??i2_ADD_NODE+11)^0,c
  6047  0018BE  C045  F001         	movff	i2ADD_NODE@loc,i2___wmul@multiplier
  6048  0018C2  C046  F002         	movff	i2ADD_NODE@loc+1,i2___wmul@multiplier+1
  6049  0018C6  0E00               	movlw	0
  6050  0018C8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6051  0018CA  0E0D               	movlw	13
  6052  0018CC  6E03               	movwf	i2___wmul@multiplicand^0,c
  6053  0018CE  ECE9  F017         	call	i2___wmul	;wreg free
  6054  0018D2  0EE2               	movlw	low (_array+2)
  6055  0018D4  2401               	addwf	?i2___wmul^0,w,c
  6056  0018D6  6ED9               	movwf	fsr2l,c
  6057  0018D8  0E0C               	movlw	high (_array+2)
  6058  0018DA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6059  0018DC  6EDA               	movwf	fsr2h,c
  6060  0018DE  C02E  FFDE         	movff	??i2_ADD_NODE+8,postinc2
  6061  0018E2  C02F  FFDE         	movff	??i2_ADD_NODE+9,postinc2
  6062  0018E6  C030  FFDE         	movff	??i2_ADD_NODE+10,postinc2
  6063  0018EA  C031  FFDE         	movff	??i2_ADD_NODE+11,postinc2
  6064                           
  6065                           ;linked_list.c: 53:             }
  6066  0018EE  EFA6  F00C         	goto	i2l290
  6067  0018F2                     i2l2642:
  6068                           
  6069                           ; BSR set to: 0
  6070  0018F2  2845               	incf	i2ADD_NODE@loc^0,w,c
  6071  0018F4  E106               	bnz	i2u171_41
  6072  0018F6  2846               	incf	(i2ADD_NODE@loc+1)^0,w,c
  6073  0018F8  A4D8               	btfss	status,2,c
  6074  0018FA  EF81  F00C         	goto	i2u171_41
  6075  0018FE  EF83  F00C         	goto	i2u171_40
  6076  001902                     i2u171_41:
  6077  001902  EFC3  F00A         	goto	i2l2604
  6078  001906                     i2u171_40:
  6079  001906                     
  6080                           ; BSR set to: 0
  6081                           ;linked_list.c: 55:             {;linked_list.c: 56:                 add(temp , index);
  6082  001906  EE20  F038         	lfsr	2,i2ADD_NODE@temp
  6083  00190A  EE00  F007         	lfsr	0,i2add@temp
  6084  00190E  0E0C               	movlw	12
  6085  001910                     i2u172_41:
  6086  001910  CFDB FFEB          	movff	plusw2,plusw0
  6087  001914  06E8               	decf	wreg,f,c
  6088  001916  E2FC               	bc	i2u172_41
  6089  001918  C047  F014         	movff	i2ADD_NODE@index,i2add@index
  6090  00191C  C048  F015         	movff	i2ADD_NODE@index+1,i2add@index+1
  6091  001920  EC1D  F012         	call	i2_add	;wreg free
  6092  001924                     
  6093                           ;linked_list.c: 57:                 array[pre].next = index;
  6094  001924  C036  F001         	movff	i2ADD_NODE@pre,i2___wmul@multiplier
  6095  001928  C037  F002         	movff	i2ADD_NODE@pre+1,i2___wmul@multiplier+1
  6096  00192C  0E00               	movlw	0
  6097  00192E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6098  001930  0E0D               	movlw	13
  6099  001932  6E03               	movwf	i2___wmul@multiplicand^0,c
  6100  001934  ECE9  F017         	call	i2___wmul	;wreg free
  6101  001938  0EE0               	movlw	low _array
  6102  00193A  2401               	addwf	?i2___wmul^0,w,c
  6103  00193C  6ED9               	movwf	fsr2l,c
  6104  00193E  0E0C               	movlw	high _array
  6105  001940  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6106  001942  6EDA               	movwf	fsr2h,c
  6107  001944  C047  FFDE         	movff	i2ADD_NODE@index,postinc2
  6108  001948  C048  FFDD         	movff	i2ADD_NODE@index+1,postdec2
  6109  00194C                     i2l290:
  6110  00194C  0012               	return		;funcret
  6111  00194E                     __end_ofi2_ADD_NODE:
  6112                           	opt callstack 0
  6113                           
  6114 ;; *************** function i2_return_index *****************
  6115 ;; Defined at:
  6116 ;;		line 115 in file "linked_list.c"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;		None
  6119 ;; Auto vars:     Size  Location     Type
  6120 ;;  return_index    2    4[COMRAM] int 
  6121 ;; Return value:  Size  Location     Type
  6122 ;;                  2    0[COMRAM] int 
  6123 ;; Registers used:
  6124 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6125 ;; Tracked objects:
  6126 ;;		On entry : 0/0
  6127 ;;		On exit  : 0/0
  6128 ;;		Unchanged: 0/0
  6129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6130 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6131 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6132 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6133 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6134 ;;Total ram usage:        6 bytes
  6135 ;; Hardware stack levels used:    1
  6136 ;; This function calls:
  6137 ;;		Nothing
  6138 ;; This function is called by:
  6139 ;;		i2_ADD_NODE
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142                           
  6143                           	psect	text36
  6144  002A70                     __ptext36:
  6145                           	opt callstack 0
  6146  002A70                     i2_return_index:
  6147                           	opt callstack 20
  6148  002A70                     
  6149                           ;linked_list.c: 117:     for (int i = 0 ; i<20 ; i++)
  6150  002A70  0E00               	movlw	0
  6151  002A72  6E06               	movwf	(i2return_index@i+1)^0,c
  6152  002A74  0E00               	movlw	0
  6153  002A76  6E05               	movwf	i2return_index@i^0,c
  6154  002A78                     i2l2334:
  6155                           
  6156                           ;linked_list.c: 118:         if (check_index[i] ==0)
  6157  002A78  90D8               	bcf	status,0,c
  6158  002A7A  3405               	rlcf	i2return_index@i^0,w,c
  6159  002A7C  6ED9               	movwf	fsr2l,c
  6160  002A7E  3406               	rlcf	(i2return_index@i+1)^0,w,c
  6161  002A80  6EDA               	movwf	fsr2h,c
  6162  002A82  0E00               	movlw	low _check_index
  6163  002A84  26D9               	addwf	fsr2l,f,c
  6164  002A86  0E01               	movlw	high _check_index
  6165  002A88  22DA               	addwfc	fsr2h,f,c
  6166  002A8A  50DE               	movf	postinc2,w,c
  6167  002A8C  10DE               	iorwf	postinc2,w,c
  6168  002A8E  A4D8               	btfss	status,2,c
  6169  002A90  EF4C  F015         	goto	i2u121_41
  6170  002A94  EF4E  F015         	goto	i2u121_40
  6171  002A98                     i2u121_41:
  6172  002A98  EF64  F015         	goto	i2l2344
  6173  002A9C                     i2u121_40:
  6174  002A9C                     
  6175                           ;linked_list.c: 119:         {;linked_list.c: 120:             check_index[i]=1;
  6176  002A9C  90D8               	bcf	status,0,c
  6177  002A9E  3405               	rlcf	i2return_index@i^0,w,c
  6178  002AA0  6ED9               	movwf	fsr2l,c
  6179  002AA2  3406               	rlcf	(i2return_index@i+1)^0,w,c
  6180  002AA4  6EDA               	movwf	fsr2h,c
  6181  002AA6  0E00               	movlw	low _check_index
  6182  002AA8  26D9               	addwf	fsr2l,f,c
  6183  002AAA  0E01               	movlw	high _check_index
  6184  002AAC  22DA               	addwfc	fsr2h,f,c
  6185  002AAE  0E01               	movlw	1
  6186  002AB0  6EDE               	movwf	postinc2,c
  6187  002AB2  0E00               	movlw	0
  6188  002AB4  6EDD               	movwf	postdec2,c
  6189  002AB6                     
  6190                           ;linked_list.c: 121:             no_funcs++;
  6191  002AB6  0100               	movlb	0	; () banked
  6192  002AB8  4BE2               	infsnz	_no_funcs& (0+255),f,b
  6193  002ABA  2BE3               	incf	(_no_funcs+1)& (0+255),f,b
  6194  002ABC                     
  6195                           ; BSR set to: 0
  6196                           ;linked_list.c: 122:             return i;
  6197  002ABC  C005  F001         	movff	i2return_index@i,?i2_return_index
  6198  002AC0  C006  F002         	movff	i2return_index@i+1,?i2_return_index+1
  6199  002AC4  EF76  F015         	goto	i2l326
  6200  002AC8                     i2l2344:
  6201  002AC8  4A05               	infsnz	i2return_index@i^0,f,c
  6202  002ACA  2A06               	incf	(i2return_index@i+1)^0,f,c
  6203  002ACC  BE06               	btfsc	(i2return_index@i+1)^0,7,c
  6204  002ACE  EF72  F015         	goto	i2u122_41
  6205  002AD2  5006               	movf	(i2return_index@i+1)^0,w,c
  6206  002AD4  E109               	bnz	i2u122_40
  6207  002AD6  0E14               	movlw	20
  6208  002AD8  5C05               	subwf	i2return_index@i^0,w,c
  6209  002ADA  A0D8               	btfss	status,0,c
  6210  002ADC  EF72  F015         	goto	i2u122_41
  6211  002AE0  EF74  F015         	goto	i2u122_40
  6212  002AE4                     i2u122_41:
  6213  002AE4  EF3C  F015         	goto	i2l2334
  6214  002AE8                     i2u122_40:
  6215  002AE8                     
  6216                           ;linked_list.c: 124:     return -1;
  6217  002AE8  6801               	setf	?i2_return_index^0,c
  6218  002AEA  6802               	setf	(?i2_return_index+1)^0,c
  6219  002AEC                     i2l326:
  6220  002AEC  0012               	return		;funcret
  6221  002AEE                     __end_ofi2_return_index:
  6222                           	opt callstack 0
  6223                           
  6224 ;; *************** function i2_create_node *****************
  6225 ;; Defined at:
  6226 ;;		line 137 in file "linked_list.c"
  6227 ;; Parameters:    Size  Location     Type
  6228 ;;  delay           4    0[COMRAM] long 
  6229 ;;  period          4    4[COMRAM] long 
  6230 ;;  function        3    8[COMRAM] PTR FTN()void 
  6231 ;;		 -> get_temp_humid(1), check_button(1), heater_heatpumper(1), NULL(0), 
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;  create_node    13   13[COMRAM] struct Node
  6234 ;; Return value:  Size  Location     Type
  6235 ;;                  13    0[COMRAM] struct Node
  6236 ;; Registers used:
  6237 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  6238 ;; Tracked objects:
  6239 ;;		On entry : 0/0
  6240 ;;		On exit  : 0/0
  6241 ;;		Unchanged: 0/0
  6242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6243 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6244 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6246 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6247 ;;Total ram usage:       26 bytes
  6248 ;; Hardware stack levels used:    1
  6249 ;; This function calls:
  6250 ;;		Nothing
  6251 ;; This function is called by:
  6252 ;;		i2_ADD_NODE
  6253 ;; This function uses a non-reentrant model
  6254 ;;
  6255                           
  6256                           	psect	text37
  6257  002E42                     __ptext37:
  6258                           	opt callstack 0
  6259  002E42                     i2_create_node:
  6260                           	opt callstack 20
  6261  002E42                     
  6262                           ;linked_list.c: 138:     struct Node temp;;linked_list.c: 139:     temp.next = -1;
  6263  002E42  680E               	setf	i2create_node@temp^0,c
  6264  002E44  680F               	setf	(i2create_node@temp+1)^0,c
  6265                           
  6266                           ;linked_list.c: 140:     temp.delay = delay;
  6267  002E46  C001  F010         	movff	i2create_node@delay,i2create_node@temp+2
  6268  002E4A  C002  F011         	movff	i2create_node@delay+1,i2create_node@temp+3
  6269  002E4E  C003  F012         	movff	i2create_node@delay+2,i2create_node@temp+4
  6270  002E52  C004  F013         	movff	i2create_node@delay+3,i2create_node@temp+5
  6271                           
  6272                           ;linked_list.c: 141:     temp.period = period;
  6273  002E56  C005  F014         	movff	i2create_node@period,i2create_node@temp+6
  6274  002E5A  C006  F015         	movff	i2create_node@period+1,i2create_node@temp+7
  6275  002E5E  C007  F016         	movff	i2create_node@period+2,i2create_node@temp+8
  6276  002E62  C008  F017         	movff	i2create_node@period+3,i2create_node@temp+9
  6277  002E66                     
  6278                           ;linked_list.c: 142:     temp.function = function;
  6279  002E66  C009  F018         	movff	i2create_node@function,i2create_node@temp+10
  6280  002E6A  C00A  F019         	movff	i2create_node@function+1,i2create_node@temp+11
  6281  002E6E  C00B  F01A         	movff	i2create_node@function+2,i2create_node@temp+12
  6282  002E72                     
  6283                           ;linked_list.c: 143:     return temp;
  6284  002E72  EE20  F00E         	lfsr	2,i2create_node@temp
  6285  002E76  EE00  F001         	lfsr	0,?i2_create_node
  6286  002E7A  0E0C               	movlw	12
  6287  002E7C                     i2u123_41:
  6288  002E7C  CFDB FFEB          	movff	plusw2,plusw0
  6289  002E80  06E8               	decf	wreg,f,c
  6290  002E82  E2FC               	bc	i2u123_41
  6291  002E84  0012               	return		;funcret
  6292  002E86                     __end_ofi2_create_node:
  6293                           	opt callstack 0
  6294                           
  6295 ;; *************** function i2_add *****************
  6296 ;; Defined at:
  6297 ;;		line 107 in file "linked_list.c"
  6298 ;; Parameters:    Size  Location     Type
  6299 ;;  temp           13    6[COMRAM] struct Node
  6300 ;;  index           2   19[COMRAM] int 
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;		None
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  1    wreg      void 
  6305 ;; Registers used:
  6306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6312 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6315 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6316 ;;Total ram usage:       15 bytes
  6317 ;; Hardware stack levels used:    1
  6318 ;; Hardware stack levels required when called:    1
  6319 ;; This function calls:
  6320 ;;		i2___wmul
  6321 ;; This function is called by:
  6322 ;;		i2_ADD_NODE
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           	psect	text38
  6327  00243A                     __ptext38:
  6328                           	opt callstack 0
  6329  00243A                     i2_add:
  6330                           	opt callstack 19
  6331  00243A                     
  6332                           ;linked_list.c: 107: void add(struct Node temp , int index);linked_list.c: 108: {;linked
      +                          _list.c: 109:     array[index].next = temp.next;
  6333  00243A  C014  F001         	movff	i2add@index,i2___wmul@multiplier
  6334  00243E  C015  F002         	movff	i2add@index+1,i2___wmul@multiplier+1
  6335  002442  0E00               	movlw	0
  6336  002444  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6337  002446  0E0D               	movlw	13
  6338  002448  6E03               	movwf	i2___wmul@multiplicand^0,c
  6339  00244A  ECE9  F017         	call	i2___wmul	;wreg free
  6340  00244E  0EE0               	movlw	low _array
  6341  002450  2401               	addwf	?i2___wmul^0,w,c
  6342  002452  6ED9               	movwf	fsr2l,c
  6343  002454  0E0C               	movlw	high _array
  6344  002456  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6345  002458  6EDA               	movwf	fsr2h,c
  6346  00245A  C007  FFDE         	movff	i2add@temp,postinc2
  6347  00245E  C008  FFDD         	movff	i2add@temp+1,postdec2
  6348  002462                     
  6349                           ;linked_list.c: 110:  array[index].delay = temp.delay;
  6350  002462  EE20  F009         	lfsr	2,i2add@temp+2
  6351  002466  C014  F001         	movff	i2add@index,i2___wmul@multiplier
  6352  00246A  C015  F002         	movff	i2add@index+1,i2___wmul@multiplier+1
  6353  00246E  0E00               	movlw	0
  6354  002470  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6355  002472  0E0D               	movlw	13
  6356  002474  6E03               	movwf	i2___wmul@multiplicand^0,c
  6357  002476  ECE9  F017         	call	i2___wmul	;wreg free
  6358  00247A  0EE2               	movlw	low (_array+2)
  6359  00247C  2401               	addwf	?i2___wmul^0,w,c
  6360  00247E  6EE1               	movwf	fsr1l,c
  6361  002480  0E0C               	movlw	high (_array+2)
  6362  002482  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6363  002484  6EE2               	movwf	fsr1h,c
  6364  002486  CFDE FFE6          	movff	postinc2,postinc1
  6365  00248A  CFDE FFE6          	movff	postinc2,postinc1
  6366  00248E  CFDE FFE6          	movff	postinc2,postinc1
  6367  002492  CFDE FFE6          	movff	postinc2,postinc1
  6368  002496                     
  6369                           ;linked_list.c: 111:  array[index].period = temp.period;
  6370  002496  EE20  F00D         	lfsr	2,i2add@temp+6
  6371  00249A  C014  F001         	movff	i2add@index,i2___wmul@multiplier
  6372  00249E  C015  F002         	movff	i2add@index+1,i2___wmul@multiplier+1
  6373  0024A2  0E00               	movlw	0
  6374  0024A4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6375  0024A6  0E0D               	movlw	13
  6376  0024A8  6E03               	movwf	i2___wmul@multiplicand^0,c
  6377  0024AA  ECE9  F017         	call	i2___wmul	;wreg free
  6378  0024AE  0EE6               	movlw	low (_array+6)
  6379  0024B0  2401               	addwf	?i2___wmul^0,w,c
  6380  0024B2  6EE1               	movwf	fsr1l,c
  6381  0024B4  0E0C               	movlw	high (_array+6)
  6382  0024B6  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6383  0024B8  6EE2               	movwf	fsr1h,c
  6384  0024BA  CFDE FFE6          	movff	postinc2,postinc1
  6385  0024BE  CFDE FFE6          	movff	postinc2,postinc1
  6386  0024C2  CFDE FFE6          	movff	postinc2,postinc1
  6387  0024C6  CFDE FFE6          	movff	postinc2,postinc1
  6388  0024CA                     
  6389                           ;linked_list.c: 112:  array[index].function = temp.function;
  6390  0024CA  EE20  F011         	lfsr	2,i2add@temp+10
  6391  0024CE  C014  F001         	movff	i2add@index,i2___wmul@multiplier
  6392  0024D2  C015  F002         	movff	i2add@index+1,i2___wmul@multiplier+1
  6393  0024D6  0E00               	movlw	0
  6394  0024D8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6395  0024DA  0E0D               	movlw	13
  6396  0024DC  6E03               	movwf	i2___wmul@multiplicand^0,c
  6397  0024DE  ECE9  F017         	call	i2___wmul	;wreg free
  6398  0024E2  0EEA               	movlw	low (_array+10)
  6399  0024E4  2401               	addwf	?i2___wmul^0,w,c
  6400  0024E6  6EE1               	movwf	fsr1l,c
  6401  0024E8  0E0C               	movlw	high (_array+10)
  6402  0024EA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6403  0024EC  6EE2               	movwf	fsr1h,c
  6404  0024EE  CFDE FFE6          	movff	postinc2,postinc1
  6405  0024F2  CFDE FFE6          	movff	postinc2,postinc1
  6406  0024F6  CFDE FFE6          	movff	postinc2,postinc1
  6407  0024FA  0012               	return		;funcret
  6408  0024FC                     __end_ofi2_add:
  6409                           	opt callstack 0
  6410                           
  6411 ;; *************** function _enqueue *****************
  6412 ;; Defined at:
  6413 ;;		line 169 in file "linked_list.c"
  6414 ;; Parameters:    Size  Location     Type
  6415 ;;  function        3    6[COMRAM] PTR FTN()void 
  6416 ;;		 -> get_temp_humid(1), check_button(1), heater_heatpumper(1), NULL(0), 
  6417 ;; Auto vars:     Size  Location     Type
  6418 ;;		None
  6419 ;; Return value:  Size  Location     Type
  6420 ;;                  1    wreg      void 
  6421 ;; Registers used:
  6422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/0
  6425 ;;		On exit  : 0/0
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6428 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6431 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6432 ;;Total ram usage:        3 bytes
  6433 ;; Hardware stack levels used:    1
  6434 ;; Hardware stack levels required when called:    1
  6435 ;; This function calls:
  6436 ;;		i2___awmod
  6437 ;;		i2___wmul
  6438 ;; This function is called by:
  6439 ;;		_UPDATE_TIMER
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442                           
  6443                           	psect	text39
  6444  002710                     __ptext39:
  6445                           	opt callstack 0
  6446  002710                     _enqueue:
  6447                           	opt callstack 20
  6448  002710                     
  6449                           ;linked_list.c: 169: void enqueue(FUNCTION_PTR function);linked_list.c: 170: {;linked_li
      +                          st.c: 171:     if (front ==-1)
  6450  002710  0100               	movlb	0	; () banked
  6451  002712  29D2               	incf	_front& (0+255),w,b
  6452  002714  E106               	bnz	i2u136_41
  6453  002716  29D3               	incf	(_front+1)& (0+255),w,b
  6454  002718  A4D8               	btfss	status,2,c
  6455  00271A  EF91  F013         	goto	i2u136_41
  6456  00271E  EF93  F013         	goto	i2u136_40
  6457  002722                     i2u136_41:
  6458  002722  EFB5  F013         	goto	i2l2460
  6459  002726                     i2u136_40:
  6460  002726                     
  6461                           ; BSR set to: 0
  6462                           ;linked_list.c: 172:     {;linked_list.c: 173:         front =0;
  6463  002726  0E00               	movlw	0
  6464  002728  6FD3               	movwf	(_front+1)& (0+255),b
  6465  00272A  0E00               	movlw	0
  6466  00272C  6FD2               	movwf	_front& (0+255),b
  6467                           
  6468                           ;linked_list.c: 174:         rear = 0;
  6469  00272E  0E00               	movlw	0
  6470  002730  6FD1               	movwf	(_rear+1)& (0+255),b
  6471  002732  0E00               	movlw	0
  6472  002734  6FD0               	movwf	_rear& (0+255),b
  6473  002736                     
  6474                           ; BSR set to: 0
  6475                           ;linked_list.c: 175:         no_q ++;
  6476  002736  4BCE               	infsnz	_no_q& (0+255),f,b
  6477  002738  2BCF               	incf	(_no_q+1)& (0+255),f,b
  6478  00273A                     
  6479                           ; BSR set to: 0
  6480                           ;linked_list.c: 176:         queue[front] = function;
  6481  00273A  C0D2  F001         	movff	_front,i2___wmul@multiplier
  6482  00273E  C0D3  F002         	movff	_front+1,i2___wmul@multiplier+1
  6483  002742  0E00               	movlw	0
  6484  002744  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6485  002746  0E03               	movlw	3
  6486  002748  6E03               	movwf	i2___wmul@multiplicand^0,c
  6487  00274A  ECE9  F017         	call	i2___wmul	;wreg free
  6488  00274E  0E28               	movlw	low _queue
  6489  002750  2401               	addwf	?i2___wmul^0,w,c
  6490  002752  6ED9               	movwf	fsr2l,c
  6491  002754  0E01               	movlw	high _queue
  6492  002756  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6493  002758  6EDA               	movwf	fsr2h,c
  6494  00275A  C007  FFDE         	movff	enqueue@function,postinc2
  6495  00275E  C008  FFDE         	movff	enqueue@function+1,postinc2
  6496  002762  C009  FFDE         	movff	enqueue@function+2,postinc2
  6497                           
  6498                           ;linked_list.c: 177:     }
  6499  002766  EFDE  F013         	goto	i2l347
  6500  00276A                     i2l2460:
  6501                           
  6502                           ; BSR set to: 0
  6503                           ;linked_list.c: 179:     {;linked_list.c: 180:         rear = (rear +1)%1000;
  6504  00276A  0E01               	movlw	1
  6505  00276C  25D0               	addwf	_rear& (0+255),w,b
  6506  00276E  6E01               	movwf	i2___awmod@dividend^0,c
  6507  002770  0E00               	movlw	0
  6508  002772  21D1               	addwfc	(_rear+1)& (0+255),w,b
  6509  002774  6E02               	movwf	(i2___awmod@dividend+1)^0,c
  6510  002776  0E03               	movlw	3
  6511  002778  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  6512  00277A  0EE8               	movlw	232
  6513  00277C  6E03               	movwf	i2___awmod@divisor^0,c
  6514  00277E  EC30  F013         	call	i2___awmod	;wreg free
  6515  002782  C001  F0D0         	movff	?i2___awmod,_rear
  6516  002786  C002  F0D1         	movff	?i2___awmod+1,_rear+1
  6517  00278A                     
  6518                           ;linked_list.c: 181:         no_q ++;
  6519  00278A  0100               	movlb	0	; () banked
  6520  00278C  4BCE               	infsnz	_no_q& (0+255),f,b
  6521  00278E  2BCF               	incf	(_no_q+1)& (0+255),f,b
  6522  002790                     
  6523                           ; BSR set to: 0
  6524                           ;linked_list.c: 182:         queue[rear] = function;
  6525  002790  C0D0  F001         	movff	_rear,i2___wmul@multiplier
  6526  002794  C0D1  F002         	movff	_rear+1,i2___wmul@multiplier+1
  6527  002798  0E00               	movlw	0
  6528  00279A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6529  00279C  0E03               	movlw	3
  6530  00279E  6E03               	movwf	i2___wmul@multiplicand^0,c
  6531  0027A0  ECE9  F017         	call	i2___wmul	;wreg free
  6532  0027A4  0E28               	movlw	low _queue
  6533  0027A6  2401               	addwf	?i2___wmul^0,w,c
  6534  0027A8  6ED9               	movwf	fsr2l,c
  6535  0027AA  0E01               	movlw	high _queue
  6536  0027AC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6537  0027AE  6EDA               	movwf	fsr2h,c
  6538  0027B0  C007  FFDE         	movff	enqueue@function,postinc2
  6539  0027B4  C008  FFDE         	movff	enqueue@function+1,postinc2
  6540  0027B8  C009  FFDE         	movff	enqueue@function+2,postinc2
  6541  0027BC                     i2l347:
  6542  0027BC  0012               	return		;funcret
  6543  0027BE                     __end_of_enqueue:
  6544                           	opt callstack 0
  6545                           
  6546 ;; *************** function i2___awmod *****************
  6547 ;; Defined at:
  6548 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  6549 ;; Parameters:    Size  Location     Type
  6550 ;;  dividend        2    0[COMRAM] int 
  6551 ;;  divisor         2    2[COMRAM] int 
  6552 ;; Auto vars:     Size  Location     Type
  6553 ;;  __awmod         1    5[COMRAM] unsigned char 
  6554 ;;  __awmod         1    4[COMRAM] unsigned char 
  6555 ;; Return value:  Size  Location     Type
  6556 ;;                  2    0[COMRAM] int 
  6557 ;; Registers used:
  6558 ;;		wreg, status,2, status,0
  6559 ;; Tracked objects:
  6560 ;;		On entry : 0/0
  6561 ;;		On exit  : 0/0
  6562 ;;		Unchanged: 0/0
  6563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6564 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6565 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6567 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6568 ;;Total ram usage:        6 bytes
  6569 ;; Hardware stack levels used:    1
  6570 ;; This function calls:
  6571 ;;		Nothing
  6572 ;; This function is called by:
  6573 ;;		_enqueue
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           	psect	text40
  6578  002660                     __ptext40:
  6579                           	opt callstack 0
  6580  002660                     i2___awmod:
  6581                           	opt callstack 20
  6582  002660  0E00               	movlw	0
  6583  002662  6E06               	movwf	i2___awmod@sign^0,c
  6584  002664  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
  6585  002666  EF39  F013         	goto	i2u124_40
  6586  00266A  EF37  F013         	goto	i2u124_41
  6587  00266E                     i2u124_41:
  6588  00266E  EF3F  F013         	goto	i2l2364
  6589  002672                     i2u124_40:
  6590  002672  6C01               	negf	i2___awmod@dividend^0,c
  6591  002674  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  6592  002676  B0D8               	btfsc	status,0,c
  6593  002678  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  6594  00267A  0E01               	movlw	1
  6595  00267C  6E06               	movwf	i2___awmod@sign^0,c
  6596  00267E                     i2l2364:
  6597  00267E  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
  6598  002680  EF46  F013         	goto	i2u125_40
  6599  002684  EF44  F013         	goto	i2u125_41
  6600  002688                     i2u125_41:
  6601  002688  EF4A  F013         	goto	i2l2368
  6602  00268C                     i2u125_40:
  6603  00268C  6C03               	negf	i2___awmod@divisor^0,c
  6604  00268E  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  6605  002690  B0D8               	btfsc	status,0,c
  6606  002692  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  6607  002694                     i2l2368:
  6608  002694  5003               	movf	i2___awmod@divisor^0,w,c
  6609  002696  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  6610  002698  B4D8               	btfsc	status,2,c
  6611  00269A  EF51  F013         	goto	i2u126_41
  6612  00269E  EF53  F013         	goto	i2u126_40
  6613  0026A2                     i2u126_41:
  6614  0026A2  EF77  F013         	goto	i2l2384
  6615  0026A6                     i2u126_40:
  6616  0026A6  0E01               	movlw	1
  6617  0026A8  6E05               	movwf	i2___awmod@counter^0,c
  6618  0026AA  EF5B  F013         	goto	i2l2374
  6619  0026AE                     i2l2372:
  6620  0026AE  90D8               	bcf	status,0,c
  6621  0026B0  3603               	rlcf	i2___awmod@divisor^0,f,c
  6622  0026B2  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  6623  0026B4  2A05               	incf	i2___awmod@counter^0,f,c
  6624  0026B6                     i2l2374:
  6625  0026B6  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  6626  0026B8  EF60  F013         	goto	i2u127_41
  6627  0026BC  EF62  F013         	goto	i2u127_40
  6628  0026C0                     i2u127_41:
  6629  0026C0  EF57  F013         	goto	i2l2372
  6630  0026C4                     i2u127_40:
  6631  0026C4                     i2l2376:
  6632  0026C4  5003               	movf	i2___awmod@divisor^0,w,c
  6633  0026C6  5C01               	subwf	i2___awmod@dividend^0,w,c
  6634  0026C8  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  6635  0026CA  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  6636  0026CC  A0D8               	btfss	status,0,c
  6637  0026CE  EF6B  F013         	goto	i2u128_41
  6638  0026D2  EF6D  F013         	goto	i2u128_40
  6639  0026D6                     i2u128_41:
  6640  0026D6  EF71  F013         	goto	i2l2380
  6641  0026DA                     i2u128_40:
  6642  0026DA  5003               	movf	i2___awmod@divisor^0,w,c
  6643  0026DC  5E01               	subwf	i2___awmod@dividend^0,f,c
  6644  0026DE  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  6645  0026E0  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  6646  0026E2                     i2l2380:
  6647  0026E2  90D8               	bcf	status,0,c
  6648  0026E4  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  6649  0026E6  3203               	rrcf	i2___awmod@divisor^0,f,c
  6650  0026E8  2E05               	decfsz	i2___awmod@counter^0,f,c
  6651  0026EA  EF62  F013         	goto	i2l2376
  6652  0026EE                     i2l2384:
  6653  0026EE  5006               	movf	i2___awmod@sign^0,w,c
  6654  0026F0  B4D8               	btfsc	status,2,c
  6655  0026F2  EF7D  F013         	goto	i2u129_41
  6656  0026F6  EF7F  F013         	goto	i2u129_40
  6657  0026FA                     i2u129_41:
  6658  0026FA  EF83  F013         	goto	i2l2388
  6659  0026FE                     i2u129_40:
  6660  0026FE  6C01               	negf	i2___awmod@dividend^0,c
  6661  002700  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  6662  002702  B0D8               	btfsc	status,0,c
  6663  002704  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  6664  002706                     i2l2388:
  6665  002706  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  6666  00270A  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  6667  00270E  0012               	return		;funcret
  6668  002710                     __end_ofi2___awmod:
  6669                           	opt callstack 0
  6670                           
  6671 ;; *************** function _clean_node *****************
  6672 ;; Defined at:
  6673 ;;		line 127 in file "linked_list.c"
  6674 ;; Parameters:    Size  Location     Type
  6675 ;;  index           2    6[COMRAM] int 
  6676 ;; Auto vars:     Size  Location     Type
  6677 ;;		None
  6678 ;; Return value:  Size  Location     Type
  6679 ;;                  1    wreg      void 
  6680 ;; Registers used:
  6681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6682 ;; Tracked objects:
  6683 ;;		On entry : 0/0
  6684 ;;		On exit  : 0/0
  6685 ;;		Unchanged: 0/0
  6686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6690 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6691 ;;Total ram usage:        2 bytes
  6692 ;; Hardware stack levels used:    1
  6693 ;; Hardware stack levels required when called:    1
  6694 ;; This function calls:
  6695 ;;		i2___wmul
  6696 ;; This function is called by:
  6697 ;;		_UPDATE_TIMER
  6698 ;;		_REMOVE_NODE
  6699 ;; This function uses a non-reentrant model
  6700 ;;
  6701                           
  6702                           	psect	text41
  6703  0022AC                     __ptext41:
  6704                           	opt callstack 0
  6705  0022AC                     _clean_node:
  6706                           	opt callstack 20
  6707  0022AC                     
  6708                           ;linked_list.c: 127: void clean_node(int index);linked_list.c: 128: {;linked_list.c: 129
      +                          :     array[index].next=-1;
  6709  0022AC  C007  F001         	movff	clean_node@index,i2___wmul@multiplier
  6710  0022B0  C008  F002         	movff	clean_node@index+1,i2___wmul@multiplier+1
  6711  0022B4  0E00               	movlw	0
  6712  0022B6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6713  0022B8  0E0D               	movlw	13
  6714  0022BA  6E03               	movwf	i2___wmul@multiplicand^0,c
  6715  0022BC  ECE9  F017         	call	i2___wmul	;wreg free
  6716  0022C0  0EE0               	movlw	low _array
  6717  0022C2  2401               	addwf	?i2___wmul^0,w,c
  6718  0022C4  6ED9               	movwf	fsr2l,c
  6719  0022C6  0E0C               	movlw	high _array
  6720  0022C8  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6721  0022CA  6EDA               	movwf	fsr2h,c
  6722  0022CC  0EFF               	movlw	255
  6723  0022CE  6EDE               	movwf	postinc2,c
  6724  0022D0  0EFF               	movlw	255
  6725  0022D2  6EDD               	movwf	postdec2,c
  6726                           
  6727                           ;linked_list.c: 130:     array[index].delay = 0;
  6728  0022D4  C007  F001         	movff	clean_node@index,i2___wmul@multiplier
  6729  0022D8  C008  F002         	movff	clean_node@index+1,i2___wmul@multiplier+1
  6730  0022DC  0E00               	movlw	0
  6731  0022DE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6732  0022E0  0E0D               	movlw	13
  6733  0022E2  6E03               	movwf	i2___wmul@multiplicand^0,c
  6734  0022E4  ECE9  F017         	call	i2___wmul	;wreg free
  6735  0022E8  0EE2               	movlw	low (_array+2)
  6736  0022EA  2401               	addwf	?i2___wmul^0,w,c
  6737  0022EC  6ED9               	movwf	fsr2l,c
  6738  0022EE  0E0C               	movlw	high (_array+2)
  6739  0022F0  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6740  0022F2  6EDA               	movwf	fsr2h,c
  6741  0022F4  6ADE               	clrf	postinc2,c
  6742  0022F6  6ADE               	clrf	postinc2,c
  6743  0022F8  6ADE               	clrf	postinc2,c
  6744  0022FA  6ADD               	clrf	postdec2,c
  6745                           
  6746                           ;linked_list.c: 131:     array[index].period = 0;
  6747  0022FC  C007  F001         	movff	clean_node@index,i2___wmul@multiplier
  6748  002300  C008  F002         	movff	clean_node@index+1,i2___wmul@multiplier+1
  6749  002304  0E00               	movlw	0
  6750  002306  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6751  002308  0E0D               	movlw	13
  6752  00230A  6E03               	movwf	i2___wmul@multiplicand^0,c
  6753  00230C  ECE9  F017         	call	i2___wmul	;wreg free
  6754  002310  0EE6               	movlw	low (_array+6)
  6755  002312  2401               	addwf	?i2___wmul^0,w,c
  6756  002314  6ED9               	movwf	fsr2l,c
  6757  002316  0E0C               	movlw	high (_array+6)
  6758  002318  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6759  00231A  6EDA               	movwf	fsr2h,c
  6760  00231C  6ADE               	clrf	postinc2,c
  6761  00231E  6ADE               	clrf	postinc2,c
  6762  002320  6ADE               	clrf	postinc2,c
  6763  002322  6ADD               	clrf	postdec2,c
  6764                           
  6765                           ;linked_list.c: 132:     array[index].function = ((void*)0);
  6766  002324  C007  F001         	movff	clean_node@index,i2___wmul@multiplier
  6767  002328  C008  F002         	movff	clean_node@index+1,i2___wmul@multiplier+1
  6768  00232C  0E00               	movlw	0
  6769  00232E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6770  002330  0E0D               	movlw	13
  6771  002332  6E03               	movwf	i2___wmul@multiplicand^0,c
  6772  002334  ECE9  F017         	call	i2___wmul	;wreg free
  6773  002338  0EEA               	movlw	low (_array+10)
  6774  00233A  2401               	addwf	?i2___wmul^0,w,c
  6775  00233C  6ED9               	movwf	fsr2l,c
  6776  00233E  0E0C               	movlw	high (_array+10)
  6777  002340  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6778  002342  6EDA               	movwf	fsr2h,c
  6779  002344  0E00               	movlw	0
  6780  002346  6EDE               	movwf	postinc2,c
  6781  002348  0E00               	movlw	0
  6782  00234A  6EDE               	movwf	postinc2,c
  6783  00234C  0E00               	movlw	0
  6784  00234E  6EDE               	movwf	postinc2,c
  6785  002350                     
  6786                           ;linked_list.c: 133:     check_index[index] = 0;
  6787  002350  90D8               	bcf	status,0,c
  6788  002352  3407               	rlcf	clean_node@index^0,w,c
  6789  002354  6ED9               	movwf	fsr2l,c
  6790  002356  3408               	rlcf	(clean_node@index+1)^0,w,c
  6791  002358  6EDA               	movwf	fsr2h,c
  6792  00235A  0E00               	movlw	low _check_index
  6793  00235C  26D9               	addwf	fsr2l,f,c
  6794  00235E  0E01               	movlw	high _check_index
  6795  002360  22DA               	addwfc	fsr2h,f,c
  6796  002362  0E00               	movlw	0
  6797  002364  6EDE               	movwf	postinc2,c
  6798  002366  0E00               	movlw	0
  6799  002368  6EDD               	movwf	postdec2,c
  6800  00236A                     
  6801                           ;linked_list.c: 134:     no_funcs --;
  6802  00236A  0100               	movlb	0	; () banked
  6803  00236C  07E2               	decf	_no_funcs& (0+255),f,b
  6804  00236E  A0D8               	btfss	status,0,c
  6805  002370  07E3               	decf	(_no_funcs+1)& (0+255),f,b
  6806  002372                     
  6807                           ; BSR set to: 0
  6808  002372  0012               	return		;funcret
  6809  002374                     __end_of_clean_node:
  6810                           	opt callstack 0
  6811                           
  6812 ;; *************** function i2___wmul *****************
  6813 ;; Defined at:
  6814 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  6815 ;; Parameters:    Size  Location     Type
  6816 ;;  multiplier      2    0[COMRAM] unsigned int 
  6817 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6818 ;; Auto vars:     Size  Location     Type
  6819 ;;  __wmul          2    4[COMRAM] unsigned int 
  6820 ;; Return value:  Size  Location     Type
  6821 ;;                  2    0[COMRAM] unsigned int 
  6822 ;; Registers used:
  6823 ;;		wreg, status,2, status,0, prodl, prodh
  6824 ;; Tracked objects:
  6825 ;;		On entry : 0/0
  6826 ;;		On exit  : 0/0
  6827 ;;		Unchanged: 0/0
  6828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6829 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6830 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6832 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6833 ;;Total ram usage:        6 bytes
  6834 ;; Hardware stack levels used:    1
  6835 ;; This function calls:
  6836 ;;		Nothing
  6837 ;; This function is called by:
  6838 ;;		_UPDATE_TIMER
  6839 ;;		_clean_node
  6840 ;;		_enqueue
  6841 ;;		i2_ADD_NODE
  6842 ;;		i2_add
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           
  6846                           	psect	text42
  6847  002FD2                     __ptext42:
  6848                           	opt callstack 0
  6849  002FD2                     i2___wmul:
  6850                           	opt callstack 21
  6851  002FD2  5001               	movf	i2___wmul@multiplier^0,w,c
  6852  002FD4  0203               	mulwf	i2___wmul@multiplicand^0,c
  6853  002FD6  CFF3 F005          	movff	prodl,i2___wmul@product
  6854  002FDA  CFF4 F006          	movff	prodh,i2___wmul@product+1
  6855  002FDE  5001               	movf	i2___wmul@multiplier^0,w,c
  6856  002FE0  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  6857  002FE2  50F3               	movf	243,w,c
  6858  002FE4  2606               	addwf	(i2___wmul@product+1)^0,f,c
  6859  002FE6  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  6860  002FE8  0203               	mulwf	i2___wmul@multiplicand^0,c
  6861  002FEA  50F3               	movf	243,w,c
  6862  002FEC  2606               	addwf	(i2___wmul@product+1)^0,f,c
  6863  002FEE  C005  F001         	movff	i2___wmul@product,?i2___wmul
  6864  002FF2  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  6865  002FF6  0012               	return		;funcret
  6866  002FF8                     __end_ofi2___wmul:
  6867                           	opt callstack 0
  6868                           
  6869 ;; *************** function _read_button *****************
  6870 ;; Defined at:
  6871 ;;		line 19 in file "interrupt.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;		None
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;		None
  6876 ;; Return value:  Size  Location     Type
  6877 ;;                  1    wreg      void 
  6878 ;; Registers used:
  6879 ;;		wreg, status,2, status,0
  6880 ;; Tracked objects:
  6881 ;;		On entry : 0/0
  6882 ;;		On exit  : 0/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6887 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6888 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6889 ;;Total ram usage:        1 bytes
  6890 ;; Hardware stack levels used:    1
  6891 ;; This function calls:
  6892 ;;		Nothing
  6893 ;; This function is called by:
  6894 ;;		_INTERRUPT_InterruptManager
  6895 ;; This function uses a non-reentrant model
  6896 ;;
  6897                           
  6898                           	psect	text43
  6899  002CA2                     __ptext43:
  6900                           	opt callstack 0
  6901  002CA2                     _read_button:
  6902                           	opt callstack 23
  6903  002CA2                     
  6904                           ;interrupt.c: 21:     first_state = second_state;
  6905  002CA2  C0CA  F0CC         	movff	_second_state,_first_state
  6906  002CA6  C0CB  F0CD         	movff	_second_state+1,_first_state+1
  6907  002CAA                     
  6908                           ;interrupt.c: 22:     second_state = PORTAbits.RA5;
  6909  002CAA  BA80               	btfsc	128,5,c	;volatile
  6910  002CAC  EF5A  F016         	goto	i2u200_41
  6911  002CB0  EF5E  F016         	goto	i2u200_40
  6912  002CB4                     i2u200_41:
  6913  002CB4  6A01               	clrf	??_read_button^0,c
  6914  002CB6  2A01               	incf	??_read_button^0,f,c
  6915  002CB8  EF5F  F016         	goto	i2u200_48
  6916  002CBC                     i2u200_40:
  6917  002CBC  6A01               	clrf	??_read_button^0,c
  6918  002CBE                     i2u200_48:
  6919  002CBE  5001               	movf	??_read_button^0,w,c
  6920  002CC0  0100               	movlb	0	; () banked
  6921  002CC2  6FCA               	movwf	_second_state& (0+255),b
  6922  002CC4  6BCB               	clrf	(_second_state+1)& (0+255),b
  6923  002CC6                     
  6924                           ; BSR set to: 0
  6925                           ;interrupt.c: 23:     if (first_state == second_state && PORTAbits.RA5 == 0) state_pushe
      +                          d = 1;
  6926  002CC6  51CA               	movf	_second_state& (0+255),w,b
  6927  002CC8  19CC               	xorwf	_first_state& (0+255),w,b
  6928  002CCA  E107               	bnz	i2u201_41
  6929  002CCC  51CB               	movf	(_second_state+1)& (0+255),w,b
  6930  002CCE  19CD               	xorwf	(_first_state+1)& (0+255),w,b
  6931  002CD0  A4D8               	btfss	status,2,c
  6932  002CD2  EF6D  F016         	goto	i2u201_41
  6933  002CD6  EF6F  F016         	goto	i2u201_40
  6934  002CDA                     i2u201_41:
  6935  002CDA  EF7C  F016         	goto	i2l2866
  6936  002CDE                     i2u201_40:
  6937  002CDE                     
  6938                           ; BSR set to: 0
  6939  002CDE  BA80               	btfsc	128,5,c	;volatile
  6940  002CE0  EF74  F016         	goto	i2u202_41
  6941  002CE4  EF76  F016         	goto	i2u202_40
  6942  002CE8                     i2u202_41:
  6943  002CE8  EF7C  F016         	goto	i2l2866
  6944  002CEC                     i2u202_40:
  6945  002CEC                     
  6946                           ; BSR set to: 0
  6947  002CEC  0E00               	movlw	0
  6948  002CEE  6FD7               	movwf	(_state_pushed+1)& (0+255),b
  6949  002CF0  0E01               	movlw	1
  6950  002CF2  6FD6               	movwf	_state_pushed& (0+255),b
  6951  002CF4  EF80  F016         	goto	i2l221
  6952  002CF8                     i2l2866:
  6953                           
  6954                           ; BSR set to: 0
  6955  002CF8  0E00               	movlw	0
  6956  002CFA  6FD7               	movwf	(_state_pushed+1)& (0+255),b
  6957  002CFC  0E00               	movlw	0
  6958  002CFE  6FD6               	movwf	_state_pushed& (0+255),b
  6959  002D00                     i2l221:
  6960                           
  6961                           ; BSR set to: 0
  6962  002D00  0012               	return		;funcret
  6963  002D02                     __end_of_read_button:
  6964                           	opt callstack 0
  6965                           
  6966 ;; *************** function _TMR0_IRS *****************
  6967 ;; Defined at:
  6968 ;;		line 11 in file "timer0.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;		None
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;		None
  6973 ;; Return value:  Size  Location     Type
  6974 ;;                  1    wreg      void 
  6975 ;; Registers used:
  6976 ;;		wreg, status,2
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6986 ;;Total ram usage:        0 bytes
  6987 ;; Hardware stack levels used:    1
  6988 ;; This function calls:
  6989 ;;		Nothing
  6990 ;; This function is called by:
  6991 ;;		_INTERRUPT_InterruptManager
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995                           	psect	text44
  6996  003068                     __ptext44:
  6997                           	opt callstack 0
  6998  003068                     _TMR0_IRS:
  6999                           	opt callstack 23
  7000  003068                     
  7001                           ;timer0.c: 13:     INTCONbits.TMR0IF = 0;
  7002  003068  94F2               	bcf	242,2,c	;volatile
  7003  00306A                     
  7004                           ;timer0.c: 14:     TMR0 = 0xB2;
  7005  00306A  0E00               	movlw	0
  7006  00306C  6ED7               	movwf	215,c	;volatile
  7007  00306E  0EB2               	movlw	178
  7008  003070  6ED6               	movwf	214,c	;volatile
  7009  003072  0012               	return		;funcret
  7010  003074                     __end_of_TMR0_IRS:
  7011                           	opt callstack 0
  7012                           
  7013                           	psect	text45
  7014  000000                     __ptext45:
  7015                           	opt callstack 0
  7016  000000                     
  7017                           	psect	rparam
  7018  0000                     
  7019                           	psect	temp
  7020  00005F                     btemp:
  7021                           	opt callstack 0
  7022  00005F                     	ds	1
  7023  0000                     int$flags	set	btemp
  7024  0000                     wtemp8	set	btemp+1
  7025  0000                     ttemp5	set	btemp+1
  7026  0000                     ttemp6	set	btemp+4
  7027  0000                     ttemp7	set	btemp+8
  7028                           tosu	equ	0xFFF
  7029                           tosh	equ	0xFFE
  7030                           tosl	equ	0xFFD
  7031                           stkptr	equ	0xFFC
  7032                           pclatu	equ	0xFFB
  7033                           pclath	equ	0xFFA
  7034                           pcl	equ	0xFF9
  7035                           tblptru	equ	0xFF8
  7036                           tblptrh	equ	0xFF7
  7037                           tblptrl	equ	0xFF6
  7038                           tablat	equ	0xFF5
  7039                           prodh	equ	0xFF4
  7040                           prodl	equ	0xFF3
  7041                           indf0	equ	0xFEF
  7042                           postinc0	equ	0xFEE
  7043                           postdec0	equ	0xFED
  7044                           preinc0	equ	0xFEC
  7045                           plusw0	equ	0xFEB
  7046                           fsr0h	equ	0xFEA
  7047                           fsr0l	equ	0xFE9
  7048                           wreg	equ	0xFE8
  7049                           indf1	equ	0xFE7
  7050                           postinc1	equ	0xFE6
  7051                           postdec1	equ	0xFE5
  7052                           preinc1	equ	0xFE4
  7053                           plusw1	equ	0xFE3
  7054                           fsr1h	equ	0xFE2
  7055                           fsr1l	equ	0xFE1
  7056                           bsr	equ	0xFE0
  7057                           indf2	equ	0xFDF
  7058                           postinc2	equ	0xFDE
  7059                           postdec2	equ	0xFDD
  7060                           preinc2	equ	0xFDC
  7061                           plusw2	equ	0xFDB
  7062                           fsr2h	equ	0xFDA
  7063                           fsr2l	equ	0xFD9
  7064                           status	equ	0xFD8


Data Sizes:
    Strings     82
    Constant    0
    Data        8
    BSS         3341
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      94
    BANK0           160     96     143
    BANK1           256      0      40
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    UPDATE_TIMER$2244	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    ?i2_create_node.function	PTR FTN()void  size(3) Largest target is 0
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    i2create_node@temp.function	PTR FTN()void  size(3) Largest target is 0
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    i2add@temp.function	PTR FTN()void  size(3) Largest target is 0
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    i2ADD_NODE@temp.function	PTR FTN()void  size(3) Largest target is 0
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    UPDATE_TIMER$2180	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    ?_create_node.function	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    main@function	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    enqueue@function	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    sp__dequeue	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    dequeue@temp	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    queue	PTR FTN()void [1000] size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    create_node@function	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    temp.function	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    temp.function	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    UPDATE_TIMER@function	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    ADD_NODE@function	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    temp.function	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    S370Node$function	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    array.function	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    register_timer@function	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), 

    printLCD_string@array	PTR unsigned char  size(2) Largest target is 17
		 -> STR_5(CODE[15]), STR_4(CODE[16]), STR_3(CODE[17]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    LCDPutStr@ptr	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_5(CODE[15]), STR_4(CODE[16]), STR_3(CODE[17]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _timer_ISR->_UPDATE_TIMER
    _UPDATE_TIMER->i2_ADD_NODE
    i2_ADD_NODE->i2_create_node
    i2_add->i2___wmul
    _enqueue->i2___awmod
    _enqueue->i2___wmul
    _clean_node->i2___wmul

Critical Paths under _main in BANK0

    _main->_register_timer
    _register_timer->_ADD_NODE
    _ADD_NODE->_create_node
    _add->___wmul
    _heater_heatpumper->_printLCD_string
    _readDHT->_getByte
    _print_temp_humid->_printLCD_char
    _printLCD_char->___awdiv
    _dequeue->_init_queue
    _SYSTEM_INITIALIZATION->_printLCD_string
    _printLCD_string->_LCDPutStr
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_WritePort_BBSPI
    _init_queue->___wmul
    _LCDInit->_LCDPutInst
    _Port_BBSPIInit->_SendByteBBSPI
    _LCDPutInst->_WritePort_BBSPI
    _WritePort_BBSPI->_SendByteBBSPI
    _LINKED_LIST_INITIALIZATION->___wmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   67034
                                             93 BANK0      3     3      0
         _LINKED_LIST_INITIALIZATION
              _SYSTEM_INITIALIZATION
                       _check_button *
                            _dequeue
                     _get_temp_humid *
                  _heater_heatpumper *
                     _register_timer
                       _start_timers
 ---------------------------------------------------------------------------------
 (1) _start_timers                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _register_timer                                      13     2     11   16080
                                             80 BANK0     13     2     11
                           _ADD_NODE
 ---------------------------------------------------------------------------------
 (2) _ADD_NODE                                            46    35     11   15301
                                             34 BANK0     46    35     11
                             ___wmul
                                _add
                        _create_node
                       _return_index
 ---------------------------------------------------------------------------------
 (3) _return_index                                         6     4      2     112
                                              8 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _create_node                                         26    13     13     389
                                              8 BANK0     26    13     13
 ---------------------------------------------------------------------------------
 (3) _add                                                 15     0     15    7158
                                             14 BANK0     15     0     15
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _heater_heatpumper                                    0     0      0   11027
                            ___awdiv
                            ___awmod
                      _printLCD_char
                    _printLCD_string
 ---------------------------------------------------------------------------------
 (1) _get_temp_humid                                       0     0      0    8388
                   _print_temp_humid
                            _readDHT
 ---------------------------------------------------------------------------------
 (2) _readDHT                                              4     4      0     160
                                             12 BANK0      4     4      0
                            _getByte
 ---------------------------------------------------------------------------------
 (3) _getByte                                              4     4      0     114
                                              8 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _print_temp_humid                                     0     0      0    8228
                            ___awdiv
                            ___awmod
                      _printLCD_char
 ---------------------------------------------------------------------------------
 (2) _printLCD_char                                        4     0      4    6468
                                             16 BANK0      4     0      4
                         _LCDPutChar
                         _LCDPutInst
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              8 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _dequeue                                              6     3      3   13859
                                             16 BANK0      6     3      3
                            ___awmod
                             ___wmul
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1004
                                              8 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _check_button                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_INITIALIZATION                                0     0      0   11152
                            _LCDInit
                _TMR0_INITIALIZATION
                _TMR1_INITIALIZATION
                         _init_queue
                    _printLCD_string
 ---------------------------------------------------------------------------------
 (2) _printLCD_string                                      4     0      4    2799
                                             17 BANK0      4     0      4
                         _LCDPutInst
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (3) _LCDPutStr                                            2     0      2    1085
                                             15 BANK0      2     0      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (4) _LCDPutChar                                           2     2      0     888
                                             13 BANK0      2     2      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           2     2      0    6439
                                             14 BANK0      2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _TMR1_INITIALIZATION                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_INITIALIZATION                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0    1914
                                             15 BANK0      1     1      0
                          _InitBBSPI
                         _LCDPutInst
                     _Port_BBSPIInit
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _Port_BBSPIInit                                       1     1      0     160
                                             11 BANK0      1     1      0
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (3) _LCDPutInst                                           2     2      0     888
                                             13 BANK0      2     2      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (5) _WritePort_BBSPI                                      2     1      1     866
                                             11 BANK0      2     1      1
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (6) _SendByteBBSPI                                        3     3      0     138
                                              8 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _InitBBSPI                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LINKED_LIST_INITIALIZATION                           2     2      0    6505
                                             14 BANK0      2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    6371
                                              8 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           8     8      0   11897
                                              0 BANK0      8     8      0
                           _TMR0_IRS
                        _read_button
                          _timer_ISR
 ---------------------------------------------------------------------------------
 (8) _timer_ISR                                            0     0      0   11897
                       _UPDATE_TIMER
 ---------------------------------------------------------------------------------
 (9) _UPDATE_TIMER                                        20    20      0   11897
                                             72 COMRAM    20    20      0
                         _clean_node
                            _enqueue
                         i2_ADD_NODE
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) i2_ADD_NODE                                         46    35     11    5427
                                             26 COMRAM    46    35     11
                           i2___wmul
                              i2_add
                      i2_create_node
                     i2_return_index
 ---------------------------------------------------------------------------------
 (11) i2_return_index                                      6     4      2     112
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (11) i2_create_node                                      26    13     13     239
                                              0 COMRAM    26    13     13
 ---------------------------------------------------------------------------------
 (11) i2_add                                              15     0     15    2262
                                              6 COMRAM    15     0     15
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) _enqueue                                             3     0      3    2343
                                              6 COMRAM     3     0      3
                          i2___awmod
                           i2___wmul
 ---------------------------------------------------------------------------------
 (11) i2___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) _clean_node                                          2     0      2    2137
                                              6 COMRAM     2     0      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) i2___wmul                                            6     2      4    1875
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _read_button                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR0_IRS                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LINKED_LIST_INITIALIZATION
     ___wmul
   _SYSTEM_INITIALIZATION
     _LCDInit
       _InitBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _Port_BBSPIInit
         _SendByteBBSPI
       _WritePort_BBSPI
         _SendByteBBSPI
     _TMR0_INITIALIZATION
     _TMR1_INITIALIZATION
     _init_queue
       ___wmul
     _printLCD_string
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutStr
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
   _check_button *
   _dequeue *
     ___awmod
     ___wmul
     _init_queue
       ___wmul
   _get_temp_humid *
     _print_temp_humid
       ___awdiv
       ___awmod
       _printLCD_char
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
         _LCDPutInst
           _WritePort_BBSPI
             _SendByteBBSPI
         ___awdiv (ARG)
         ___awmod (ARG)
     _readDHT
       _getByte
   _heater_heatpumper *
     ___awdiv
     ___awmod
     _printLCD_char
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       ___awdiv (ARG)
       ___awmod (ARG)
     _printLCD_string
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutStr
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
   _register_timer *
     _ADD_NODE
       ___wmul
       _add
         ___wmul
       _create_node
       _return_index
   _start_timers *

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_IRS
   _read_button
   _timer_ISR
     _UPDATE_TIMER
       _clean_node
         i2___wmul
       _enqueue
         i2___awmod
         i2___wmul
       i2_ADD_NODE
         i2___wmul
         i2_add
           i2___wmul
         i2_create_node
         i2_return_index
       i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0     CBC      37       82.8%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      28       7       15.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     60      8F       5       89.4%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     115      32        0.0%
DATA                 0      0     DD1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Nov 23 21:30:03 2019

        __end_of_TMR1_INITIALIZATION 3058                __size_of_start_timers 0004  
                                 l30 3046                                   l33 2AFC  
                                 l42 3034                                   l35 2B10  
                                 l51 2CA0                                   l27 2DAE  
                        ?_LCDPutChar 0001                                   l36 2B12  
                                 l45 3016                                   l62 2F40  
                                 l39 2B62                                   l48 2BCC  
                                 l57 2EC4                                   l68 2DFA  
                       ___awdiv@sign 006D                          ?_LCDPutInst 0001  
                ___wmul@multiplicand 006A                      ??_printLCD_char 0074  
                         i2add@index 0014                SendByteBBSPI@bitcount 0069  
                                l125 307E                                  l135 2FA8  
                                l320 22AA                                  l332 2E40  
                                l324 2A6A                                  l341 29F0  
                                l326 2A6E                                  l337 2C36  
                                l290 14E6                                  l460 1BDE  
                                l285 21DE                                  l293 1116  
                                l614 2008                                  l471 28E8  
                                l624 1E34                                  l288 14E2  
                                l633 1EAC                                  l289 10FA  
                                l474 2F02                                  l650 25AC  
                                l618 1FE4                                  l298 14DE  
                                l547 3066                                  l627 1F00  
                                l643 2858                                  l467 28B0  
                                l661 3056                                  l646 2854  
                                l911 265E                                  l667 2FD0  
                                l898 2438                 __end_of_check_button 28EA  
                                _add 21E0                          ?i2_ADD_NODE 001B  
                       ___awmod@sign 006D              ??_SYSTEM_INITIALIZATION 0075  
                                tosl 000FFD                                  wreg 000FE8  
                       _state_pushed 00D6                      i2ADD_NODE@delay 001B  
                  ?_print_temp_humid 0001                      i2ADD_NODE@index 0047  
                      return_index@i 006C                      __end_of_LCDInit 2DB0  
                       __CFG_LVP$OFF 000000                         __CFG_WDT$OFF 000000  
                               ?_add 006E                                 l3000 2EEE  
                               l3010 2EFE                                 l3002 2EF0  
                               l2300 2C82                                 l3004 2EF4  
                               l3020 27FA                                 l3012 27BE  
                               l3100 2044                                 l2310 2BA2  
                               l2302 2B68                                 l3006 2EF6  
                               l3030 282E                                 l3022 27FE  
                               l3014 27D0                                 l3110 20D8  
                               l3102 2076                                 l2240 2B0A  
                               l2232 2AF2                                 l2312 2BAE  
                               l2304 2B68                                 l2400 2E86  
                               l3008 2EFA                                 l3032 2836  
                               l3024 2806                                 l3016 27E4  
                               l3104 20A8                                 l2314 2FAA  
                               l2250 2B32                                 l2242 2B20  
                               l2234 2AF6                                 l2306 2B74  
                               l2402 2E8A                                 l2410 2DC4  
                               l3034 284C                                 l3026 280C  
                               l3106 20AC                                 l2316 2FC8  
                               l2260 2B3C                                 l2252 2B34  
                               l2244 2B28                                 l2308 2B86  
                               l2404 2E9E                                 l2412 2DD8  
                               l3028 2822                                 l2420 2E2E  
                               l3108 20C8                                 l2270 2B46  
                               l2262 2B3E                                 l2254 2B36  
                               l2246 2B2E                                 l2406 2EA4  
                               l2414 2DEA                                 l2430 29FC  
                               l2272 2B48                                 l2264 2B40  
                               l2256 2B38                                 l2248 2B30  
                               l2280 2FFE                                 l2520 2394  
                               l2512 2374                                 l2408 2DB0  
                               l2504 1FF2                                 l2416 2DFC  
                               l2432 2A20                                 l2440 2A4A  
                               l2424 29F2                                 l2274 2B50  
                               l2266 2B42                                 l2258 2B3A  
                               l2282 3014                                 l2290 2C3C  
                               l2530 23C8                                 l2522 23A2  
                               l2514 237A                                 l2506 1FF6  
                               l2450 2278                                 l2418 2E22  
                               l2442 2A4E                                 l2434 2A3A  
                               l2276 2B52                                 l2268 2B44  
                               l2292 2C3C                                 l2540 2402  
                               l2532 23D0                                 l2524 23AA  
                               l2516 2388                                 l2508 2006  
                               l2444 21E0                                 l2436 2A3E  
                               l2700 10D0                                 l2278 2FFC  
                               l2294 2C48                                 l2550 2428  
                               l2542 240A                                 l2534 23D8  
                               l2526 23AE                                 l2518 2390  
                               l2446 220C                                 l2710 111E  
                               l2702 10EE                                 l3094 200A  
                               l2392 3036                                 l2296 2C5A  
                               l2560 25C2                                 l2552 2430  
                               l2544 240C                                 l2536 23E6  
                               l2528 23B6                                 l2480 1F14  
                               l2472 1F02                                 l2800 1E2E  
                               l2448 2242                                 l2720 11FC  
                               l2712 1148                                 l3096 200E  
                               l2298 2C76                                 l2394 301C  
                               l2570 25F6                                 l2562 25CA  
                               l2546 2412                                 l2538 23EC  
                               l2490 1F56                                 l2482 1F26  
                               l2730 1290                                 l2722 1214  
                               l2714 114C                                 l3098 2012  
                               l2396 301E                                 l2660 2D64  
                               l2652 2D5C                                 l2580 2632  
                               l2572 25FE                                 l2564 25CE  
                               l2556 25AE                                 l2548 2418  
                               l2492 1F7C                                 l2812 1E64  
                               l2804 1E42                                 l2740 13CA  
                               l2724 1232                                 l2732 1342  
                               l2716 1196                                 l2708 110A  
                               l2398 3032                                 l2670 2D90  
                               l2662 2D66                                 l2654 2D60  
                               l2582 2638                                 l2574 2606  
                               l2566 25DC                                 l2558 25B4  
                               l2494 1FA2                                 l2486 1F2C  
                               l2478 1F08                                 l2822 1EBA  
                               l2814 1E8A                                 l2806 1E4E  
                               l2910 19A0                                 l2902 194E  
                               l2734 1356                                 l2742 147C  
                               l2726 125E                                 l2718 11B4  
                               l2672 2D96                                 l2664 2D6C  
                               l2656 2D62                                 l2680 2F04  
                               l2576 2614                                 l2584 263E  
                               l2568 25E4                                 l2496 1FC2  
                               l2488 1F50                                 l2824 1EE2  
                               l2816 1E96                                 l2912 19B8  
                               l2904 1960                                 l2744 1490  
                               l2736 1374                                 l2728 1266  
                               l2840 307C                                 l2674 2D9C  
                               l2666 2D72                                 l2658 2D64  
                               l2682 2F18                                 l2586 264E  
                               l2578 262A                                 l2498 1FCE  
                               l2826 1EEC                                 l2930 1A34  
                               l2914 19CC                                 l2906 197A  
                               l2922 1A00                                 l2746 14AE  
                               l2738 13A0                                 l2690 1054  
                               l2842 2F78                                 l2676 2DA2  
                               l2668 2D7E                                 l2780 3058  
                               l2684 2F1E                                 l2588 2656  
                               l2828 1EFE                                 l2940 1AF6  
                               l2924 1A18                                 l2908 198A  
                               l2916 19D8                                 l2692 1092  
                               l2870 2102                                 l2678 2DA8  
                               l2782 3064                                 l2774 2BE8  
                               l2766 2BCE                                 l2686 2F2E  
                               l2838 24FC                                 l2790 1DF2  
                               l2950 1B50                                 l2926 1A20  
                               l2918 19E8                                 l2942 1B04  
                               l2694 109E                                 l2880 21C2  
                               l2784 3048                                 l2776 2C16  
                               l2768 2BD8                                 l2688 2F34  
                               l2792 1E04                                 l2960 1BBE  
                               l2952 1B66                                 l2944 1B14  
                               l2936 1A46                                 l2928 1A30  
                               l2696 10B4                                 l2786 304C  
                               l2778 2C1A                                 l2890 29BC  
                               l2882 2970                                 l2794 1E0E  
                               l2962 1BD4                                 l2954 1B7C  
                               l2946 1B26                                 l2938 1AB6  
                               l2970 2890                                 l2698 10C8  
                               l2876 2112                                 l2868 20FC  
                               l2884 29A0                                 l2796 1E10  
                               l2788 1DEE                                 l2956 1B92  
                               l2948 1B3A                                 l2972 2894  
                               l2980 28BC                                 l2964 285A  
                               l2878 21BE                                 l2990 2EE0  
                               l2886 29A6                                 l2798 1E1C  
                               l2958 1BA8                                 l2982 28CE  
                               l2974 289A                                 l2966 286E  
                               l2992 2EE2                                 l2888 29B8  
                               l2896 29CC                                 l2984 28E0  
                               l2976 28AA                                 l2968 2880  
                               l2994 2EE6                                 l2986 2EC6  
                               l2978 28AE                                 l2996 2EEA  
                               l2988 2ECA                                 l2998 2EEC  
                    ?_get_temp_humid 0001                                 STR_1 1012  
                               STR_2 1001                                 STR_3 1023  
                               STR_4 1034                                 STR_5 1044  
                 ??_print_temp_humid 0074                                 u1200 2B62  
                               u1201 2B5E                                 u1300 2EC4  
                               u2100 1A18                                 u1301 2EC0  
                               u2101 1A14                                 u2030 21DE  
                               u1310 2DC4                                 u2110 1A30  
                               u2031 21DA                                 u1311 2DC0  
                               u2111 1A2C                                 u2040 29B8  
                               u1320 2DEA                                 u1400 1F50  
                               u2120 1A46                                 u2200 28E0  
                               u2041 29B4                                 u1321 2DE6  
                               u1401 1F4C                                 u2121 1A42  
                               u2201 28DC                                 u1410 1F66  
                               u2130 1B14                                 u2050 1960  
                               u2210 27D0                                 u1411 1F60  
                               u2131 1B10                                 u2051 195C  
                               u2211 27CC                                 u1331 2E38  
                               u1180 2B0A                                 u1500 23A2  
                               u1420 1F68                                 u2140 1B26  
                               u2060 197A                                 u2220 27E4  
                               u1340 2A20                                 u1181 2B06  
                               u1501 239E                                 u2141 1B22  
                               u2061 1976                                 u2221 27E0  
                               u1341 2A1C                                 u1190 2B20  
                               u1510 23C8                                 u1430 1F7C  
                               u2070 198A                                 u2230 2822  
                               u2150 286E                                 u1350 2A6A  
                               u1191 2B1C                                 u1511 23C4  
                               u1431 1F78                                 u2071 1986  
                               u2231 281E                                 u2151 286A  
                               u1351 2A66                                 u1600 264E  
                               u1520 23E6                                 u2080 19A0  
                               u2240 284C                                 u2160 2880  
                               u1601 264A                                 u1521 23E2  
                               u2081 199C                                 u2241 2848  
                               u2161 287C                                 u1530 2402  
                               u1370 1F26                                 u2090 19E8  
                               u2170 2890                                 u2330 20C8  
                               u1531 23FE                                 u1371 1F22  
                               u2091 19E4                                 u2171 288C  
                               u2331 20C4                                 u1540 2428  
                               u1460 1FE0                                 u1444 1F90  
                               u1380 1F3C                                 u2180 28AA  
                               u1541 2424                                 u1461 1FDC  
                               u1445 1F8C                                 u1381 1F36  
                               u2181 28A6                                 u1550 25C2  
                               u1470 1FF2                                 u1454 1FB6  
                               u1390 1F3E                                 u2190 28CE  
                               u2407 2BB6                                 u1551 25BE  
                               u1471 1FEE                                 u1455 1FB2  
                               u2191 28CA                                 u1560 25DC  
                               u1480 2006                                 u1800 1214  
                               u2417 2D86                                 u1561 25D8  
                               u1481 2002                                 u1801 1210  
                               u1730 2F18                                 u1570 25F6  
                               u1490 2388                                 u2427 2C50  
                               u1731 2F14                                 u1571 25F2  
                               u1491 2384                                 u1811 121E  
                               u1580 2614                                 u1900 1E42  
                               u1820 1356                                 u2348 20DE  
                               u2437 2C6C                                 u1581 2610  
                               u1901 1E3E                                 u2357 1DFA  
                               u1821 1352                                 u1741 108A  
                               u2349 20F4                                 u1590 262A  
                               u1910 1E60                                 u1750 10B4  
                               u2447 2C8A                                 u1591 2626  
                               u1911 1E5C                                 u2367 1E08  
                               u1831 1360                                 u1751 10B0  
                               u1920 1E74                                 u1840 1490  
                               u1760 10C8                                 u2377 1F52  
                               u1921 1E6E                                 u1841 148C  
                               u1761 10C4                                 u1930 1E76  
                               u2387 2B7C                                 u1851 149A  
                               u1771 10DA                                 u1940 1E8A  
                               u1780 11B4                                 u2397 2B98  
                               u1941 1E86                                 u1781 11B0  
                               u1950 1EA8                                 u1790 11FC  
                               u1951 1EA4                                 u1791 11F8  
                               u1880 2C36                                 u1960 1EBA  
                               u1881 2C32                                 u1961 1EB6  
                               u1970 1EFE                                 u1890 1E2E  
                               u1971 1EFA                                 u1891 1E2A  
                               _TMR0 000FD6                  _TMR0_INITIALIZATION 3058  
                               _fan3 00E6                                 _head 00EB  
                               _main 200A                     __end_of_ADD_NODE 14E8  
                               _rear 00D0                                 _no_q 00CE  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr2h 000FDA                                 fsr0l 000FE9  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               btemp 005F                         _start_timers 307C  
                   ?_WritePort_BBSPI 006B                                 prodh 000FF4  
                               prodl 000FF3                                 start 000E  
                 __size_of_LCDPutStr 0040                        __CFG_IESO$OFF 000000  
                      __CFG_MCLRE$ON 000000                         ___param_bank 000000  
                              ??_add 007D                  i2create_node@period 0005  
                   i2ADD_NODE@period 001F                    ??_printLCD_string 0075  
               ?_TMR0_INITIALIZATION 0001                                ?_main 0001  
                    __end_of___awdiv 243A                      __end_of___awmod 2660  
                              _T0CON 000FD5                      ___awdiv@divisor 006A  
                              _T1CON 000FCD                                i2l221 2D00  
                              i2l310 1DEC                                i2l320 24FA  
                              i2l216 294C                                i2l145 2F76  
                              i2l332 2E84                                i2l324 2AE8  
                              i2l326 2AEC                                i2l329 2372  
                              i2l290 194C                                i2l347 27BC  
                              i2l293 15A6                                i2l550 3072  
                              i2l289 158A                                i2l911 270E  
                              i2l667 2FF6                      ___awdiv@counter 006C  
                              _TMR1H 000FCF                                _TMR1L 000FCE  
                              i2_add 243A                      create_node@temp 0075  
               printLCD_string@array 0073                        __CFG_PWRT$OFF 000000  
                       main@function 00BD                      __end_of_getByte 200A  
                     __CFG_FCMEN$OFF 000000         ??_LINKED_LIST_INITIALIZATION 006E  
                    __end_of_dequeue 29F2                     __end_of_TMR0_IRS 3074  
            __size_of_Port_BBSPIInit 001E                         ?_read_button 0001  
                    __end_of_readDHT 1F02                                _array 0CE0  
                    __end_of_enqueue 27BE                                _count 00ED  
                              _front 00D2                                _humid 00E0  
                              _queue 0128                                _state 00E4  
                     __CFG_BOREN$OFF 000000                                pclath 000FFA  
                              tablat 000FF5                  __size_of_LCDPutChar 006A  
                   __end_ofi2___wmul 2FF8                                plusw0 000FEB  
                              plusw2 000FDB                  __size_of_LCDPutInst 006A  
                              ttemp5 0060                                ttemp6 0063  
                              ttemp7 0067                                status 000FD8  
                              wtemp8 0060                          readDHT@temp 006F  
                 __size_ofi2___awmod 00B0                  __size_ofi2_ADD_NODE 0466  
                    __initialization 2D02                         __end_of_main 20FC  
__size_of_LINKED_LIST_INITIALIZATION 00E4                ??_TMR0_INITIALIZATION 0068  
        ?_INTERRUPT_InterruptManager 0001                       i2_return_index 2A70  
                             ??_main 00BD                        __activetblptr 000003  
                          ??_LCDInit 006F                         LCDPutChar@ch 006E  
                             ?i2_add 0007                    __end_of_LCDPutStr 2EC6  
                             _ADCON1 000FC1                   __size_of_InitBBSPI 0012  
                   ___awdiv@dividend 0068                         LCDPutInst@ch 006E  
                     _register_timer 2F78                               i2l2320 243A  
                             i2l2322 2462                               i2l2324 2496  
                             i2l2340 2ABC                               i2l2326 24CA  
                             i2l2350 2E66                               i2l2334 2A78  
                             i2l3070 291A                               i2l2360 2672  
                             i2l2352 2E72                               i2l2336 2A9C  
                             i2l2344 2AC8                               i2l2328 2A70  
                             i2l2600 155C                               i2l3080 2948  
                             i2l3072 2928                               i2l2370 26A6  
                             i2l2362 267A                               i2l2346 2ACC  
                             i2l2338 2AB6                               i2l2610 15AE  
                             i2l2602 1564                               i2l3074 292C  
                             i2l2284 2FD2                               i2l2380 26E2  
                             i2l2372 26AE                               i2l2364 267E  
                             i2l2356 2660                               i2l2460 276A  
                             i2l2452 2710                               i2l2348 2E42  
                             i2l2620 1688                               i2l2612 15D6  
                             i2l2604 1586                               i2l3076 293E  
                             i2l3068 290C                               i2l2286 2FEE  
                             i2l2470 236A                               i2l2382 26E8  
                             i2l2374 26B6                               i2l2366 268C  
                             i2l2358 2664                               i2l2462 278A  
                             i2l2454 2726                               i2l2630 1718  
                             i2l2622 16A2                               i2l2614 15DA  
                             i2l3078 2944                               i2l2376 26C4  
                             i2l2384 26EE                               i2l2368 2694  
                             i2l2464 2790                               i2l2456 2736  
                             i2l2640 1846                               i2l2624 16C0  
                             i2l2632 17C4                               i2l2616 1622  
                             i2l2608 159A                               i2l2466 22AC  
                             i2l2386 26FE                               i2l2378 26DA  
                             i2l2458 273A                               i2l2634 17D8  
                             i2l2642 18F2                               i2l2626 16E8  
                             i2l2618 1642                               i2l2468 2350  
                             i2l2388 2706                               i2l2644 1906  
                             i2l2636 17F6                               i2l2628 16F0  
                             i2l2646 1924                               i2l2638 181E  
                             i2l2592 14E8                               i2l2760 1D4A  
                             i2l2594 1526                               i2l2762 1D86  
                             i2l2754 1BE0                               i2l2850 2F42  
                             i2l2860 2CC6                               i2l2596 1532  
                             i2l2756 1C16                               i2l2764 1DB6  
                             i2l2852 2F60                               i2l2862 2CDE  
                             i2l2598 1546                               i2l2758 1C82  
                             i2l2854 2F72                               i2l1976 3068  
                             i2l2864 2CEC                               i2l2856 2CA2  
                             i2l1978 306A                               i2l2866 2CF8  
                             i2l2858 2CAA                    _temperature_value 00DC  
                             _OSCCON 000FD3                     create_node@delay 0068  
                       LCDPutStr@ptr 006F                 __size_of_create_node 0046  
                     __CFG_XINST$OFF 000000                      _time_each_state 00E9  
                             ___wmul 2FAA                            ??___awdiv 006C  
                          ??___awmod 006C                __size_of_check_button 0090  
             __end_ofi2_return_index 2AEE                               clear_0 2D2A  
                             clear_1 2D3C                               clear_2 2D48  
                   ___awdiv@quotient 006E                      ___awmod@divisor 006A  
                             _temper 00DE                            ??_getByte 0068  
                    ___awmod@counter 006C                            ??_dequeue 0073  
                          ??_readDHT 006C                            ??_enqueue 000A  
             __size_ofi2_create_node 0044                            ?_ADD_NODE 0082  
             Port_BBSPIInit@port_dir 006B                    __end_ofi2___awmod 2710  
                  UPDATE_TIMER@delay 004D                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                          init_queue@i 006E  
             __end_of_register_timer 2FAA                       i2___awmod@sign 0006  
                     ADD_NODE@period 0086                           __accesstop 0060  
            __end_of__initialization 2D52                        ___rparam_used 000001  
                       _check_button 285A                        i2ADD_NODE@loc 0045  
                      i2ADD_NODE@pre 0036                    _heater_heatpumper 194E  
             __size_of_SendByteBBSPI 0076                      clean_node@index 0007  
                      __end_ofi2_add 24FC                   ?_heater_heatpumper 0001  
                     __pcstackCOMRAM 0001                         __pidataBANK0 3074  
                          ?_TMR0_IRS 0001                    __end_of_InitBBSPI 3048  
                       ??_LCDPutChar 006D                      ?i2_return_index 0001  
                       ??_LCDPutInst 006D                  ??_heater_heatpumper 0075  
                          ?i2___wmul 0001                         ??i2_ADD_NODE 0026  
                         ??_ADD_NODE 008D   __end_of_LINKED_LIST_INITIALIZATION 21E0  
         _LINKED_LIST_INITIALIZATION 20FC                              ??i2_add 0016  
                    __CFG_OSC$INTIO7 000000                       _first_function 00C8  
                   ??_get_temp_humid 0074                i2create_node@function 0009  
                     _Port_BBSPIInit 3018                   i2ADD_NODE@function 0023  
     __size_of_SYSTEM_INITIALIZATION 003E        __end_of_SYSTEM_INITIALIZATION 2F04  
                    ?_register_timer 00B0                      _second_function 00C6  
                       ADD_NODE@next 009B                         ADD_NODE@loop 0099  
                       ADD_NODE@temp 009F                 __size_of_read_button 0060  
                         __pbssBANK0 00C0                           __pbssBANK1 0100  
          __end_of_heater_heatpumper 1BE0                   __end_of_LCDPutChar 2BCE  
                    _printLCD_string 2F04                   __end_of_LCDPutInst 2CA2  
                      i2_create_node 2E42                           _clean_node 22AC  
          __size_of_print_temp_humid 00B2                   __end_ofi2_ADD_NODE 194E  
                            ?___wmul 0068                           ??_TMR0_IRS 0001  
                         ??i2___wmul 0005                __end_of_printLCD_char 2DFC  
             __end_of_Port_BBSPIInit 3036                   __size_of_timer_ISR 0036  
       __size_of_TMR1_INITIALIZATION 0010                              _LCDInit 2D5C  
                      _SendByteBBSPI 2AEE                              _OSCTUNE 000F9B  
              printLCD_char@position 0072                    create_node@period 006C  
                   WritePort_BBSPI@a 006B                       ?i2_create_node 0001  
                      ?_UPDATE_TIMER 0001                 register_timer@period 00B4  
                            __Hparam 0000                              __Lparam 0000  
                            ___awdiv 2374                              ___awmod 25AE  
                    __size_of___wmul 0028                              add@temp 006E  
           __size_of_WritePort_BBSPI 0020                         __psmallconst 1000  
                            __pcinit 2D02                           _init_queue 2BCE  
                            __ramtop 1000                              _getByte 1F02  
                            __ptext0 200A                              __ptext1 307C  
                            __ptext2 2F78                              __ptext3 1054  
                            __ptext4 29F2                              __ptext5 2DFC  
                            __ptext6 21E0                              __ptext7 285A  
                            __ptext8 27BE                              __ptext9 194E  
                            _dequeue 2970                              _readDHT 1DEE  
                     ?_SendByteBBSPI 0001                      ?_Port_BBSPIInit 0001  
                            _enqueue 2710                         __size_of_add 00CC  
                   ___awmod@dividend 0068                    _UPDATE_TIMER$2244 0058  
            __end_of_printLCD_string 2F42                            _LCDPutStr 2E86  
                     __pintcode_body 28EA                 end_of_initialization 2D52  
         __size_of_heater_heatpumper 0292                       ??_UPDATE_TIMER 0049  
                            int_func 28EA                  i2___wmul@multiplier 0001  
                    i2return_index@i 0005                    __end_of_timer_ISR 2F78  
                        ?_clean_node 0007          __end_of_TMR0_INITIALIZATION 3068  
                 UPDATE_TIMER@period 0051                              postdec1 000FE5  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc1 000FE6                              postinc2 000FDE  
                      ?_return_index 0068                            _PORTAbits 000F80  
                          _PORTBbits 000F81                            _PORTDbits 000F83  
                          _TRISAbits 000F92                  create_node@function 0070  
                          _TRISBbits 000F93                            _TRISCbits 000F94  
                          _TRISDbits 000F95                            _TRISFbits 000F97  
                  __size_of_ADD_NODE 0494                      _function_pushed 00D4  
                         ?_LCDPutStr 006F                            i2___awmod 2660  
                          i2add@temp 0007                      ??i2_create_node 000E  
                SendByteBBSPI@output 0068                        ??_create_node 0075  
                     i2ADD_NODE@next 0034                       i2ADD_NODE@loop 0032  
                     i2ADD_NODE@temp 0038                     ??i2_return_index 0003  
                   _print_temp_humid 24FC                   i2create_node@delay 0001  
                     ??_return_index 006A                       __end_of___wmul 2FD2  
                printLCD_string@line 0071                          ?_init_queue 0001  
                  __size_of_TMR0_IRS 000C                      ??_SendByteBBSPI 0068  
                          _InitBBSPI 3036                     ??_register_timer 00BB  
                   i2___wmul@product 0005                    ??_WritePort_BBSPI 006C  
        ?_LINKED_LIST_INITIALIZATION 0001                  start_initialization 2D02  
                  __size_ofi2___wmul 0026                          __end_of_add 22AC  
                __size_of_clean_node 00C8                     ?_printLCD_string 0071  
                         ?i2___awmod 0001               register_timer@function 00B8  
                      ?_start_timers 0001                  _TMR1_INITIALIZATION 3048  
                __end_of_create_node 2E42                             ??___wmul 006C  
                        __pdataBANK0 00E7                        ADD_NODE@delay 0082  
                      ADD_NODE@index 00AE                           ?_InitBBSPI 0001  
               __end_of_UPDATE_TIMER 1DEE                 ?_TMR1_INITIALIZATION 0001  
                           ?_LCDInit 0001                          __pbssBIGRAM 0128  
                        _check_index 0100                          __pbssCOMRAM 005D  
                      __pcstackBANK0 0060                        ??_read_button 0001  
                        ??_LCDPutStr 0071                _SYSTEM_INITIALIZATION 2EC6  
                     ??_start_timers 0068                  __size_of_init_queue 006A  
                        ADD_NODE@loc 00AC                          ADD_NODE@pre 009D  
                          __pintcode 0008                             ?___awdiv 0068  
                           ?___awmod 0068                     ??_Port_BBSPIInit 006B  
       ??_INTERRUPT_InterruptManager 0060                             ?_getByte 0001  
               fp__heater_heatpumper 0000                             ?_dequeue 0070  
              ??_TMR1_INITIALIZATION 0068                             ?_readDHT 0001  
                        __smallconst 1000                             ?_enqueue 0007  
                           _ADD_NODE 1054                  register_timer@delay 00B0  
                     __size_ofi2_add 00C2                      enqueue@function 0007  
                        ??i2___awmod 0005                 __end_of_return_index 2A70  
                    fp__check_button 0000                  __end_of_read_button 2D02  
                        _create_node 2DFC                       ___wmul@product 006C  
            __size_of_get_temp_humid 009C                             _LATAbits 000F89  
                           _FUNCTION 00E5                    fp__get_temp_humid 0000  
                           _LATCbits 000F8B                             _LATDbits 000F8C  
                           _LATFbits 000F8E                             _PIE1bits 000F9D  
             __size_of_printLCD_char 004C                             i2u200_40 2CBC  
                       ??_clean_node 0009                             i2u200_41 2CB4  
                           i2u201_40 2CDE                             i2u200_48 2CBE  
                           i2u121_40 2A9C                             i2u201_41 2CDA  
                           i2u121_41 2A98                             i2u202_40 2CEC  
                           i2u122_40 2AE8                             i2u202_41 2CE8  
                           i2u122_41 2AE4                             i2u123_41 2E7C  
                           i2u124_40 2672                             i2u124_41 266E  
                           i2u125_40 268C                             i2u125_41 2688  
                           i2u126_40 26A6                             i2u126_41 26A2  
                           i2u127_40 26C4                             i2u127_41 26C0  
__size_of_INTERRUPT_InterruptManager 2968                             i2u128_40 26DA  
                           i2u136_40 2726                             i2u128_41 26D6  
                           i2u136_41 2722                             i2u129_40 26FE  
                           i2u129_41 26FA                             i2u161_41 151E  
                           i2u162_40 1546                             i2u170_41 17E2  
                           i2u162_41 1542                             i2u171_40 1906  
                           i2u163_40 155C                             i2u227_40 291A  
                           i2u171_41 1902                             i2u163_41 1558  
                           i2u227_41 2916                             i2u228_40 2928  
                           i2u172_41 1910                             i2u164_41 156E  
                           i2u228_41 2924                             i2u165_40 1642  
                           i2u229_40 293E                             i2u165_41 163E  
                           i2u229_41 293A                             i2u166_40 1688  
                           i2u166_41 1684                             i2u167_40 16A2  
                           i2u167_41 169E                             i2u168_41 16AC  
                           i2u169_40 17D8                             i2u169_41 17D4  
                           _PIR1bits 000F9E                             i2u186_40 1C16  
                           i2u186_41 1C12                             i2u187_40 1DEC  
                           i2u187_41 1DE8                             i2u198_40 2F60  
                           i2u198_41 2F5C                             i2u199_40 2F72  
                           i2u199_41 2F6E           heater_heatpumper@check_off 00E7  
                          _timer_ISR 2F42                             _TMR0_IRS 3068  
                          _timestamp 00C0                UPDATE_TIMER@temp_head 005B  
                  ___wmul@multiplier 0068                          ??_InitBBSPI 0068  
                 SendByteBBSPI@input 006A                             i2___wmul 2FD2  
                   __size_of_LCDInit 0054             __end_of_print_temp_humid 25AE  
                  i2create_node@temp 000E                    printLCD_char@line 0070  
                 __end_of_clean_node 2374                            _turn_fan3 00D8  
             ?_SYSTEM_INITIALIZATION 0001                            copy_data0 2D16  
                 i2___awmod@dividend 0001                          _first_state 00CC  
                      ?_check_button 0001                         _second_state 00CA  
                           __Hrparam 0000                             __Lrparam 0000  
                         ?_timer_ISR 0001                      _WritePort_BBSPI 2FF8  
              __size_of_UPDATE_TIMER 020E                     __size_of___awdiv 00C6  
                   __size_of___awmod 00B2                i2___wmul@multiplicand 0003  
                       ??_init_queue 006E         __size_of_TMR0_INITIALIZATION 0010  
        LINKED_LIST_INITIALIZATION@i 006E                             add@index 007B  
               __end_of_start_timers 3080                     __size_of_getByte 0108  
                   __size_of_dequeue 0082                        _printLCD_char 2DB0  
                   __size_of_readDHT 0114                     __size_of_enqueue 00AE  
                        _read_button 2CA2                             __ptext10 1DEE  
                           __ptext11 1F02                             __ptext20 2B64  
                           __ptext12 24FC                             __ptext21 2BCE  
                           __ptext13 2DB0                             __ptext30 20FC  
                           __ptext22 3048                             __ptext14 2374  
                           __ptext31 2FAA                             __ptext23 3058  
                           __ptext15 2970                             __ptext40 2660  
                           __ptext24 2D5C                             __ptext16 25AE  
                           __ptext41 22AC                             __ptext33 2F42  
                           __ptext25 3018                             __ptext17 2EC6  
                           __ptext42 2FD2                             __ptext34 1BE0  
                           __ptext26 2C38                             __ptext18 2F04  
                           __ptext43 2CA2                             __ptext35 14E8  
                           __ptext27 2FF8                             __ptext19 2E86  
                           __ptext44 3068                             __ptext36 2A70  
                           __ptext28 2AEE                             __ptext45 0000  
                           __ptext37 2E42                             __ptext29 3036  
                           __ptext38 243A                             __ptext39 2710  
                     printLCD_char@c 0073                       ??_check_button 0068  
              __end_ofi2_create_node 2E86                        __size_of_main 00F2  
                 __end_of_init_queue 2C38                         _UPDATE_TIMER 1BE0  
                           _no_funcs 00E2                 UPDATE_TIMER@function 0055  
                           getByte@i 006A                             getByte@j 006B  
                           int$flags 005F   __end_of_INTERRUPT_InterruptManager 2970  
         _INTERRUPT_InterruptManager 0008                           _LCDPutChar 2B64  
                         _LCDPutInst 2C38          check_button@check_but_state 00C4  
                   readDHT@check_sum 006E                       ?_printLCD_char 0070  
              __end_of_SendByteBBSPI 2B64                    i2___awmod@divisor 0003  
                  i2___awmod@counter 0005                __size_of_return_index 007E  
                         i2_ADD_NODE 14E8                           _INTCONbits 000FF2  
                           intlevel2 0000                       _get_temp_humid 27BE  
            __end_of_WritePort_BBSPI 3018                         _time_out_dht 005D  
           __size_of_printLCD_string 003E                          ??_timer_ISR 005D  
                       _return_index 29F2                     ADD_NODE@function 008A  
            __size_ofi2_return_index 007E              WritePort_BBSPI@port_add 006C  
                     _humidity_value 00DA               __end_of_get_temp_humid 285A  
            __size_of_register_timer 0032                          dequeue@temp 0073  
                       ?_create_node 0068  
