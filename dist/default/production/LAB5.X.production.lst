

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Nov 25 09:53:21 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    68  0000                     
    69                           ; Version 2.10
    70                           ; Generated 31/07/2019 GMT
    71                           ; 
    72                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F8722 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     
   104                           	psect	idataBANK0
   105  0034B4                     __pidataBANK0:
   106                           	opt callstack 0
   107                           
   108                           ;initializer for heater_heatpumper@check_off_temp
   109  0034B4  0001               	dw	1
   110                           
   111                           ;initializer for _time_each_state
   112  0034B6  0014               	dw	20
   113                           
   114                           ;initializer for _head
   115  0034B8  FFFF               	dw	65535
   116                           
   117                           ;initializer for _count
   118  0034BA  0001               	dw	1
   119  0000                     _TMR0	set	4054
   120  0000                     _TMR1L	set	4046
   121  0000                     _TMR1H	set	4047
   122  0000                     _PIR1bits	set	3998
   123  0000                     _T1CON	set	4045
   124  0000                     _PORTDbits	set	3971
   125  0000                     _T0CON	set	4053
   126  0000                     _ADCON1	set	4033
   127  0000                     _TRISDbits	set	3989
   128  0000                     _TRISBbits	set	3987
   129  0000                     _OSCTUNE	set	3995
   130  0000                     _OSCCON	set	4051
   131  0000                     _LATDbits	set	3980
   132  0000                     _PORTBbits	set	3969
   133  0000                     _PORTAbits	set	3968
   134  0000                     _PIE1bits	set	3997
   135  0000                     _INTCONbits	set	4082
   136  0000                     _LATCbits	set	3979
   137  0000                     _LATAbits	set	3977
   138  0000                     _TRISCbits	set	3988
   139  0000                     _TRISAbits	set	3986
   140  0000                     _LATFbits	set	3982
   141  0000                     _TRISFbits	set	3991
   142                           
   143                           	psect	smallconst
   144  001000                     __psmallconst:
   145                           	opt callstack 0
   146  001000  00                 	db	0
   147  001001                     STR_1:
   148  001001  48                 	db	72	;'H'
   149  001002  65                 	db	101	;'e'
   150  001003  61                 	db	97	;'a'
   151  001004  74                 	db	116	;'t'
   152  001005  69                 	db	105	;'i'
   153  001006  6E                 	db	110	;'n'
   154  001007  67                 	db	103	;'g'
   155  001008  20                 	db	32
   156  001009  20                 	db	32
   157  00100A  20                 	db	32
   158  00100B  46                 	db	70	;'F'
   159  00100C  33                 	db	51	;'3'
   160  00100D  3A                 	db	58	;':'
   161  00100E  20                 	db	32
   162  00100F  20                 	db	32
   163  001010  20                 	db	32
   164  001011  00                 	db	0
   165  001012                     STR_2:
   166  001012  50                 	db	80	;'P'
   167  001013  75                 	db	117	;'u'
   168  001014  6D                 	db	109	;'m'
   169  001015  70                 	db	112	;'p'
   170  001016  20                 	db	32
   171  001017  68                 	db	104	;'h'
   172  001018  65                 	db	101	;'e'
   173  001019  61                 	db	97	;'a'
   174  00101A  74                 	db	116	;'t'
   175  00101B  20                 	db	32
   176  00101C  46                 	db	70	;'F'
   177  00101D  33                 	db	51	;'3'
   178  00101E  3A                 	db	58	;':'
   179  00101F  20                 	db	32
   180  001020  20                 	db	32
   181  001021  20                 	db	32
   182  001022  00                 	db	0
   183  001023                     STR_4:
   184  001023  49                 	db	73	;'I'
   185  001024  4E                 	db	78	;'N'
   186  001025  43                 	db	67	;'C'
   187  001026  52                 	db	82	;'R'
   188  001027  3A                 	db	58	;':'
   189  001028  42                 	db	66	;'B'
   190  001029  30                 	db	48	;'0'
   191  00102A  20                 	db	32
   192  00102B  20                 	db	32
   193  00102C  4E                 	db	78	;'N'
   194  00102D  45                 	db	69	;'E'
   195  00102E  58                 	db	88	;'X'
   196  00102F  54                 	db	84	;'T'
   197  001030  3A                 	db	58	;':'
   198  001031  41                 	db	65	;'A'
   199  001032  30                 	db	48	;'0'
   200  001033  00                 	db	0
   201  001034                     STR_7:
   202  001034  54                 	db	84	;'T'
   203  001035  65                 	db	101	;'e'
   204  001036  6D                 	db	109	;'m'
   205  001037  70                 	db	112	;'p'
   206  001038  3A                 	db	58	;':'
   207  001039  20                 	db	32
   208  00103A  20                 	db	32
   209  00103B  20                 	db	32
   210  00103C  48                 	db	72	;'H'
   211  00103D  75                 	db	117	;'u'
   212  00103E  6D                 	db	109	;'m'
   213  00103F  69                 	db	105	;'i'
   214  001040  64                 	db	100	;'d'
   215  001041  3A                 	db	58	;':'
   216  001042  00                 	db	0
   217  001043                     STR_5:
   218  001043  48                 	db	72	;'H'
   219  001044  55                 	db	85	;'U'
   220  001045  4D                 	db	77	;'M'
   221  001046  49                 	db	73	;'I'
   222  001047  44                 	db	68	;'D'
   223  001048  3A                 	db	58	;':'
   224  001049  00                 	db	0
   225  00104A                     STR_3:
   226  00104A  54                 	db	84	;'T'
   227  00104B  45                 	db	69	;'E'
   228  00104C  4D                 	db	77	;'M'
   229  00104D  50                 	db	80	;'P'
   230  00104E  3A                 	db	58	;':'
   231  00104F  00                 	db	0
   232  0000                     
   233                           ; #config settings
   234  001050  00                 	db	0	; dummy byte at the end
   235  0000                     
   236                           	psect	cinit
   237  003146                     __pcinit:
   238                           	opt callstack 0
   239  003146                     start_initialization:
   240                           	opt callstack 0
   241  003146                     __initialization:
   242                           	opt callstack 0
   243                           
   244                           ; Initialize objects allocated to BANK0 (8 bytes)
   245                           ; load TBLPTR registers with __pidataBANK0
   246  003146  0EB4               	movlw	low __pidataBANK0
   247  003148  6EF6               	movwf	tblptrl,c
   248  00314A  0E34               	movlw	high __pidataBANK0
   249  00314C  6EF7               	movwf	tblptrh,c
   250  00314E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   251  003150  6EF8               	movwf	tblptru,c
   252  003152  EE00  F0ED         	lfsr	0,__pdataBANK0
   253  003156  EE10 F008          	lfsr	1,8
   254  00315A                     copy_data0:
   255  00315A  0009               	tblrd		*+
   256  00315C  CFF5 FFEE          	movff	tablat,postinc0
   257  003160  50E5               	movf	postdec1,w,c
   258  003162  50E1               	movf	fsr1l,w,c
   259  003164  E1FA               	bnz	copy_data0
   260                           
   261                           ; Clear objects allocated to BIGRAM (3260 bytes)
   262  003166  EE01  F028         	lfsr	0,__pbssBIGRAM
   263  00316A  EE1C F0BC          	lfsr	1,3260
   264  00316E                     clear_0:
   265  00316E  6AEE               	clrf	postinc0,c
   266  003170  50E5               	movf	postdec1,w,c
   267  003172  50E1               	movf	fsr1l,w,c
   268  003174  E1FC               	bnz	clear_0
   269  003176  50E2               	movf	fsr1h,w,c
   270  003178  E1FA               	bnz	clear_0
   271                           
   272                           ; Clear objects allocated to BANK1 (40 bytes)
   273  00317A  EE01  F000         	lfsr	0,__pbssBANK1
   274  00317E  0E28               	movlw	40
   275  003180                     clear_1:
   276  003180  6AEE               	clrf	postinc0,c
   277  003182  06E8               	decf	wreg,f,c
   278  003184  E1FD               	bnz	clear_1
   279                           
   280                           ; Clear objects allocated to BANK0 (45 bytes)
   281  003186  EE00  F0C0         	lfsr	0,__pbssBANK0
   282  00318A  0E2D               	movlw	45
   283  00318C                     clear_2:
   284  00318C  6AEE               	clrf	postinc0,c
   285  00318E  06E8               	decf	wreg,f,c
   286  003190  E1FD               	bnz	clear_2
   287                           
   288                           ; Clear objects allocated to COMRAM (2 bytes)
   289  003192  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   290  003194  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   291  003196                     end_of_initialization:
   292                           	opt callstack 0
   293  003196                     __end_of__initialization:
   294                           	opt callstack 0
   295  003196  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   296  003198  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   297  00319A  0100               	movlb	0
   298  00319C  EFD7  F011         	goto	_main	;jump to C main() function
   299                           
   300                           	psect	bssCOMRAM
   301  00005D                     __pbssCOMRAM:
   302                           	opt callstack 0
   303  00005D                     _time_out_dht:
   304                           	opt callstack 0
   305  00005D                     	ds	2
   306                           
   307                           	psect	bssBANK0
   308  0000C0                     __pbssBANK0:
   309                           	opt callstack 0
   310  0000C0                     _timestamp:
   311                           	opt callstack 0
   312  0000C0                     	ds	4
   313  0000C4                     check_button@check_but_inc:
   314                           	opt callstack 0
   315  0000C4                     	ds	2
   316  0000C6                     check_button@check_but_state:
   317                           	opt callstack 0
   318  0000C6                     	ds	2
   319  0000C8                     _inc_but_2:
   320                           	opt callstack 0
   321  0000C8                     	ds	2
   322  0000CA                     _inc_but_1:
   323                           	opt callstack 0
   324  0000CA                     	ds	2
   325  0000CC                     _second_state:
   326                           	opt callstack 0
   327  0000CC                     	ds	2
   328  0000CE                     _first_state:
   329                           	opt callstack 0
   330  0000CE                     	ds	2
   331  0000D0                     _no_q:
   332                           	opt callstack 0
   333  0000D0                     	ds	2
   334  0000D2                     _rear:
   335                           	opt callstack 0
   336  0000D2                     	ds	2
   337  0000D4                     _front:
   338                           	opt callstack 0
   339  0000D4                     	ds	2
   340  0000D6                     _inc_but:
   341                           	opt callstack 0
   342  0000D6                     	ds	2
   343  0000D8                     _state_but:
   344                           	opt callstack 0
   345  0000D8                     	ds	2
   346  0000DA                     _turn_fan3:
   347                           	opt callstack 0
   348  0000DA                     	ds	2
   349  0000DC                     _MAX_HUMIDITY:
   350                           	opt callstack 0
   351  0000DC                     	ds	2
   352  0000DE                     _MAX_TEMPERATURE:
   353                           	opt callstack 0
   354  0000DE                     	ds	2
   355  0000E0                     _humidity_value:
   356                           	opt callstack 0
   357  0000E0                     	ds	2
   358  0000E2                     _temperature_value:
   359                           	opt callstack 0
   360  0000E2                     	ds	2
   361  0000E4                     _temper:
   362                           	opt callstack 0
   363  0000E4                     	ds	2
   364  0000E6                     _humid:
   365                           	opt callstack 0
   366  0000E6                     	ds	2
   367  0000E8                     _no_funcs:
   368                           	opt callstack 0
   369  0000E8                     	ds	2
   370  0000EA                     _state:
   371                           	opt callstack 0
   372  0000EA                     	ds	1
   373  0000EB                     _FUNCTION:
   374                           	opt callstack 0
   375  0000EB                     	ds	1
   376  0000EC                     _fan3:
   377                           	opt callstack 0
   378  0000EC                     	ds	1
   379                           
   380                           	psect	dataBANK0
   381  0000ED                     __pdataBANK0:
   382                           	opt callstack 0
   383  0000ED                     heater_heatpumper@check_off_temp:
   384                           	opt callstack 0
   385  0000ED                     	ds	2
   386  0000EF                     _time_each_state:
   387                           	opt callstack 0
   388  0000EF                     	ds	2
   389  0000F1                     _head:
   390                           	opt callstack 0
   391  0000F1                     	ds	2
   392  0000F3                     _count:
   393                           	opt callstack 0
   394  0000F3                     	ds	2
   395                           
   396                           	psect	bssBANK1
   397  000100                     __pbssBANK1:
   398                           	opt callstack 0
   399  000100                     _check_index:
   400                           	opt callstack 0
   401  000100                     	ds	40
   402                           
   403                           	psect	bssBIGRAM
   404  000128                     __pbssBIGRAM:
   405                           	opt callstack 0
   406  000128                     _queue:
   407                           	opt callstack 0
   408  000128                     	ds	3000
   409  000CE0                     _array:
   410                           	opt callstack 0
   411  000CE0                     	ds	260
   412                           
   413                           	psect	cstackBANK0
   414  000060                     __pcstackBANK0:
   415                           	opt callstack 0
   416  000060                     ??_INTERRUPT_InterruptManager:
   417                           
   418                           ; 1 bytes @ 0x0
   419  000060                     	ds	8
   420  000068                     ??_getByte:
   421  000068                     ?_return_index:
   422                           	opt callstack 0
   423  000068                     ?___wmul:
   424                           	opt callstack 0
   425  000068                     ?___awdiv:
   426                           	opt callstack 0
   427  000068                     ?___awmod:
   428                           	opt callstack 0
   429  000068                     ?___lwdiv:
   430                           	opt callstack 0
   431  000068                     ?___lwmod:
   432                           	opt callstack 0
   433  000068                     ?_create_node:
   434                           	opt callstack 0
   435  000068                     SendByteBBSPI@output:
   436                           	opt callstack 0
   437  000068                     ___wmul@multiplier:
   438                           	opt callstack 0
   439  000068                     ___awdiv@dividend:
   440                           	opt callstack 0
   441  000068                     ___awmod@dividend:
   442                           	opt callstack 0
   443  000068                     ___lwdiv@dividend:
   444                           	opt callstack 0
   445  000068                     ___lwmod@dividend:
   446                           	opt callstack 0
   447  000068                     create_node@delay:
   448                           	opt callstack 0
   449                           
   450                           ; 4 bytes @ 0x8
   451  000068                     	ds	1
   452  000069                     SendByteBBSPI@bitcount:
   453                           	opt callstack 0
   454                           
   455                           ; 1 bytes @ 0x9
   456  000069                     	ds	1
   457  00006A                     SendByteBBSPI@input:
   458                           	opt callstack 0
   459  00006A                     getByte@i:
   460                           	opt callstack 0
   461  00006A                     ___wmul@multiplicand:
   462                           	opt callstack 0
   463  00006A                     ___awdiv@divisor:
   464                           	opt callstack 0
   465  00006A                     ___awmod@divisor:
   466                           	opt callstack 0
   467  00006A                     ___lwdiv@divisor:
   468                           	opt callstack 0
   469  00006A                     ___lwmod@divisor:
   470                           	opt callstack 0
   471                           
   472                           ; 2 bytes @ 0xA
   473  00006A                     	ds	1
   474  00006B                     Port_BBSPIInit@port_dir:
   475                           	opt callstack 0
   476  00006B                     WritePort_BBSPI@a:
   477                           	opt callstack 0
   478  00006B                     getByte@j:
   479                           	opt callstack 0
   480                           
   481                           ; 1 bytes @ 0xB
   482  00006B                     	ds	1
   483  00006C                     ??_readDHT:
   484  00006C                     WritePort_BBSPI@port_add:
   485                           	opt callstack 0
   486  00006C                     ___awdiv@counter:
   487                           	opt callstack 0
   488  00006C                     ___awmod@counter:
   489                           	opt callstack 0
   490  00006C                     ___lwmod@counter:
   491                           	opt callstack 0
   492  00006C                     return_index@i:
   493                           	opt callstack 0
   494  00006C                     ___wmul@product:
   495                           	opt callstack 0
   496  00006C                     ___lwdiv@quotient:
   497                           	opt callstack 0
   498  00006C                     create_node@period:
   499                           	opt callstack 0
   500                           
   501                           ; 4 bytes @ 0xC
   502  00006C                     	ds	1
   503  00006D                     ??_LCDPutInst:
   504  00006D                     ??_LCDPutChar:
   505  00006D                     ___awdiv@sign:
   506                           	opt callstack 0
   507  00006D                     ___awmod@sign:
   508                           	opt callstack 0
   509                           
   510                           ; 1 bytes @ 0xD
   511  00006D                     	ds	1
   512  00006E                     LCDPutChar@ch:
   513                           	opt callstack 0
   514  00006E                     LCDPutInst@ch:
   515                           	opt callstack 0
   516  00006E                     readDHT@check_sum:
   517                           	opt callstack 0
   518  00006E                     ___lwdiv@counter:
   519                           	opt callstack 0
   520  00006E                     LINKED_LIST_INITIALIZATION@i:
   521                           	opt callstack 0
   522  00006E                     init_queue@i:
   523                           	opt callstack 0
   524  00006E                     ___awdiv@quotient:
   525                           	opt callstack 0
   526  00006E                     add@temp:
   527                           	opt callstack 0
   528                           
   529                           ; 13 bytes @ 0xE
   530  00006E                     	ds	1
   531  00006F                     ??_LCDInit:
   532  00006F                     readDHT@temp:
   533                           	opt callstack 0
   534  00006F                     LCDPutStr@ptr:
   535                           	opt callstack 0
   536                           
   537                           ; 2 bytes @ 0xF
   538  00006F                     	ds	1
   539  000070                     ?_dequeue:
   540                           	opt callstack 0
   541  000070                     printLCD_char@line:
   542                           	opt callstack 0
   543  000070                     create_node@function:
   544                           	opt callstack 0
   545                           
   546                           ; 3 bytes @ 0x10
   547  000070                     	ds	1
   548  000071                     printLCD_string@line:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0x11
   552  000071                     	ds	1
   553  000072                     printLCD_char@position:
   554                           	opt callstack 0
   555                           
   556                           ; 1 bytes @ 0x12
   557  000072                     	ds	1
   558  000073                     printLCD_char@c:
   559                           	opt callstack 0
   560  000073                     printLCD_string@array:
   561                           	opt callstack 0
   562  000073                     dequeue@temp:
   563                           	opt callstack 0
   564                           
   565                           ; 3 bytes @ 0x13
   566  000073                     	ds	1
   567  000074                     
   568                           ; 1 bytes @ 0x14
   569  000074                     	ds	1
   570  000075                     create_node@temp:
   571                           	opt callstack 0
   572                           
   573                           ; 13 bytes @ 0x15
   574  000075                     	ds	6
   575  00007B                     add@index:
   576                           	opt callstack 0
   577                           
   578                           ; 2 bytes @ 0x1B
   579  00007B                     	ds	2
   580  00007D                     
   581                           ; 1 bytes @ 0x1D
   582  00007D                     	ds	5
   583  000082                     ?_ADD_NODE:
   584                           	opt callstack 0
   585  000082                     ADD_NODE@delay:
   586                           	opt callstack 0
   587                           
   588                           ; 4 bytes @ 0x22
   589  000082                     	ds	4
   590  000086                     ADD_NODE@period:
   591                           	opt callstack 0
   592                           
   593                           ; 4 bytes @ 0x26
   594  000086                     	ds	4
   595  00008A                     ADD_NODE@function:
   596                           	opt callstack 0
   597                           
   598                           ; 3 bytes @ 0x2A
   599  00008A                     	ds	3
   600  00008D                     ??_ADD_NODE:
   601                           
   602                           ; 1 bytes @ 0x2D
   603  00008D                     	ds	12
   604  000099                     ADD_NODE@loop:
   605                           	opt callstack 0
   606                           
   607                           ; 2 bytes @ 0x39
   608  000099                     	ds	2
   609  00009B                     ADD_NODE@next:
   610                           	opt callstack 0
   611                           
   612                           ; 2 bytes @ 0x3B
   613  00009B                     	ds	2
   614  00009D                     ADD_NODE@pre:
   615                           	opt callstack 0
   616                           
   617                           ; 2 bytes @ 0x3D
   618  00009D                     	ds	2
   619  00009F                     ADD_NODE@temp:
   620                           	opt callstack 0
   621                           
   622                           ; 13 bytes @ 0x3F
   623  00009F                     	ds	13
   624  0000AC                     ADD_NODE@loc:
   625                           	opt callstack 0
   626                           
   627                           ; 2 bytes @ 0x4C
   628  0000AC                     	ds	2
   629  0000AE                     ADD_NODE@index:
   630                           	opt callstack 0
   631                           
   632                           ; 2 bytes @ 0x4E
   633  0000AE                     	ds	2
   634  0000B0                     register_timer@delay:
   635                           	opt callstack 0
   636                           
   637                           ; 4 bytes @ 0x50
   638  0000B0                     	ds	4
   639  0000B4                     register_timer@period:
   640                           	opt callstack 0
   641                           
   642                           ; 4 bytes @ 0x54
   643  0000B4                     	ds	4
   644  0000B8                     register_timer@function:
   645                           	opt callstack 0
   646                           
   647                           ; 3 bytes @ 0x58
   648  0000B8                     	ds	3
   649  0000BB                     
   650                           ; 1 bytes @ 0x5B
   651  0000BB                     	ds	2
   652  0000BD                     main@function:
   653                           	opt callstack 0
   654                           
   655                           ; 3 bytes @ 0x5D
   656  0000BD                     	ds	3
   657                           
   658                           	psect	cstackCOMRAM
   659  000001                     __pcstackCOMRAM:
   660                           	opt callstack 0
   661  000001                     ??_read_button:
   662  000001                     ??_read_button_increase:
   663  000001                     ?i2_return_index:
   664                           	opt callstack 0
   665  000001                     ?i2___wmul:
   666                           	opt callstack 0
   667  000001                     ?i2___awmod:
   668                           	opt callstack 0
   669  000001                     ?i2_create_node:
   670                           	opt callstack 0
   671  000001                     i2___wmul@multiplier:
   672                           	opt callstack 0
   673  000001                     i2___awmod@dividend:
   674                           	opt callstack 0
   675  000001                     i2create_node@delay:
   676                           	opt callstack 0
   677                           
   678                           ; 4 bytes @ 0x0
   679  000001                     	ds	2
   680  000003                     i2___wmul@multiplicand:
   681                           	opt callstack 0
   682  000003                     i2___awmod@divisor:
   683                           	opt callstack 0
   684                           
   685                           ; 2 bytes @ 0x2
   686  000003                     	ds	2
   687  000005                     i2___awmod@counter:
   688                           	opt callstack 0
   689  000005                     i2return_index@i:
   690                           	opt callstack 0
   691  000005                     i2___wmul@product:
   692                           	opt callstack 0
   693  000005                     i2create_node@period:
   694                           	opt callstack 0
   695                           
   696                           ; 4 bytes @ 0x4
   697  000005                     	ds	1
   698  000006                     i2___awmod@sign:
   699                           	opt callstack 0
   700                           
   701                           ; 1 bytes @ 0x5
   702  000006                     	ds	1
   703  000007                     clean_node@index:
   704                           	opt callstack 0
   705  000007                     enqueue@function:
   706                           	opt callstack 0
   707  000007                     i2add@temp:
   708                           	opt callstack 0
   709                           
   710                           ; 13 bytes @ 0x6
   711  000007                     	ds	2
   712  000009                     i2create_node@function:
   713                           	opt callstack 0
   714                           
   715                           ; 3 bytes @ 0x8
   716  000009                     	ds	1
   717  00000A                     
   718                           ; 1 bytes @ 0x9
   719  00000A                     	ds	4
   720  00000E                     i2create_node@temp:
   721                           	opt callstack 0
   722                           
   723                           ; 13 bytes @ 0xD
   724  00000E                     	ds	6
   725  000014                     i2add@index:
   726                           	opt callstack 0
   727                           
   728                           ; 2 bytes @ 0x13
   729  000014                     	ds	2
   730  000016                     
   731                           ; 1 bytes @ 0x15
   732  000016                     	ds	5
   733  00001B                     i2ADD_NODE@delay:
   734                           	opt callstack 0
   735                           
   736                           ; 4 bytes @ 0x1A
   737  00001B                     	ds	4
   738  00001F                     i2ADD_NODE@period:
   739                           	opt callstack 0
   740                           
   741                           ; 4 bytes @ 0x1E
   742  00001F                     	ds	4
   743  000023                     i2ADD_NODE@function:
   744                           	opt callstack 0
   745                           
   746                           ; 3 bytes @ 0x22
   747  000023                     	ds	3
   748  000026                     ??i2_ADD_NODE:
   749                           
   750                           ; 1 bytes @ 0x25
   751  000026                     	ds	12
   752  000032                     i2ADD_NODE@loop:
   753                           	opt callstack 0
   754                           
   755                           ; 2 bytes @ 0x31
   756  000032                     	ds	2
   757  000034                     i2ADD_NODE@next:
   758                           	opt callstack 0
   759                           
   760                           ; 2 bytes @ 0x33
   761  000034                     	ds	2
   762  000036                     i2ADD_NODE@pre:
   763                           	opt callstack 0
   764                           
   765                           ; 2 bytes @ 0x35
   766  000036                     	ds	2
   767  000038                     i2ADD_NODE@temp:
   768                           	opt callstack 0
   769                           
   770                           ; 13 bytes @ 0x37
   771  000038                     	ds	13
   772  000045                     i2ADD_NODE@loc:
   773                           	opt callstack 0
   774                           
   775                           ; 2 bytes @ 0x44
   776  000045                     	ds	2
   777  000047                     i2ADD_NODE@index:
   778                           	opt callstack 0
   779                           
   780                           ; 2 bytes @ 0x46
   781  000047                     	ds	2
   782  000049                     ??_UPDATE_TIMER:
   783                           
   784                           ; 1 bytes @ 0x48
   785  000049                     	ds	4
   786  00004D                     UPDATE_TIMER@delay:
   787                           	opt callstack 0
   788                           
   789                           ; 4 bytes @ 0x4C
   790  00004D                     	ds	4
   791  000051                     UPDATE_TIMER@period:
   792                           	opt callstack 0
   793                           
   794                           ; 4 bytes @ 0x50
   795  000051                     	ds	4
   796  000055                     UPDATE_TIMER@function:
   797                           	opt callstack 0
   798                           
   799                           ; 3 bytes @ 0x54
   800  000055                     	ds	3
   801  000058                     _UPDATE_TIMER$2273:
   802                           	opt callstack 0
   803                           
   804                           ; 3 bytes @ 0x57
   805  000058                     	ds	3
   806  00005B                     UPDATE_TIMER@temp_head:
   807                           	opt callstack 0
   808                           
   809                           ; 2 bytes @ 0x5A
   810  00005B                     	ds	2
   811  00005D                     
   812                           ; 1 bytes @ 0x5C
   813 ;;
   814 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   815 ;;
   816 ;; *************** function _main *****************
   817 ;; Defined at:
   818 ;;		line 46 in file "main.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;  function        3   93[BANK0 ] PTR FTN()void 
   823 ;;		 -> get_temp_humid(1), check_button(1), heater_heatpumper(1), NULL(0), 
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   836 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   837 ;;Total ram usage:        3 bytes
   838 ;; Hardware stack levels required when called:   12
   839 ;; This function calls:
   840 ;;		_LINKED_LIST_INITIALIZATION
   841 ;;		_SYSTEM_INITIALIZATION
   842 ;;		_check_button
   843 ;;		_dequeue
   844 ;;		_get_temp_humid
   845 ;;		_heater_heatpumper
   846 ;;		_register_timer
   847 ;;		_start_timers
   848 ;; This function is called by:
   849 ;;		Startup code after reset
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text0
   854  0023AE                     __ptext0:
   855                           	opt callstack 0
   856  0023AE                     _main:
   857                           	opt callstack 19
   858  0023AE                     
   859                           ;main.c: 48:     LINKED_LIST_INITIALIZATION();
   860  0023AE  EC50  F012         	call	_LINKED_LIST_INITIALIZATION	;wreg free
   861                           
   862                           ;main.c: 49:     SYSTEM_INITIALIZATION();
   863  0023B2  ECA4  F019         	call	_SYSTEM_INITIALIZATION	;wreg free
   864  0023B6                     
   865                           ;main.c: 50:     register_timer(0 , 500 , check_button);
   866  0023B6  0E00               	movlw	0
   867  0023B8  0100               	movlb	0	; () banked
   868  0023BA  6FB0               	movwf	register_timer@delay& (0+255),b
   869  0023BC  0E00               	movlw	0
   870  0023BE  6FB1               	movwf	(register_timer@delay+1)& (0+255),b
   871  0023C0  0E00               	movlw	0
   872  0023C2  6FB2               	movwf	(register_timer@delay+2)& (0+255),b
   873  0023C4  0E00               	movlw	0
   874  0023C6  6FB3               	movwf	(register_timer@delay+3)& (0+255),b
   875  0023C8  0EF4               	movlw	244
   876  0023CA  6FB4               	movwf	register_timer@period& (0+255),b
   877  0023CC  0E01               	movlw	1
   878  0023CE  6FB5               	movwf	(register_timer@period+1)& (0+255),b
   879  0023D0  0E00               	movlw	0
   880  0023D2  6FB6               	movwf	(register_timer@period+2)& (0+255),b
   881  0023D4  0E00               	movlw	0
   882  0023D6  6FB7               	movwf	(register_timer@period+3)& (0+255),b
   883  0023D8  0E4C               	movlw	low _check_button
   884  0023DA  6FB8               	movwf	register_timer@function& (0+255),b
   885  0023DC  0E19               	movlw	high _check_button
   886  0023DE  6FB9               	movwf	(register_timer@function+1)& (0+255),b
   887  0023E0  0E00               	movlw	low (_check_button shr (0+16))
   888  0023E2  6FBA               	movwf	(register_timer@function+2)& (0+255),b
   889  0023E4  ECDC  F019         	call	_register_timer	;wreg free
   890  0023E8                     
   891                           ;main.c: 51:     register_timer(1000 , 500 , heater_heatpumper);
   892  0023E8  0EE8               	movlw	232
   893  0023EA  0100               	movlb	0	; () banked
   894  0023EC  6FB0               	movwf	register_timer@delay& (0+255),b
   895  0023EE  0E03               	movlw	3
   896  0023F0  6FB1               	movwf	(register_timer@delay+1)& (0+255),b
   897  0023F2  0E00               	movlw	0
   898  0023F4  6FB2               	movwf	(register_timer@delay+2)& (0+255),b
   899  0023F6  0E00               	movlw	0
   900  0023F8  6FB3               	movwf	(register_timer@delay+3)& (0+255),b
   901  0023FA  0EF4               	movlw	244
   902  0023FC  6FB4               	movwf	register_timer@period& (0+255),b
   903  0023FE  0E01               	movlw	1
   904  002400  6FB5               	movwf	(register_timer@period+1)& (0+255),b
   905  002402  0E00               	movlw	0
   906  002404  6FB6               	movwf	(register_timer@period+2)& (0+255),b
   907  002406  0E00               	movlw	0
   908  002408  6FB7               	movwf	(register_timer@period+3)& (0+255),b
   909  00240A  0E14               	movlw	low _heater_heatpumper
   910  00240C  6FB8               	movwf	register_timer@function& (0+255),b
   911  00240E  0E1D               	movlw	high _heater_heatpumper
   912  002410  6FB9               	movwf	(register_timer@function+1)& (0+255),b
   913  002412  0E00               	movlw	low (_heater_heatpumper shr (0+16))
   914  002414  6FBA               	movwf	(register_timer@function+2)& (0+255),b
   915  002416  ECDC  F019         	call	_register_timer	;wreg free
   916  00241A                     
   917                           ;main.c: 52:     register_timer(1000 , 1000 , get_temp_humid);
   918  00241A  0EE8               	movlw	232
   919  00241C  0100               	movlb	0	; () banked
   920  00241E  6FB0               	movwf	register_timer@delay& (0+255),b
   921  002420  0E03               	movlw	3
   922  002422  6FB1               	movwf	(register_timer@delay+1)& (0+255),b
   923  002424  0E00               	movlw	0
   924  002426  6FB2               	movwf	(register_timer@delay+2)& (0+255),b
   925  002428  0E00               	movlw	0
   926  00242A  6FB3               	movwf	(register_timer@delay+3)& (0+255),b
   927  00242C  0EE8               	movlw	232
   928  00242E  6FB4               	movwf	register_timer@period& (0+255),b
   929  002430  0E03               	movlw	3
   930  002432  6FB5               	movwf	(register_timer@period+1)& (0+255),b
   931  002434  0E00               	movlw	0
   932  002436  6FB6               	movwf	(register_timer@period+2)& (0+255),b
   933  002438  0E00               	movlw	0
   934  00243A  6FB7               	movwf	(register_timer@period+3)& (0+255),b
   935  00243C  0E62               	movlw	low _get_temp_humid
   936  00243E  6FB8               	movwf	register_timer@function& (0+255),b
   937  002440  0E2B               	movlw	high _get_temp_humid
   938  002442  6FB9               	movwf	(register_timer@function+1)& (0+255),b
   939  002444  0E00               	movlw	low (_get_temp_humid shr (0+16))
   940  002446  6FBA               	movwf	(register_timer@function+2)& (0+255),b
   941  002448  ECDC  F019         	call	_register_timer	;wreg free
   942  00244C                     
   943                           ;main.c: 54:     start_timers();
   944  00244C  EC5E  F01A         	call	_start_timers	;wreg free
   945  002450                     l3341:
   946                           
   947                           ;main.c: 56:         if (no_q>0)
   948  002450  0100               	movlb	0	; () banked
   949  002452  BFD1               	btfsc	(_no_q+1)& (0+255),7,b
   950  002454  EF34  F012         	goto	u2611
   951  002458  51D1               	movf	(_no_q+1)& (0+255),w,b
   952  00245A  E108               	bnz	u2610
   953  00245C  05D0               	decf	_no_q& (0+255),w,b
   954  00245E  A0D8               	btfss	status,0,c
   955  002460  EF34  F012         	goto	u2611
   956  002464  EF36  F012         	goto	u2610
   957  002468                     u2611:
   958  002468  EF28  F012         	goto	l3341
   959  00246C                     u2610:
   960  00246C                     
   961                           ; BSR set to: 0
   962                           ;main.c: 57:         {;main.c: 58:             FUNCTION_PTR function = dequeue();
   963  00246C  EC3C  F016         	call	_dequeue	;wreg free
   964  002470  C070  F0BD         	movff	?_dequeue,main@function
   965  002474  C071  F0BE         	movff	?_dequeue+1,main@function+1
   966  002478  C072  F0BF         	movff	?_dequeue+2,main@function+2
   967  00247C                     
   968                           ;main.c: 59:             (function)();
   969  00247C  D802               	call	u2628
   970  00247E  EF4C  F012         	goto	u2629
   971  002482                     u2628:
   972  002482  0005               	push	
   973  002484  6EFA               	movwf	pclath,c
   974  002486  0100               	movlb	0	; () banked
   975  002488  51BD               	movf	main@function& (0+255),w,b
   976  00248A  6EFD               	movwf	tosl,c
   977  00248C  51BE               	movf	(main@function+1)& (0+255),w,b
   978  00248E  6EFE               	movwf	tosh,c
   979  002490  51BF               	movf	(main@function+2)& (0+255),w,b
   980  002492  6EFF               	movwf	tosu,c
   981  002494  50FA               	movf	pclath,w,c
   982  002496  0012               	return		;indir
   983  002498                     u2629:
   984  002498  EF28  F012         	goto	l3341
   985  00249C  EF07  F000         	goto	start
   986  0024A0                     __end_of_main:
   987                           	opt callstack 0
   988                           
   989 ;; *************** function _start_timers *****************
   990 ;; Defined at:
   991 ;;		line 5 in file "clock.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;		None
   994 ;; Auto vars:     Size  Location     Type
   995 ;;		None
   996 ;; Return value:  Size  Location     Type
   997 ;;                  2  128[None  ] int 
   998 ;; Registers used:
   999 ;;		None
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1009 ;;Total ram usage:        0 bytes
  1010 ;; Hardware stack levels used:    1
  1011 ;; Hardware stack levels required when called:    6
  1012 ;; This function calls:
  1013 ;;		Nothing
  1014 ;; This function is called by:
  1015 ;;		_main
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           	psect	text1
  1020  0034BC                     __ptext1:
  1021                           	opt callstack 0
  1022  0034BC                     _start_timers:
  1023                           	opt callstack 24
  1024  0034BC                     
  1025                           ;clock.c: 7:     INTCONbits.TMR0IE = 1;
  1026  0034BC  8AF2               	bsf	242,5,c	;volatile
  1027  0034BE  0012               	return		;funcret
  1028  0034C0                     __end_of_start_timers:
  1029                           	opt callstack 0
  1030                           
  1031 ;; *************** function _register_timer *****************
  1032 ;; Defined at:
  1033 ;;		line 24 in file "clock.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;  delay           4   80[BANK0 ] long 
  1036 ;;  period          4   84[BANK0 ] long 
  1037 ;;  function        3   88[BANK0 ] PTR FTN()void 
  1038 ;;		 -> get_temp_humid(1), check_button(1), heater_heatpumper(1), 
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;  timer_id        2    0        int 
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  2   80[BANK0 ] int 
  1043 ;; Registers used:
  1044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1050 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1051 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1053 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1054 ;;Total ram usage:       13 bytes
  1055 ;; Hardware stack levels used:    1
  1056 ;; Hardware stack levels required when called:    9
  1057 ;; This function calls:
  1058 ;;		_ADD_NODE
  1059 ;; This function is called by:
  1060 ;;		_main
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           	psect	text2
  1065  0033B8                     __ptext2:
  1066                           	opt callstack 0
  1067  0033B8                     _register_timer:
  1068                           	opt callstack 21
  1069  0033B8  C0B0  F082         	movff	register_timer@delay,ADD_NODE@delay
  1070  0033BC  C0B1  F083         	movff	register_timer@delay+1,ADD_NODE@delay+1
  1071  0033C0  C0B2  F084         	movff	register_timer@delay+2,ADD_NODE@delay+2
  1072  0033C4  C0B3  F085         	movff	register_timer@delay+3,ADD_NODE@delay+3
  1073  0033C8  C0B4  F086         	movff	register_timer@period,ADD_NODE@period
  1074  0033CC  C0B5  F087         	movff	register_timer@period+1,ADD_NODE@period+1
  1075  0033D0  C0B6  F088         	movff	register_timer@period+2,ADD_NODE@period+2
  1076  0033D4  C0B7  F089         	movff	register_timer@period+3,ADD_NODE@period+3
  1077  0033D8  C0B8  F08A         	movff	register_timer@function,ADD_NODE@function
  1078  0033DC  C0B9  F08B         	movff	register_timer@function+1,ADD_NODE@function+1
  1079  0033E0  C0BA  F08C         	movff	register_timer@function+2,ADD_NODE@function+2
  1080  0033E4  EC29  F008         	call	_ADD_NODE	;wreg free
  1081  0033E8  0012               	return		;funcret
  1082  0033EA                     __end_of_register_timer:
  1083                           	opt callstack 0
  1084                           
  1085 ;; *************** function _ADD_NODE *****************
  1086 ;; Defined at:
  1087 ;;		line 15 in file "linked_list.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;  delay           4   34[BANK0 ] long 
  1090 ;;  period          4   38[BANK0 ] long 
  1091 ;;  function        3   42[BANK0 ] PTR FTN()void 
  1092 ;;		 -> get_temp_humid(1), check_button(1), heater_heatpumper(1), NULL(0), 
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;  next            2   59[BANK0 ] int 
  1095 ;;  loc             2   76[BANK0 ] int 
  1096 ;;  pre             2   61[BANK0 ] int 
  1097 ;;  loop            2   57[BANK0 ] int 
  1098 ;;  temp           13   63[BANK0 ] struct Node
  1099 ;;  index           2   78[BANK0 ] int 
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  2   34[BANK0 ] int 
  1102 ;; Registers used:
  1103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1109 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1110 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;Total ram usage:       46 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; Hardware stack levels required when called:    8
  1116 ;; This function calls:
  1117 ;;		___wmul
  1118 ;;		_add
  1119 ;;		_create_node
  1120 ;;		_return_index
  1121 ;; This function is called by:
  1122 ;;		_register_timer
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           	psect	text3
  1127  001052                     __ptext3:
  1128                           	opt callstack 0
  1129  001052                     _ADD_NODE:
  1130                           	opt callstack 21
  1131  001052                     
  1132                           ;linked_list.c: 15: int ADD_NODE(timestamp_t delay , timestamp_t period , FUNCTION_PTR f
      +                          unction );linked_list.c: 16: {;linked_list.c: 17:     struct Node temp = create_node(del
      +                          ay , period , function);
  1133  001052  C082  F068         	movff	ADD_NODE@delay,create_node@delay
  1134  001056  C083  F069         	movff	ADD_NODE@delay+1,create_node@delay+1
  1135  00105A  C084  F06A         	movff	ADD_NODE@delay+2,create_node@delay+2
  1136  00105E  C085  F06B         	movff	ADD_NODE@delay+3,create_node@delay+3
  1137  001062  C086  F06C         	movff	ADD_NODE@period,create_node@period
  1138  001066  C087  F06D         	movff	ADD_NODE@period+1,create_node@period+1
  1139  00106A  C088  F06E         	movff	ADD_NODE@period+2,create_node@period+2
  1140  00106E  C089  F06F         	movff	ADD_NODE@period+3,create_node@period+3
  1141  001072  C08A  F070         	movff	ADD_NODE@function,create_node@function
  1142  001076  C08B  F071         	movff	ADD_NODE@function+1,create_node@function+1
  1143  00107A  C08C  F072         	movff	ADD_NODE@function+2,create_node@function+2
  1144  00107E  EC20  F019         	call	_create_node	;wreg free
  1145  001082  EE20  F09F         	lfsr	2,ADD_NODE@temp
  1146  001086  0E0C               	movlw	12
  1147  001088                     u1881:
  1148  001088  CFEB FFDB          	movff	plusw0,plusw2
  1149  00108C  06E8               	decf	wreg,f,c
  1150  00108E  E2FC               	bc	u1881
  1151  001090                     
  1152                           ;linked_list.c: 18:     int index = return_index();
  1153  001090  EC7D  F016         	call	_return_index	;wreg free
  1154  001094  C068  F0AE         	movff	?_return_index,ADD_NODE@index
  1155  001098  C069  F0AF         	movff	?_return_index+1,ADD_NODE@index+1
  1156  00109C                     
  1157                           ;linked_list.c: 19:     if (index != -1)
  1158  00109C  0100               	movlb	0	; () banked
  1159  00109E  29AE               	incf	ADD_NODE@index& (0+255),w,b
  1160  0010A0  E108               	bnz	u1890
  1161  0010A2  29AF               	incf	(ADD_NODE@index+1)& (0+255),w,b
  1162  0010A4  B4D8               	btfsc	status,2,c
  1163  0010A6  EF57  F008         	goto	u1891
  1164  0010AA  EF59  F008         	goto	u1890
  1165  0010AE                     u1891:
  1166  0010AE  EF70  F00A         	goto	l302
  1167  0010B2                     u1890:
  1168  0010B2                     
  1169                           ; BSR set to: 0
  1170                           ;linked_list.c: 20:     {;linked_list.c: 21:         if (head == -1)
  1171  0010B2  29F1               	incf	_head& (0+255),w,b
  1172  0010B4  E106               	bnz	u1901
  1173  0010B6  29F2               	incf	(_head+1)& (0+255),w,b
  1174  0010B8  A4D8               	btfss	status,2,c
  1175  0010BA  EF61  F008         	goto	u1901
  1176  0010BE  EF63  F008         	goto	u1900
  1177  0010C2                     u1901:
  1178  0010C2  EF7C  F008         	goto	l303
  1179  0010C6                     u1900:
  1180  0010C6                     
  1181                           ; BSR set to: 0
  1182                           ;linked_list.c: 22:         {;linked_list.c: 23:             head =index;
  1183  0010C6  C0AE  F0F1         	movff	ADD_NODE@index,_head
  1184  0010CA  C0AF  F0F2         	movff	ADD_NODE@index+1,_head+1
  1185  0010CE                     
  1186                           ; BSR set to: 0
  1187                           ;linked_list.c: 24:             add(temp , head);
  1188  0010CE  EE20  F09F         	lfsr	2,ADD_NODE@temp
  1189  0010D2  EE00  F06E         	lfsr	0,add@temp
  1190  0010D6  0E0C               	movlw	12
  1191  0010D8                     u1911:
  1192  0010D8  CFDB FFEB          	movff	plusw2,plusw0
  1193  0010DC  06E8               	decf	wreg,f,c
  1194  0010DE  E2FC               	bc	u1911
  1195  0010E0  C0F1  F07B         	movff	_head,add@index
  1196  0010E4  C0F2  F07C         	movff	_head+1,add@index+1
  1197  0010E8  ECC2  F012         	call	_add	;wreg free
  1198  0010EC                     l2839:
  1199                           
  1200                           ;linked_list.c: 25:             return index;
  1201  0010EC  C0AE  F082         	movff	ADD_NODE@index,?_ADD_NODE
  1202  0010F0  C0AF  F083         	movff	ADD_NODE@index+1,?_ADD_NODE+1
  1203  0010F4  EF72  F00A         	goto	l304
  1204  0010F8                     l303:
  1205                           
  1206                           ; BSR set to: 0
  1207                           ;linked_list.c: 28:         {;linked_list.c: 29:             int loc = head;
  1208  0010F8  C0F1  F0AC         	movff	_head,ADD_NODE@loc
  1209  0010FC  C0F2  F0AD         	movff	_head+1,ADD_NODE@loc+1
  1210                           
  1211                           ;linked_list.c: 30:             int pre = head;
  1212  001100  C0F1  F09D         	movff	_head,ADD_NODE@pre
  1213  001104  C0F2  F09E         	movff	_head+1,ADD_NODE@pre+1
  1214  001108                     
  1215                           ; BSR set to: 0
  1216                           ;linked_list.c: 31:             int loop = 1;
  1217  001108  0E00               	movlw	0
  1218  00110A  6F9A               	movwf	(ADD_NODE@loop+1)& (0+255),b
  1219  00110C  0E01               	movlw	1
  1220  00110E  6F99               	movwf	ADD_NODE@loop& (0+255),b
  1221                           
  1222                           ;linked_list.c: 32:             while (loop<no_funcs && temp.delay >= array[loc].delay)
  1223  001110  EFCA  F008         	goto	l2853
  1224  001114                     l307:
  1225                           
  1226                           ; BSR set to: 0
  1227                           ;linked_list.c: 33:             {;linked_list.c: 34:                 pre = loc;
  1228  001114  C0AC  F09D         	movff	ADD_NODE@loc,ADD_NODE@pre
  1229  001118  C0AD  F09E         	movff	ADD_NODE@loc+1,ADD_NODE@pre+1
  1230  00111C                     
  1231                           ; BSR set to: 0
  1232                           ;linked_list.c: 35:                 loc = array[loc].next;
  1233  00111C  C0AC  F068         	movff	ADD_NODE@loc,___wmul@multiplier
  1234  001120  C0AD  F069         	movff	ADD_NODE@loc+1,___wmul@multiplier+1
  1235  001124  0E00               	movlw	0
  1236  001126  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1237  001128  0E0D               	movlw	13
  1238  00112A  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1239  00112C  ECF5  F019         	call	___wmul	;wreg free
  1240  001130  0EE0               	movlw	low _array
  1241  001132  0100               	movlb	0	; () banked
  1242  001134  2568               	addwf	?___wmul& (0+255),w,b
  1243  001136  6ED9               	movwf	fsr2l,c
  1244  001138  0E0C               	movlw	high _array
  1245  00113A  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1246  00113C  6EDA               	movwf	fsr2h,c
  1247  00113E  CFDE F0AC          	movff	postinc2,ADD_NODE@loc
  1248  001142  CFDD F0AD          	movff	postdec2,ADD_NODE@loc+1
  1249  001146                     
  1250                           ; BSR set to: 0
  1251                           ;linked_list.c: 36:                 loop ++;
  1252  001146  4B99               	infsnz	ADD_NODE@loop& (0+255),f,b
  1253  001148  2B9A               	incf	(ADD_NODE@loop+1)& (0+255),f,b
  1254  00114A                     
  1255                           ; BSR set to: 0
  1256                           ;linked_list.c: 37:                 temp.delay = temp.delay - array[pre].delay;
  1257  00114A  C09D  F068         	movff	ADD_NODE@pre,___wmul@multiplier
  1258  00114E  C09E  F069         	movff	ADD_NODE@pre+1,___wmul@multiplier+1
  1259  001152  0E00               	movlw	0
  1260  001154  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1261  001156  0E0D               	movlw	13
  1262  001158  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1263  00115A  ECF5  F019         	call	___wmul	;wreg free
  1264  00115E  0EE2               	movlw	low (_array+2)
  1265  001160  0100               	movlb	0	; () banked
  1266  001162  2568               	addwf	?___wmul& (0+255),w,b
  1267  001164  6ED9               	movwf	fsr2l,c
  1268  001166  0E0C               	movlw	high (_array+2)
  1269  001168  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1270  00116A  6EDA               	movwf	fsr2h,c
  1271  00116C  CFDE F08D          	movff	postinc2,??_ADD_NODE
  1272  001170  CFDE F08E          	movff	postinc2,??_ADD_NODE+1
  1273  001174  CFDE F08F          	movff	postinc2,??_ADD_NODE+2
  1274  001178  CFDE F090          	movff	postinc2,??_ADD_NODE+3
  1275  00117C  518D               	movf	??_ADD_NODE& (0+255),w,b
  1276  00117E  5DA1               	subwf	(ADD_NODE@temp+2)& (0+255),w,b
  1277  001180  6FA1               	movwf	(ADD_NODE@temp+2)& (0+255),b
  1278  001182  518E               	movf	(??_ADD_NODE+1)& (0+255),w,b
  1279  001184  59A2               	subwfb	(ADD_NODE@temp+3)& (0+255),w,b
  1280  001186  6FA2               	movwf	(ADD_NODE@temp+3)& (0+255),b
  1281  001188  518F               	movf	(??_ADD_NODE+2)& (0+255),w,b
  1282  00118A  59A3               	subwfb	(ADD_NODE@temp+4)& (0+255),w,b
  1283  00118C  6FA3               	movwf	(ADD_NODE@temp+4)& (0+255),b
  1284  00118E  5190               	movf	(??_ADD_NODE+3)& (0+255),w,b
  1285  001190  59A4               	subwfb	(ADD_NODE@temp+5)& (0+255),w,b
  1286  001192  6FA4               	movwf	(ADD_NODE@temp+5)& (0+255),b
  1287  001194                     l2853:
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;linked_list.c: 32:             while (loop<no_funcs && temp.delay >= array[loc].delay)
  1291  001194  51E8               	movf	_no_funcs& (0+255),w,b
  1292  001196  5D99               	subwf	ADD_NODE@loop& (0+255),w,b
  1293  001198  519A               	movf	(ADD_NODE@loop+1)& (0+255),w,b
  1294  00119A  0A80               	xorlw	128
  1295  00119C  6F8D               	movwf	??_ADD_NODE& (0+255),b
  1296  00119E  51E9               	movf	(_no_funcs+1)& (0+255),w,b
  1297  0011A0  0A80               	xorlw	128
  1298  0011A2  598D               	subwfb	??_ADD_NODE& (0+255),w,b
  1299  0011A4  B0D8               	btfsc	status,0,c
  1300  0011A6  EFD7  F008         	goto	u1921
  1301  0011AA  EFD9  F008         	goto	u1920
  1302  0011AE                     u1921:
  1303  0011AE  EFFD  F008         	goto	l2857
  1304  0011B2                     u1920:
  1305  0011B2                     
  1306                           ; BSR set to: 0
  1307  0011B2  C0AC  F068         	movff	ADD_NODE@loc,___wmul@multiplier
  1308  0011B6  C0AD  F069         	movff	ADD_NODE@loc+1,___wmul@multiplier+1
  1309  0011BA  0E00               	movlw	0
  1310  0011BC  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1311  0011BE  0E0D               	movlw	13
  1312  0011C0  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1313  0011C2  ECF5  F019         	call	___wmul	;wreg free
  1314  0011C6  0EE2               	movlw	low (_array+2)
  1315  0011C8  0100               	movlb	0	; () banked
  1316  0011CA  2568               	addwf	?___wmul& (0+255),w,b
  1317  0011CC  6ED9               	movwf	fsr2l,c
  1318  0011CE  0E0C               	movlw	high (_array+2)
  1319  0011D0  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1320  0011D2  6EDA               	movwf	fsr2h,c
  1321  0011D4  50DE               	movf	postinc2,w,c
  1322  0011D6  5DA1               	subwf	(ADD_NODE@temp+2)& (0+255),w,b
  1323  0011D8  50DE               	movf	postinc2,w,c
  1324  0011DA  59A2               	subwfb	(ADD_NODE@temp+3)& (0+255),w,b
  1325  0011DC  50DE               	movf	postinc2,w,c
  1326  0011DE  59A3               	subwfb	(ADD_NODE@temp+4)& (0+255),w,b
  1327  0011E0  51A4               	movf	(ADD_NODE@temp+5)& (0+255),w,b
  1328  0011E2  0A80               	xorlw	128
  1329  0011E4  6F91               	movwf	(??_ADD_NODE+4)& (0+255),b
  1330  0011E6  50DE               	movf	postinc2,w,c
  1331  0011E8  0A80               	xorlw	128
  1332  0011EA  5991               	subwfb	(??_ADD_NODE+4)& (0+255),w,b
  1333  0011EC  B0D8               	btfsc	status,0,c
  1334  0011EE  EFFB  F008         	goto	u1931
  1335  0011F2  EFFD  F008         	goto	u1930
  1336  0011F6                     u1931:
  1337  0011F6  EF8A  F008         	goto	l307
  1338  0011FA                     u1930:
  1339  0011FA                     l2857:
  1340                           
  1341                           ; BSR set to: 0
  1342                           ;linked_list.c: 39:             if (loc == head)
  1343  0011FA  51F1               	movf	_head& (0+255),w,b
  1344  0011FC  19AC               	xorwf	ADD_NODE@loc& (0+255),w,b
  1345  0011FE  E107               	bnz	u1941
  1346  001200  51F2               	movf	(_head+1)& (0+255),w,b
  1347  001202  19AD               	xorwf	(ADD_NODE@loc+1)& (0+255),w,b
  1348  001204  A4D8               	btfss	status,2,c
  1349  001206  EF07  F009         	goto	u1941
  1350  00120A  EF09  F009         	goto	u1940
  1351  00120E                     u1941:
  1352  00120E  EFA0  F009         	goto	l2869
  1353  001212                     u1940:
  1354  001212                     
  1355                           ; BSR set to: 0
  1356                           ;linked_list.c: 40:             {;linked_list.c: 41:                 add(temp , index);
  1357  001212  EE20  F09F         	lfsr	2,ADD_NODE@temp
  1358  001216  EE00  F06E         	lfsr	0,add@temp
  1359  00121A  0E0C               	movlw	12
  1360  00121C                     u1951:
  1361  00121C  CFDB FFEB          	movff	plusw2,plusw0
  1362  001220  06E8               	decf	wreg,f,c
  1363  001222  E2FC               	bc	u1951
  1364  001224  C0AE  F07B         	movff	ADD_NODE@index,add@index
  1365  001228  C0AF  F07C         	movff	ADD_NODE@index+1,add@index+1
  1366  00122C  ECC2  F012         	call	_add	;wreg free
  1367  001230                     
  1368                           ;linked_list.c: 42:                 array[index].next = head;
  1369  001230  C0AE  F068         	movff	ADD_NODE@index,___wmul@multiplier
  1370  001234  C0AF  F069         	movff	ADD_NODE@index+1,___wmul@multiplier+1
  1371  001238  0E00               	movlw	0
  1372  00123A  0100               	movlb	0	; () banked
  1373  00123C  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1374  00123E  0E0D               	movlw	13
  1375  001240  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1376  001242  ECF5  F019         	call	___wmul	;wreg free
  1377  001246  0EE0               	movlw	low _array
  1378  001248  0100               	movlb	0	; () banked
  1379  00124A  2568               	addwf	?___wmul& (0+255),w,b
  1380  00124C  6ED9               	movwf	fsr2l,c
  1381  00124E  0E0C               	movlw	high _array
  1382  001250  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1383  001252  6EDA               	movwf	fsr2h,c
  1384  001254  C0F1  FFDE         	movff	_head,postinc2
  1385  001258  C0F2  FFDD         	movff	_head+1,postdec2
  1386  00125C                     
  1387                           ; BSR set to: 0
  1388                           ;linked_list.c: 43:                 head = index;
  1389  00125C  C0AE  F0F1         	movff	ADD_NODE@index,_head
  1390  001260  C0AF  F0F2         	movff	ADD_NODE@index+1,_head+1
  1391  001264                     
  1392                           ; BSR set to: 0
  1393                           ;linked_list.c: 44:                 int next = array[index].next;
  1394  001264  C0AE  F068         	movff	ADD_NODE@index,___wmul@multiplier
  1395  001268  C0AF  F069         	movff	ADD_NODE@index+1,___wmul@multiplier+1
  1396  00126C  0E00               	movlw	0
  1397  00126E  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1398  001270  0E0D               	movlw	13
  1399  001272  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1400  001274  ECF5  F019         	call	___wmul	;wreg free
  1401  001278  0EE0               	movlw	low _array
  1402  00127A  0100               	movlb	0	; () banked
  1403  00127C  2568               	addwf	?___wmul& (0+255),w,b
  1404  00127E  6ED9               	movwf	fsr2l,c
  1405  001280  0E0C               	movlw	high _array
  1406  001282  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1407  001284  6EDA               	movwf	fsr2h,c
  1408  001286  CFDE F09B          	movff	postinc2,ADD_NODE@next
  1409  00128A  CFDD F09C          	movff	postdec2,ADD_NODE@next+1
  1410  00128E                     
  1411                           ; BSR set to: 0
  1412                           ;linked_list.c: 45:                 array[next].delay = array[next].delay - array[index]
      +                          .delay;
  1413  00128E  C0AE  F068         	movff	ADD_NODE@index,___wmul@multiplier
  1414  001292  C0AF  F069         	movff	ADD_NODE@index+1,___wmul@multiplier+1
  1415  001296  0E00               	movlw	0
  1416  001298  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1417  00129A  0E0D               	movlw	13
  1418  00129C  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1419  00129E  ECF5  F019         	call	___wmul	;wreg free
  1420  0012A2  0EE2               	movlw	low (_array+2)
  1421  0012A4  0100               	movlb	0	; () banked
  1422  0012A6  2568               	addwf	?___wmul& (0+255),w,b
  1423  0012A8  6ED9               	movwf	fsr2l,c
  1424  0012AA  0E0C               	movlw	high (_array+2)
  1425  0012AC  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1426  0012AE  6EDA               	movwf	fsr2h,c
  1427  0012B0  CFDE F08D          	movff	postinc2,??_ADD_NODE
  1428  0012B4  CFDE F08E          	movff	postinc2,??_ADD_NODE+1
  1429  0012B8  CFDE F08F          	movff	postinc2,??_ADD_NODE+2
  1430  0012BC  CFDE F090          	movff	postinc2,??_ADD_NODE+3
  1431  0012C0  C09B  F068         	movff	ADD_NODE@next,___wmul@multiplier
  1432  0012C4  C09C  F069         	movff	ADD_NODE@next+1,___wmul@multiplier+1
  1433  0012C8  0E00               	movlw	0
  1434  0012CA  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1435  0012CC  0E0D               	movlw	13
  1436  0012CE  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1437  0012D0  ECF5  F019         	call	___wmul	;wreg free
  1438  0012D4  0EE2               	movlw	low (_array+2)
  1439  0012D6  0100               	movlb	0	; () banked
  1440  0012D8  2568               	addwf	?___wmul& (0+255),w,b
  1441  0012DA  6ED9               	movwf	fsr2l,c
  1442  0012DC  0E0C               	movlw	high (_array+2)
  1443  0012DE  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1444  0012E0  6EDA               	movwf	fsr2h,c
  1445  0012E2  CFDE F091          	movff	postinc2,??_ADD_NODE+4
  1446  0012E6  CFDE F092          	movff	postinc2,??_ADD_NODE+5
  1447  0012EA  CFDE F093          	movff	postinc2,??_ADD_NODE+6
  1448  0012EE  CFDE F094          	movff	postinc2,??_ADD_NODE+7
  1449  0012F2  518D               	movf	??_ADD_NODE& (0+255),w,b
  1450  0012F4  5D91               	subwf	(??_ADD_NODE+4)& (0+255),w,b
  1451  0012F6  6F95               	movwf	(??_ADD_NODE+8)& (0+255),b
  1452  0012F8  518E               	movf	(??_ADD_NODE+1)& (0+255),w,b
  1453  0012FA  5992               	subwfb	(??_ADD_NODE+5)& (0+255),w,b
  1454  0012FC  6F96               	movwf	(??_ADD_NODE+9)& (0+255),b
  1455  0012FE  518F               	movf	(??_ADD_NODE+2)& (0+255),w,b
  1456  001300  5993               	subwfb	(??_ADD_NODE+6)& (0+255),w,b
  1457  001302  6F97               	movwf	(??_ADD_NODE+10)& (0+255),b
  1458  001304  5190               	movf	(??_ADD_NODE+3)& (0+255),w,b
  1459  001306  5994               	subwfb	(??_ADD_NODE+7)& (0+255),w,b
  1460  001308  6F98               	movwf	(??_ADD_NODE+11)& (0+255),b
  1461  00130A  C09B  F068         	movff	ADD_NODE@next,___wmul@multiplier
  1462  00130E  C09C  F069         	movff	ADD_NODE@next+1,___wmul@multiplier+1
  1463  001312  0E00               	movlw	0
  1464  001314  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1465  001316  0E0D               	movlw	13
  1466  001318  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1467  00131A  ECF5  F019         	call	___wmul	;wreg free
  1468  00131E  0EE2               	movlw	low (_array+2)
  1469  001320  0100               	movlb	0	; () banked
  1470  001322  2568               	addwf	?___wmul& (0+255),w,b
  1471  001324  6ED9               	movwf	fsr2l,c
  1472  001326  0E0C               	movlw	high (_array+2)
  1473  001328  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1474  00132A  6EDA               	movwf	fsr2h,c
  1475  00132C  C095  FFDE         	movff	??_ADD_NODE+8,postinc2
  1476  001330  C096  FFDE         	movff	??_ADD_NODE+9,postinc2
  1477  001334  C097  FFDE         	movff	??_ADD_NODE+10,postinc2
  1478  001338  C098  FFDE         	movff	??_ADD_NODE+11,postinc2
  1479                           
  1480                           ;linked_list.c: 46:             }
  1481  00133C  EF76  F008         	goto	l2839
  1482  001340                     l2869:
  1483                           
  1484                           ; BSR set to: 0
  1485  001340  29AC               	incf	ADD_NODE@loc& (0+255),w,b
  1486  001342  E108               	bnz	u1960
  1487  001344  29AD               	incf	(ADD_NODE@loc+1)& (0+255),w,b
  1488  001346  B4D8               	btfsc	status,2,c
  1489  001348  EFA8  F009         	goto	u1961
  1490  00134C  EFAA  F009         	goto	u1960
  1491  001350                     u1961:
  1492  001350  EF3D  F00A         	goto	l2879
  1493  001354                     u1960:
  1494  001354                     
  1495                           ; BSR set to: 0
  1496                           ;linked_list.c: 48:                 add(temp , index);
  1497  001354  EE20  F09F         	lfsr	2,ADD_NODE@temp
  1498  001358  EE00  F06E         	lfsr	0,add@temp
  1499  00135C  0E0C               	movlw	12
  1500  00135E                     u1971:
  1501  00135E  CFDB FFEB          	movff	plusw2,plusw0
  1502  001362  06E8               	decf	wreg,f,c
  1503  001364  E2FC               	bc	u1971
  1504  001366  C0AE  F07B         	movff	ADD_NODE@index,add@index
  1505  00136A  C0AF  F07C         	movff	ADD_NODE@index+1,add@index+1
  1506  00136E  ECC2  F012         	call	_add	;wreg free
  1507  001372                     
  1508                           ;linked_list.c: 49:                 array[pre].next = index;
  1509  001372  C09D  F068         	movff	ADD_NODE@pre,___wmul@multiplier
  1510  001376  C09E  F069         	movff	ADD_NODE@pre+1,___wmul@multiplier+1
  1511  00137A  0E00               	movlw	0
  1512  00137C  0100               	movlb	0	; () banked
  1513  00137E  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1514  001380  0E0D               	movlw	13
  1515  001382  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1516  001384  ECF5  F019         	call	___wmul	;wreg free
  1517  001388  0EE0               	movlw	low _array
  1518  00138A  0100               	movlb	0	; () banked
  1519  00138C  2568               	addwf	?___wmul& (0+255),w,b
  1520  00138E  6ED9               	movwf	fsr2l,c
  1521  001390  0E0C               	movlw	high _array
  1522  001392  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1523  001394  6EDA               	movwf	fsr2h,c
  1524  001396  C0AE  FFDE         	movff	ADD_NODE@index,postinc2
  1525  00139A  C0AF  FFDD         	movff	ADD_NODE@index+1,postdec2
  1526  00139E                     
  1527                           ; BSR set to: 0
  1528                           ;linked_list.c: 50:                 array[index].next = loc;
  1529  00139E  C0AE  F068         	movff	ADD_NODE@index,___wmul@multiplier
  1530  0013A2  C0AF  F069         	movff	ADD_NODE@index+1,___wmul@multiplier+1
  1531  0013A6  0E00               	movlw	0
  1532  0013A8  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1533  0013AA  0E0D               	movlw	13
  1534  0013AC  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1535  0013AE  ECF5  F019         	call	___wmul	;wreg free
  1536  0013B2  0EE0               	movlw	low _array
  1537  0013B4  0100               	movlb	0	; () banked
  1538  0013B6  2568               	addwf	?___wmul& (0+255),w,b
  1539  0013B8  6ED9               	movwf	fsr2l,c
  1540  0013BA  0E0C               	movlw	high _array
  1541  0013BC  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1542  0013BE  6EDA               	movwf	fsr2h,c
  1543  0013C0  C0AC  FFDE         	movff	ADD_NODE@loc,postinc2
  1544  0013C4  C0AD  FFDD         	movff	ADD_NODE@loc+1,postdec2
  1545  0013C8                     
  1546                           ; BSR set to: 0
  1547                           ;linked_list.c: 51:                 array[loc].delay = array[loc].delay - array[index].d
      +                          elay;
  1548  0013C8  C0AE  F068         	movff	ADD_NODE@index,___wmul@multiplier
  1549  0013CC  C0AF  F069         	movff	ADD_NODE@index+1,___wmul@multiplier+1
  1550  0013D0  0E00               	movlw	0
  1551  0013D2  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1552  0013D4  0E0D               	movlw	13
  1553  0013D6  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1554  0013D8  ECF5  F019         	call	___wmul	;wreg free
  1555  0013DC  0EE2               	movlw	low (_array+2)
  1556  0013DE  0100               	movlb	0	; () banked
  1557  0013E0  2568               	addwf	?___wmul& (0+255),w,b
  1558  0013E2  6ED9               	movwf	fsr2l,c
  1559  0013E4  0E0C               	movlw	high (_array+2)
  1560  0013E6  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1561  0013E8  6EDA               	movwf	fsr2h,c
  1562  0013EA  CFDE F08D          	movff	postinc2,??_ADD_NODE
  1563  0013EE  CFDE F08E          	movff	postinc2,??_ADD_NODE+1
  1564  0013F2  CFDE F08F          	movff	postinc2,??_ADD_NODE+2
  1565  0013F6  CFDE F090          	movff	postinc2,??_ADD_NODE+3
  1566  0013FA  C0AC  F068         	movff	ADD_NODE@loc,___wmul@multiplier
  1567  0013FE  C0AD  F069         	movff	ADD_NODE@loc+1,___wmul@multiplier+1
  1568  001402  0E00               	movlw	0
  1569  001404  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1570  001406  0E0D               	movlw	13
  1571  001408  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1572  00140A  ECF5  F019         	call	___wmul	;wreg free
  1573  00140E  0EE2               	movlw	low (_array+2)
  1574  001410  0100               	movlb	0	; () banked
  1575  001412  2568               	addwf	?___wmul& (0+255),w,b
  1576  001414  6ED9               	movwf	fsr2l,c
  1577  001416  0E0C               	movlw	high (_array+2)
  1578  001418  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1579  00141A  6EDA               	movwf	fsr2h,c
  1580  00141C  CFDE F091          	movff	postinc2,??_ADD_NODE+4
  1581  001420  CFDE F092          	movff	postinc2,??_ADD_NODE+5
  1582  001424  CFDE F093          	movff	postinc2,??_ADD_NODE+6
  1583  001428  CFDE F094          	movff	postinc2,??_ADD_NODE+7
  1584  00142C  518D               	movf	??_ADD_NODE& (0+255),w,b
  1585  00142E  5D91               	subwf	(??_ADD_NODE+4)& (0+255),w,b
  1586  001430  6F95               	movwf	(??_ADD_NODE+8)& (0+255),b
  1587  001432  518E               	movf	(??_ADD_NODE+1)& (0+255),w,b
  1588  001434  5992               	subwfb	(??_ADD_NODE+5)& (0+255),w,b
  1589  001436  6F96               	movwf	(??_ADD_NODE+9)& (0+255),b
  1590  001438  518F               	movf	(??_ADD_NODE+2)& (0+255),w,b
  1591  00143A  5993               	subwfb	(??_ADD_NODE+6)& (0+255),w,b
  1592  00143C  6F97               	movwf	(??_ADD_NODE+10)& (0+255),b
  1593  00143E  5190               	movf	(??_ADD_NODE+3)& (0+255),w,b
  1594  001440  5994               	subwfb	(??_ADD_NODE+7)& (0+255),w,b
  1595  001442  6F98               	movwf	(??_ADD_NODE+11)& (0+255),b
  1596  001444  C0AC  F068         	movff	ADD_NODE@loc,___wmul@multiplier
  1597  001448  C0AD  F069         	movff	ADD_NODE@loc+1,___wmul@multiplier+1
  1598  00144C  0E00               	movlw	0
  1599  00144E  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1600  001450  0E0D               	movlw	13
  1601  001452  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1602  001454  ECF5  F019         	call	___wmul	;wreg free
  1603  001458  0EE2               	movlw	low (_array+2)
  1604  00145A  0100               	movlb	0	; () banked
  1605  00145C  2568               	addwf	?___wmul& (0+255),w,b
  1606  00145E  6ED9               	movwf	fsr2l,c
  1607  001460  0E0C               	movlw	high (_array+2)
  1608  001462  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1609  001464  6EDA               	movwf	fsr2h,c
  1610  001466  C095  FFDE         	movff	??_ADD_NODE+8,postinc2
  1611  00146A  C096  FFDE         	movff	??_ADD_NODE+9,postinc2
  1612  00146E  C097  FFDE         	movff	??_ADD_NODE+10,postinc2
  1613  001472  C098  FFDE         	movff	??_ADD_NODE+11,postinc2
  1614                           
  1615                           ;linked_list.c: 53:             }
  1616  001476  EF76  F008         	goto	l2839
  1617  00147A                     l2879:
  1618                           
  1619                           ; BSR set to: 0
  1620  00147A  29AC               	incf	ADD_NODE@loc& (0+255),w,b
  1621  00147C  E106               	bnz	u1981
  1622  00147E  29AD               	incf	(ADD_NODE@loc+1)& (0+255),w,b
  1623  001480  A4D8               	btfss	status,2,c
  1624  001482  EF45  F00A         	goto	u1981
  1625  001486  EF47  F00A         	goto	u1980
  1626  00148A                     u1981:
  1627  00148A  EF6E  F00A         	goto	l312
  1628  00148E                     u1980:
  1629  00148E                     
  1630                           ; BSR set to: 0
  1631                           ;linked_list.c: 55:             {;linked_list.c: 56:                 add(temp , index);
  1632  00148E  EE20  F09F         	lfsr	2,ADD_NODE@temp
  1633  001492  EE00  F06E         	lfsr	0,add@temp
  1634  001496  0E0C               	movlw	12
  1635  001498                     u1991:
  1636  001498  CFDB FFEB          	movff	plusw2,plusw0
  1637  00149C  06E8               	decf	wreg,f,c
  1638  00149E  E2FC               	bc	u1991
  1639  0014A0  C0AE  F07B         	movff	ADD_NODE@index,add@index
  1640  0014A4  C0AF  F07C         	movff	ADD_NODE@index+1,add@index+1
  1641  0014A8  ECC2  F012         	call	_add	;wreg free
  1642  0014AC                     
  1643                           ;linked_list.c: 57:                 array[pre].next = index;
  1644  0014AC  C09D  F068         	movff	ADD_NODE@pre,___wmul@multiplier
  1645  0014B0  C09E  F069         	movff	ADD_NODE@pre+1,___wmul@multiplier+1
  1646  0014B4  0E00               	movlw	0
  1647  0014B6  0100               	movlb	0	; () banked
  1648  0014B8  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1649  0014BA  0E0D               	movlw	13
  1650  0014BC  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1651  0014BE  ECF5  F019         	call	___wmul	;wreg free
  1652  0014C2  0EE0               	movlw	low _array
  1653  0014C4  0100               	movlb	0	; () banked
  1654  0014C6  2568               	addwf	?___wmul& (0+255),w,b
  1655  0014C8  6ED9               	movwf	fsr2l,c
  1656  0014CA  0E0C               	movlw	high _array
  1657  0014CC  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1658  0014CE  6EDA               	movwf	fsr2h,c
  1659  0014D0  C0AE  FFDE         	movff	ADD_NODE@index,postinc2
  1660  0014D4  C0AF  FFDD         	movff	ADD_NODE@index+1,postdec2
  1661  0014D8  EF76  F008         	goto	l2839
  1662  0014DC                     l312:
  1663                           
  1664                           ; BSR set to: 0
  1665  0014DC  EF76  F008         	goto	l2839
  1666  0014E0                     l302:
  1667                           
  1668                           ; BSR set to: 0
  1669  0014E0  6982               	setf	?_ADD_NODE& (0+255),b
  1670  0014E2  6983               	setf	(?_ADD_NODE+1)& (0+255),b
  1671  0014E4                     l304:
  1672  0014E4  0012               	return		;funcret
  1673  0014E6                     __end_of_ADD_NODE:
  1674                           	opt callstack 0
  1675                           
  1676 ;; *************** function _return_index *****************
  1677 ;; Defined at:
  1678 ;;		line 115 in file "linked_list.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;		None
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  i               2   12[BANK0 ] int 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  2    8[BANK0 ] int 
  1685 ;; Registers used:
  1686 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1692 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1695 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1696 ;;Total ram usage:        6 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    6
  1699 ;; This function calls:
  1700 ;;		Nothing
  1701 ;; This function is called by:
  1702 ;;		_ADD_NODE
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text4
  1707  002CFA                     __ptext4:
  1708                           	opt callstack 0
  1709  002CFA                     _return_index:
  1710                           	opt callstack 22
  1711  002CFA                     
  1712                           ;linked_list.c: 117:     for (int i = 0 ; i<20 ; i++)
  1713  002CFA  0E00               	movlw	0
  1714  002CFC  0100               	movlb	0	; () banked
  1715  002CFE  6F6D               	movwf	(return_index@i+1)& (0+255),b
  1716  002D00  0E00               	movlw	0
  1717  002D02  6F6C               	movwf	return_index@i& (0+255),b
  1718  002D04                     l2567:
  1719                           
  1720                           ; BSR set to: 0
  1721                           ;linked_list.c: 118:         if (check_index[i] ==0)
  1722  002D04  90D8               	bcf	status,0,c
  1723  002D06  356C               	rlcf	return_index@i& (0+255),w,b
  1724  002D08  6ED9               	movwf	fsr2l,c
  1725  002D0A  356D               	rlcf	(return_index@i+1)& (0+255),w,b
  1726  002D0C  6EDA               	movwf	fsr2h,c
  1727  002D0E  0E00               	movlw	low _check_index
  1728  002D10  26D9               	addwf	fsr2l,f,c
  1729  002D12  0E01               	movlw	high _check_index
  1730  002D14  22DA               	addwfc	fsr2h,f,c
  1731  002D16  50DE               	movf	postinc2,w,c
  1732  002D18  10DE               	iorwf	postinc2,w,c
  1733  002D1A  A4D8               	btfss	status,2,c
  1734  002D1C  EF92  F016         	goto	u1481
  1735  002D20  EF94  F016         	goto	u1480
  1736  002D24                     u1481:
  1737  002D24  EFA9  F016         	goto	l2577
  1738  002D28                     u1480:
  1739  002D28                     
  1740                           ; BSR set to: 0
  1741                           ;linked_list.c: 119:         {;linked_list.c: 120:             check_index[i]=1;
  1742  002D28  90D8               	bcf	status,0,c
  1743  002D2A  356C               	rlcf	return_index@i& (0+255),w,b
  1744  002D2C  6ED9               	movwf	fsr2l,c
  1745  002D2E  356D               	rlcf	(return_index@i+1)& (0+255),w,b
  1746  002D30  6EDA               	movwf	fsr2h,c
  1747  002D32  0E00               	movlw	low _check_index
  1748  002D34  26D9               	addwf	fsr2l,f,c
  1749  002D36  0E01               	movlw	high _check_index
  1750  002D38  22DA               	addwfc	fsr2h,f,c
  1751  002D3A  0E01               	movlw	1
  1752  002D3C  6EDE               	movwf	postinc2,c
  1753  002D3E  0E00               	movlw	0
  1754  002D40  6EDD               	movwf	postdec2,c
  1755  002D42                     
  1756                           ; BSR set to: 0
  1757                           ;linked_list.c: 121:             no_funcs++;
  1758  002D42  4BE8               	infsnz	_no_funcs& (0+255),f,b
  1759  002D44  2BE9               	incf	(_no_funcs+1)& (0+255),f,b
  1760  002D46                     
  1761                           ; BSR set to: 0
  1762                           ;linked_list.c: 122:             return i;
  1763  002D46  C06C  F068         	movff	return_index@i,?_return_index
  1764  002D4A  C06D  F069         	movff	return_index@i+1,?_return_index+1
  1765  002D4E  EFBB  F016         	goto	l340
  1766  002D52                     l2577:
  1767                           
  1768                           ; BSR set to: 0
  1769  002D52  4B6C               	infsnz	return_index@i& (0+255),f,b
  1770  002D54  2B6D               	incf	(return_index@i+1)& (0+255),f,b
  1771  002D56                     
  1772                           ; BSR set to: 0
  1773  002D56  BF6D               	btfsc	(return_index@i+1)& (0+255),7,b
  1774  002D58  EFB7  F016         	goto	u1491
  1775  002D5C  516D               	movf	(return_index@i+1)& (0+255),w,b
  1776  002D5E  E109               	bnz	u1490
  1777  002D60  0E14               	movlw	20
  1778  002D62  5D6C               	subwf	return_index@i& (0+255),w,b
  1779  002D64  A0D8               	btfss	status,0,c
  1780  002D66  EFB7  F016         	goto	u1491
  1781  002D6A  EFB9  F016         	goto	u1490
  1782  002D6E                     u1491:
  1783  002D6E  EF82  F016         	goto	l2567
  1784  002D72                     u1490:
  1785  002D72                     
  1786                           ; BSR set to: 0
  1787                           ;linked_list.c: 124:     return -1;
  1788  002D72  6968               	setf	?_return_index& (0+255),b
  1789  002D74  6969               	setf	(?_return_index+1)& (0+255),b
  1790  002D76                     l340:
  1791                           
  1792                           ; BSR set to: 0
  1793  002D76  0012               	return		;funcret
  1794  002D78                     __end_of_return_index:
  1795                           	opt callstack 0
  1796                           
  1797 ;; *************** function _create_node *****************
  1798 ;; Defined at:
  1799 ;;		line 137 in file "linked_list.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  delay           4    8[BANK0 ] long 
  1802 ;;  period          4   12[BANK0 ] long 
  1803 ;;  function        3   16[BANK0 ] PTR FTN()void 
  1804 ;;		 -> get_temp_humid(1), check_button(1), heater_heatpumper(1), NULL(0), 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  temp           13   21[BANK0 ] struct Node
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  13    8[BANK0 ] struct Node
  1809 ;; Registers used:
  1810 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1816 ;;      Params:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;Total ram usage:       26 bytes
  1821 ;; Hardware stack levels used:    1
  1822 ;; Hardware stack levels required when called:    6
  1823 ;; This function calls:
  1824 ;;		Nothing
  1825 ;; This function is called by:
  1826 ;;		_ADD_NODE
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text5
  1831  003240                     __ptext5:
  1832                           	opt callstack 0
  1833  003240                     _create_node:
  1834                           	opt callstack 22
  1835  003240                     
  1836                           ;linked_list.c: 138:     struct Node temp;;linked_list.c: 139:     temp.next = -1;
  1837  003240  0100               	movlb	0	; () banked
  1838  003242  6975               	setf	create_node@temp& (0+255),b
  1839  003244  6976               	setf	(create_node@temp+1)& (0+255),b
  1840                           
  1841                           ;linked_list.c: 140:     temp.delay = delay;
  1842  003246  C068  F077         	movff	create_node@delay,create_node@temp+2
  1843  00324A  C069  F078         	movff	create_node@delay+1,create_node@temp+3
  1844  00324E  C06A  F079         	movff	create_node@delay+2,create_node@temp+4
  1845  003252  C06B  F07A         	movff	create_node@delay+3,create_node@temp+5
  1846                           
  1847                           ;linked_list.c: 141:     temp.period = period;
  1848  003256  C06C  F07B         	movff	create_node@period,create_node@temp+6
  1849  00325A  C06D  F07C         	movff	create_node@period+1,create_node@temp+7
  1850  00325E  C06E  F07D         	movff	create_node@period+2,create_node@temp+8
  1851  003262  C06F  F07E         	movff	create_node@period+3,create_node@temp+9
  1852  003266                     
  1853                           ; BSR set to: 0
  1854                           ;linked_list.c: 142:     temp.function = function;
  1855  003266  C070  F07F         	movff	create_node@function,create_node@temp+10
  1856  00326A  C071  F080         	movff	create_node@function+1,create_node@temp+11
  1857  00326E  C072  F081         	movff	create_node@function+2,create_node@temp+12
  1858  003272                     
  1859                           ; BSR set to: 0
  1860                           ;linked_list.c: 143:     return temp;
  1861  003272  EE20  F075         	lfsr	2,create_node@temp
  1862  003276  EE00  F068         	lfsr	0,?_create_node
  1863  00327A  0E0C               	movlw	12
  1864  00327C                     u1471:
  1865  00327C  CFDB FFEB          	movff	plusw2,plusw0
  1866  003280  06E8               	decf	wreg,f,c
  1867  003282  E2FC               	bc	u1471
  1868  003284                     
  1869                           ; BSR set to: 0
  1870  003284  0012               	return		;funcret
  1871  003286                     __end_of_create_node:
  1872                           	opt callstack 0
  1873                           
  1874 ;; *************** function _add *****************
  1875 ;; Defined at:
  1876 ;;		line 107 in file "linked_list.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;  temp           13   14[BANK0 ] struct Node
  1879 ;;  index           2   27[BANK0 ] int 
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;		None
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  1    wreg      void 
  1884 ;; Registers used:
  1885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1891 ;;      Params:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1894 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1895 ;;Total ram usage:       15 bytes
  1896 ;; Hardware stack levels used:    1
  1897 ;; Hardware stack levels required when called:    7
  1898 ;; This function calls:
  1899 ;;		___wmul
  1900 ;; This function is called by:
  1901 ;;		_ADD_NODE
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           	psect	text6
  1906  002584                     __ptext6:
  1907                           	opt callstack 0
  1908  002584                     _add:
  1909                           	opt callstack 21
  1910  002584                     
  1911                           ;linked_list.c: 107: void add(struct Node temp , int index);linked_list.c: 108: {;linked
      +                          _list.c: 109:     array[index].next = temp.next;
  1912  002584  C07B  F068         	movff	add@index,___wmul@multiplier
  1913  002588  C07C  F069         	movff	add@index+1,___wmul@multiplier+1
  1914  00258C  0E00               	movlw	0
  1915  00258E  0100               	movlb	0	; () banked
  1916  002590  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1917  002592  0E0D               	movlw	13
  1918  002594  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1919  002596  ECF5  F019         	call	___wmul	;wreg free
  1920  00259A  0EE0               	movlw	low _array
  1921  00259C  0100               	movlb	0	; () banked
  1922  00259E  2568               	addwf	?___wmul& (0+255),w,b
  1923  0025A0  6ED9               	movwf	fsr2l,c
  1924  0025A2  0E0C               	movlw	high _array
  1925  0025A4  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1926  0025A6  6EDA               	movwf	fsr2h,c
  1927  0025A8  C06E  FFDE         	movff	add@temp,postinc2
  1928  0025AC  C06F  FFDD         	movff	add@temp+1,postdec2
  1929  0025B0                     
  1930                           ; BSR set to: 0
  1931                           ;linked_list.c: 110:  array[index].delay = temp.delay;
  1932  0025B0  EE20  F070         	lfsr	2,add@temp+2
  1933  0025B4  C07B  F068         	movff	add@index,___wmul@multiplier
  1934  0025B8  C07C  F069         	movff	add@index+1,___wmul@multiplier+1
  1935  0025BC  0E00               	movlw	0
  1936  0025BE  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1937  0025C0  0E0D               	movlw	13
  1938  0025C2  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1939  0025C4  ECF5  F019         	call	___wmul	;wreg free
  1940  0025C8  0EE2               	movlw	low (_array+2)
  1941  0025CA  0100               	movlb	0	; () banked
  1942  0025CC  2568               	addwf	?___wmul& (0+255),w,b
  1943  0025CE  6EE1               	movwf	fsr1l,c
  1944  0025D0  0E0C               	movlw	high (_array+2)
  1945  0025D2  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1946  0025D4  6EE2               	movwf	fsr1h,c
  1947  0025D6  CFDE FFE6          	movff	postinc2,postinc1
  1948  0025DA  CFDE FFE6          	movff	postinc2,postinc1
  1949  0025DE  CFDE FFE6          	movff	postinc2,postinc1
  1950  0025E2  CFDE FFE6          	movff	postinc2,postinc1
  1951  0025E6                     
  1952                           ; BSR set to: 0
  1953                           ;linked_list.c: 111:  array[index].period = temp.period;
  1954  0025E6  EE20  F074         	lfsr	2,add@temp+6
  1955  0025EA  C07B  F068         	movff	add@index,___wmul@multiplier
  1956  0025EE  C07C  F069         	movff	add@index+1,___wmul@multiplier+1
  1957  0025F2  0E00               	movlw	0
  1958  0025F4  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1959  0025F6  0E0D               	movlw	13
  1960  0025F8  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1961  0025FA  ECF5  F019         	call	___wmul	;wreg free
  1962  0025FE  0EE6               	movlw	low (_array+6)
  1963  002600  0100               	movlb	0	; () banked
  1964  002602  2568               	addwf	?___wmul& (0+255),w,b
  1965  002604  6EE1               	movwf	fsr1l,c
  1966  002606  0E0C               	movlw	high (_array+6)
  1967  002608  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1968  00260A  6EE2               	movwf	fsr1h,c
  1969  00260C  CFDE FFE6          	movff	postinc2,postinc1
  1970  002610  CFDE FFE6          	movff	postinc2,postinc1
  1971  002614  CFDE FFE6          	movff	postinc2,postinc1
  1972  002618  CFDE FFE6          	movff	postinc2,postinc1
  1973  00261C                     
  1974                           ; BSR set to: 0
  1975                           ;linked_list.c: 112:  array[index].function = temp.function;
  1976  00261C  EE20  F078         	lfsr	2,add@temp+10
  1977  002620  C07B  F068         	movff	add@index,___wmul@multiplier
  1978  002624  C07C  F069         	movff	add@index+1,___wmul@multiplier+1
  1979  002628  0E00               	movlw	0
  1980  00262A  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1981  00262C  0E0D               	movlw	13
  1982  00262E  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  1983  002630  ECF5  F019         	call	___wmul	;wreg free
  1984  002634  0EEA               	movlw	low (_array+10)
  1985  002636  0100               	movlb	0	; () banked
  1986  002638  2568               	addwf	?___wmul& (0+255),w,b
  1987  00263A  6EE1               	movwf	fsr1l,c
  1988  00263C  0E0C               	movlw	high (_array+10)
  1989  00263E  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  1990  002640  6EE2               	movwf	fsr1h,c
  1991  002642  CFDE FFE6          	movff	postinc2,postinc1
  1992  002646  CFDE FFE6          	movff	postinc2,postinc1
  1993  00264A  CFDE FFE6          	movff	postinc2,postinc1
  1994  00264E                     
  1995                           ; BSR set to: 0
  1996  00264E  0012               	return		;funcret
  1997  002650                     __end_of_add:
  1998                           	opt callstack 0
  1999                           
  2000 ;; *************** function _check_button *****************
  2001 ;; Defined at:
  2002 ;;		line 77 in file "./FUNCTIONS.h"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;		None
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;		None
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      void 
  2009 ;; Registers used:
  2010 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2020 ;;Total ram usage:        0 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; Hardware stack levels required when called:   11
  2023 ;; This function calls:
  2024 ;;		_LCDPutInst
  2025 ;;		___lwdiv
  2026 ;;		___lwmod
  2027 ;;		_printLCD_char
  2028 ;;		_printLCD_string
  2029 ;; This function is called by:
  2030 ;;		_main
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           	psect	text7
  2035  00194C                     __ptext7:
  2036                           	opt callstack 0
  2037  00194C                     _check_button:
  2038                           	opt callstack 19
  2039  00194C                     
  2040                           ;./FUNCTIONS.h: 79:     static int check_but_state = 0;;./FUNCTIONS.h: 80:     static in
      +                          t check_but_inc = 0;;./FUNCTIONS.h: 82:     if (state_but ==1 && check_but_state ==0)
  2041  00194C  0100               	movlb	0	; () banked
  2042  00194E  05D8               	decf	_state_but& (0+255),w,b
  2043  001950  11D9               	iorwf	(_state_but+1)& (0+255),w,b
  2044  001952  A4D8               	btfss	status,2,c
  2045  001954  EFAE  F00C         	goto	u2391
  2046  001958  EFB0  F00C         	goto	u2390
  2047  00195C                     u2391:
  2048  00195C  EF82  F00D         	goto	l3193
  2049  001960                     u2390:
  2050  001960                     
  2051                           ; BSR set to: 0
  2052  001960  51C6               	movf	check_button@check_but_state& (0+255),w,b
  2053  001962  11C7               	iorwf	(check_button@check_but_state+1)& (0+255),w,b
  2054  001964  A4D8               	btfss	status,2,c
  2055  001966  EFB7  F00C         	goto	u2401
  2056  00196A  EFB9  F00C         	goto	u2400
  2057  00196E                     u2401:
  2058  00196E  EF82  F00D         	goto	l3193
  2059  001972                     u2400:
  2060  001972                     
  2061                           ; BSR set to: 0
  2062                           ;./FUNCTIONS.h: 83:     {;./FUNCTIONS.h: 84:         if (state == TEMP)
  2063  001972  51EA               	movf	_state& (0+255),w,b
  2064  001974  A4D8               	btfss	status,2,c
  2065  001976  EFBF  F00C         	goto	u2411
  2066  00197A  EFC1  F00C         	goto	u2410
  2067  00197E                     u2411:
  2068  00197E  EF0D  F00D         	goto	l3165
  2069  001982                     u2410:
  2070  001982                     
  2071                           ; BSR set to: 0
  2072                           ;./FUNCTIONS.h: 85:         {;./FUNCTIONS.h: 86:             state = HUMID;
  2073  001982  0E01               	movlw	1
  2074  001984  6FEA               	movwf	_state& (0+255),b
  2075  001986                     
  2076                           ; BSR set to: 0
  2077                           ;./FUNCTIONS.h: 87:             LCDPutInst(0x01);
  2078  001986  0E01               	movlw	1
  2079  001988  ECDB  F017         	call	_LCDPutInst
  2080  00198C                     
  2081                           ;./FUNCTIONS.h: 88:             printLCD_string(0,"HUMID:");
  2082  00198C  0E00               	movlw	0
  2083  00198E  0100               	movlb	0	; () banked
  2084  001990  6F72               	movwf	(printLCD_string@line+1)& (0+255),b
  2085  001992  0E00               	movlw	0
  2086  001994  6F71               	movwf	printLCD_string@line& (0+255),b
  2087  001996  0E43               	movlw	low STR_5
  2088  001998  6F73               	movwf	printLCD_string@array& (0+255),b
  2089  00199A  0E10               	movlw	high STR_5
  2090  00199C  6F74               	movwf	(printLCD_string@array+1)& (0+255),b
  2091  00199E  EC85  F019         	call	_printLCD_string	;wreg free
  2092  0019A2                     
  2093                           ;./FUNCTIONS.h: 89:             printLCD_char(0 , 7 , MAX_HUMIDITY/10 + '0');
  2094  0019A2  0E00               	movlw	0
  2095  0019A4  0100               	movlb	0	; () banked
  2096  0019A6  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2097  0019A8  0E00               	movlw	0
  2098  0019AA  6F70               	movwf	printLCD_char@line& (0+255),b
  2099  0019AC  0E07               	movlw	7
  2100  0019AE  6F72               	movwf	printLCD_char@position& (0+255),b
  2101  0019B0  C0DC  F068         	movff	_MAX_HUMIDITY,___lwdiv@dividend
  2102  0019B4  C0DD  F069         	movff	_MAX_HUMIDITY+1,___lwdiv@dividend+1
  2103  0019B8  0E00               	movlw	0
  2104  0019BA  6F6B               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2105  0019BC  0E0A               	movlw	10
  2106  0019BE  6F6A               	movwf	___lwdiv@divisor& (0+255),b
  2107  0019C0  ECFB  F016         	call	___lwdiv	;wreg free
  2108  0019C4  0100               	movlb	0	; () banked
  2109  0019C6  5168               	movf	?___lwdiv& (0+255),w,b
  2110  0019C8  0F30               	addlw	48
  2111  0019CA  6F73               	movwf	printLCD_char@c& (0+255),b
  2112  0019CC  ECFA  F018         	call	_printLCD_char	;wreg free
  2113  0019D0                     
  2114                           ;./FUNCTIONS.h: 90:             printLCD_char(0 , 8 , MAX_HUMIDITY%10 + '0');
  2115  0019D0  0E00               	movlw	0
  2116  0019D2  0100               	movlb	0	; () banked
  2117  0019D4  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2118  0019D6  0E00               	movlw	0
  2119  0019D8  6F70               	movwf	printLCD_char@line& (0+255),b
  2120  0019DA  0E08               	movlw	8
  2121  0019DC  6F72               	movwf	printLCD_char@position& (0+255),b
  2122  0019DE  C0DC  F068         	movff	_MAX_HUMIDITY,___lwmod@dividend
  2123  0019E2  C0DD  F069         	movff	_MAX_HUMIDITY+1,___lwmod@dividend+1
  2124  0019E6  0E00               	movlw	0
  2125  0019E8  6F6B               	movwf	(___lwmod@divisor+1)& (0+255),b
  2126  0019EA  0E0A               	movlw	10
  2127  0019EC  6F6A               	movwf	___lwmod@divisor& (0+255),b
  2128  0019EE  EC10  F018         	call	___lwmod	;wreg free
  2129  0019F2  0100               	movlb	0	; () banked
  2130  0019F4  5168               	movf	?___lwmod& (0+255),w,b
  2131  0019F6  0F30               	addlw	48
  2132  0019F8  6F73               	movwf	printLCD_char@c& (0+255),b
  2133  0019FA  ECFA  F018         	call	_printLCD_char	;wreg free
  2134  0019FE                     
  2135                           ;./FUNCTIONS.h: 91:             printLCD_string(1 , "INCR:B0  NEXT:A0");
  2136  0019FE  0E00               	movlw	0
  2137  001A00  0100               	movlb	0	; () banked
  2138  001A02  6F72               	movwf	(printLCD_string@line+1)& (0+255),b
  2139  001A04  0E01               	movlw	1
  2140  001A06  6F71               	movwf	printLCD_string@line& (0+255),b
  2141  001A08  0E23               	movlw	low STR_4
  2142  001A0A  6F73               	movwf	printLCD_string@array& (0+255),b
  2143  001A0C  0E10               	movlw	high STR_4
  2144  001A0E  6F74               	movwf	(printLCD_string@array+1)& (0+255),b
  2145  001A10  EC85  F019         	call	_printLCD_string	;wreg free
  2146  001A14                     
  2147                           ;./FUNCTIONS.h: 92:             LATDbits.LATD1 = 0;
  2148  001A14  928C               	bcf	140,1,c	;volatile
  2149                           
  2150                           ;./FUNCTIONS.h: 93:         }
  2151  001A16  EF7B  F00D         	goto	l3191
  2152  001A1A                     l3165:
  2153                           
  2154                           ; BSR set to: 0
  2155  001A1A  05EA               	decf	_state& (0+255),w,b
  2156  001A1C  A4D8               	btfss	status,2,c
  2157  001A1E  EF13  F00D         	goto	u2421
  2158  001A22  EF15  F00D         	goto	u2420
  2159  001A26                     u2421:
  2160  001A26  EF28  F00D         	goto	l3175
  2161  001A2A                     u2420:
  2162  001A2A                     
  2163                           ; BSR set to: 0
  2164                           ;./FUNCTIONS.h: 95:         {;./FUNCTIONS.h: 96:             state = ON;
  2165  001A2A  0E02               	movlw	2
  2166  001A2C  6FEA               	movwf	_state& (0+255),b
  2167  001A2E                     
  2168                           ; BSR set to: 0
  2169                           ;./FUNCTIONS.h: 97:             LCDPutInst(0x01);
  2170  001A2E  0E01               	movlw	1
  2171  001A30  ECDB  F017         	call	_LCDPutInst
  2172  001A34                     
  2173                           ;./FUNCTIONS.h: 98:             printLCD_string(1,"Temp:   Humid:");
  2174  001A34  0E00               	movlw	0
  2175  001A36  0100               	movlb	0	; () banked
  2176  001A38  6F72               	movwf	(printLCD_string@line+1)& (0+255),b
  2177  001A3A  0E01               	movlw	1
  2178  001A3C  6F71               	movwf	printLCD_string@line& (0+255),b
  2179  001A3E  0E34               	movlw	low STR_7
  2180  001A40  6F73               	movwf	printLCD_string@array& (0+255),b
  2181  001A42  0E10               	movlw	high STR_7
  2182  001A44  6F74               	movwf	(printLCD_string@array+1)& (0+255),b
  2183  001A46  EC85  F019         	call	_printLCD_string	;wreg free
  2184  001A4A                     
  2185                           ;./FUNCTIONS.h: 99:             LATDbits.LATD1 = 1;
  2186  001A4A  828C               	bsf	140,1,c	;volatile
  2187                           
  2188                           ;./FUNCTIONS.h: 100:         }
  2189  001A4C  EF7B  F00D         	goto	l3191
  2190  001A50                     l3175:
  2191                           
  2192                           ; BSR set to: 0
  2193  001A50  0E02               	movlw	2
  2194  001A52  19EA               	xorwf	_state& (0+255),w,b
  2195  001A54  A4D8               	btfss	status,2,c
  2196  001A56  EF2F  F00D         	goto	u2431
  2197  001A5A  EF31  F00D         	goto	u2430
  2198  001A5E                     u2431:
  2199  001A5E  EF7B  F00D         	goto	l3191
  2200  001A62                     u2430:
  2201  001A62                     
  2202                           ; BSR set to: 0
  2203                           ;./FUNCTIONS.h: 102:         {;./FUNCTIONS.h: 103:             state = TEMP;
  2204  001A62  0E00               	movlw	0
  2205  001A64  6FEA               	movwf	_state& (0+255),b
  2206  001A66                     
  2207                           ; BSR set to: 0
  2208                           ;./FUNCTIONS.h: 104:             LCDPutInst(0x01);
  2209  001A66  0E01               	movlw	1
  2210  001A68  ECDB  F017         	call	_LCDPutInst
  2211  001A6C                     
  2212                           ;./FUNCTIONS.h: 105:             printLCD_string(0,"TEMP:");
  2213  001A6C  0E00               	movlw	0
  2214  001A6E  0100               	movlb	0	; () banked
  2215  001A70  6F72               	movwf	(printLCD_string@line+1)& (0+255),b
  2216  001A72  0E00               	movlw	0
  2217  001A74  6F71               	movwf	printLCD_string@line& (0+255),b
  2218  001A76  0E4A               	movlw	low STR_3
  2219  001A78  6F73               	movwf	printLCD_string@array& (0+255),b
  2220  001A7A  0E10               	movlw	high STR_3
  2221  001A7C  6F74               	movwf	(printLCD_string@array+1)& (0+255),b
  2222  001A7E  EC85  F019         	call	_printLCD_string	;wreg free
  2223  001A82                     
  2224                           ;./FUNCTIONS.h: 106:             printLCD_char(0 , 6 , MAX_TEMPERATURE/10 + '0');
  2225  001A82  0E00               	movlw	0
  2226  001A84  0100               	movlb	0	; () banked
  2227  001A86  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2228  001A88  0E00               	movlw	0
  2229  001A8A  6F70               	movwf	printLCD_char@line& (0+255),b
  2230  001A8C  0E06               	movlw	6
  2231  001A8E  6F72               	movwf	printLCD_char@position& (0+255),b
  2232  001A90  C0DE  F068         	movff	_MAX_TEMPERATURE,___lwdiv@dividend
  2233  001A94  C0DF  F069         	movff	_MAX_TEMPERATURE+1,___lwdiv@dividend+1
  2234  001A98  0E00               	movlw	0
  2235  001A9A  6F6B               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2236  001A9C  0E0A               	movlw	10
  2237  001A9E  6F6A               	movwf	___lwdiv@divisor& (0+255),b
  2238  001AA0  ECFB  F016         	call	___lwdiv	;wreg free
  2239  001AA4  0100               	movlb	0	; () banked
  2240  001AA6  5168               	movf	?___lwdiv& (0+255),w,b
  2241  001AA8  0F30               	addlw	48
  2242  001AAA  6F73               	movwf	printLCD_char@c& (0+255),b
  2243  001AAC  ECFA  F018         	call	_printLCD_char	;wreg free
  2244  001AB0                     
  2245                           ;./FUNCTIONS.h: 107:             printLCD_char(0 , 7 , MAX_TEMPERATURE%10 + '0');
  2246  001AB0  0E00               	movlw	0
  2247  001AB2  0100               	movlb	0	; () banked
  2248  001AB4  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2249  001AB6  0E00               	movlw	0
  2250  001AB8  6F70               	movwf	printLCD_char@line& (0+255),b
  2251  001ABA  0E07               	movlw	7
  2252  001ABC  6F72               	movwf	printLCD_char@position& (0+255),b
  2253  001ABE  C0DE  F068         	movff	_MAX_TEMPERATURE,___lwmod@dividend
  2254  001AC2  C0DF  F069         	movff	_MAX_TEMPERATURE+1,___lwmod@dividend+1
  2255  001AC6  0E00               	movlw	0
  2256  001AC8  6F6B               	movwf	(___lwmod@divisor+1)& (0+255),b
  2257  001ACA  0E0A               	movlw	10
  2258  001ACC  6F6A               	movwf	___lwmod@divisor& (0+255),b
  2259  001ACE  EC10  F018         	call	___lwmod	;wreg free
  2260  001AD2  0100               	movlb	0	; () banked
  2261  001AD4  5168               	movf	?___lwmod& (0+255),w,b
  2262  001AD6  0F30               	addlw	48
  2263  001AD8  6F73               	movwf	printLCD_char@c& (0+255),b
  2264  001ADA  ECFA  F018         	call	_printLCD_char	;wreg free
  2265  001ADE                     
  2266                           ;./FUNCTIONS.h: 108:             printLCD_string(1 , "INCR:B0  NEXT:A0");
  2267  001ADE  0E00               	movlw	0
  2268  001AE0  0100               	movlb	0	; () banked
  2269  001AE2  6F72               	movwf	(printLCD_string@line+1)& (0+255),b
  2270  001AE4  0E01               	movlw	1
  2271  001AE6  6F71               	movwf	printLCD_string@line& (0+255),b
  2272  001AE8  0E23               	movlw	low STR_4
  2273  001AEA  6F73               	movwf	printLCD_string@array& (0+255),b
  2274  001AEC  0E10               	movlw	high STR_4
  2275  001AEE  6F74               	movwf	(printLCD_string@array+1)& (0+255),b
  2276  001AF0  EC85  F019         	call	_printLCD_string	;wreg free
  2277  001AF4                     
  2278                           ;./FUNCTIONS.h: 109:             LATDbits.LATD1 = 0;
  2279  001AF4  928C               	bcf	140,1,c	;volatile
  2280  001AF6                     l3191:
  2281                           
  2282                           ;./FUNCTIONS.h: 111:         check_but_state = 1;
  2283  001AF6  0E00               	movlw	0
  2284  001AF8  0100               	movlb	0	; () banked
  2285  001AFA  6FC7               	movwf	(check_button@check_but_state+1)& (0+255),b
  2286  001AFC  0E01               	movlw	1
  2287  001AFE  6FC6               	movwf	check_button@check_but_state& (0+255),b
  2288                           
  2289                           ;./FUNCTIONS.h: 112:     }
  2290  001B00  EF98  F00D         	goto	l3199
  2291  001B04                     l3193:
  2292                           
  2293                           ; BSR set to: 0
  2294  001B04  51D8               	movf	_state_but& (0+255),w,b
  2295  001B06  11D9               	iorwf	(_state_but+1)& (0+255),w,b
  2296  001B08  A4D8               	btfss	status,2,c
  2297  001B0A  EF89  F00D         	goto	u2441
  2298  001B0E  EF8B  F00D         	goto	u2440
  2299  001B12                     u2441:
  2300  001B12  EF98  F00D         	goto	l3199
  2301  001B16                     u2440:
  2302  001B16                     
  2303                           ; BSR set to: 0
  2304  001B16  05C6               	decf	check_button@check_but_state& (0+255),w,b
  2305  001B18  11C7               	iorwf	(check_button@check_but_state+1)& (0+255),w,b
  2306  001B1A  A4D8               	btfss	status,2,c
  2307  001B1C  EF92  F00D         	goto	u2451
  2308  001B20  EF94  F00D         	goto	u2450
  2309  001B24                     u2451:
  2310  001B24  EF98  F00D         	goto	l3199
  2311  001B28                     u2450:
  2312  001B28                     
  2313                           ; BSR set to: 0
  2314                           ;./FUNCTIONS.h: 114:     {;./FUNCTIONS.h: 115:         check_but_state = 0;
  2315  001B28  0E00               	movlw	0
  2316  001B2A  6FC7               	movwf	(check_button@check_but_state+1)& (0+255),b
  2317  001B2C  0E00               	movlw	0
  2318  001B2E  6FC6               	movwf	check_button@check_but_state& (0+255),b
  2319  001B30                     l3199:
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;./FUNCTIONS.h: 118:     if (inc_but ==1 && check_but_inc ==0)
  2323  001B30  05D6               	decf	_inc_but& (0+255),w,b
  2324  001B32  11D7               	iorwf	(_inc_but+1)& (0+255),w,b
  2325  001B34  A4D8               	btfss	status,2,c
  2326  001B36  EF9F  F00D         	goto	u2461
  2327  001B3A  EFA1  F00D         	goto	u2460
  2328  001B3E                     u2461:
  2329  001B3E  EF73  F00E         	goto	l3229
  2330  001B42                     u2460:
  2331  001B42                     
  2332                           ; BSR set to: 0
  2333  001B42  51C4               	movf	check_button@check_but_inc& (0+255),w,b
  2334  001B44  11C5               	iorwf	(check_button@check_but_inc+1)& (0+255),w,b
  2335  001B46  A4D8               	btfss	status,2,c
  2336  001B48  EFA8  F00D         	goto	u2471
  2337  001B4C  EFAA  F00D         	goto	u2470
  2338  001B50                     u2471:
  2339  001B50  EF73  F00E         	goto	l3229
  2340  001B54                     u2470:
  2341  001B54                     
  2342                           ; BSR set to: 0
  2343                           ;./FUNCTIONS.h: 119:     {;./FUNCTIONS.h: 120:        if (state == TEMP)
  2344  001B54  51EA               	movf	_state& (0+255),w,b
  2345  001B56  A4D8               	btfss	status,2,c
  2346  001B58  EFB0  F00D         	goto	u2481
  2347  001B5C  EFB2  F00D         	goto	u2480
  2348  001B60                     u2481:
  2349  001B60  EF0C  F00E         	goto	l3215
  2350  001B64                     u2480:
  2351  001B64                     
  2352                           ; BSR set to: 0
  2353                           ;./FUNCTIONS.h: 121:         {;./FUNCTIONS.h: 122:             LCDPutInst(0x01);
  2354  001B64  0E01               	movlw	1
  2355  001B66  ECDB  F017         	call	_LCDPutInst
  2356  001B6A                     
  2357                           ;./FUNCTIONS.h: 123:             printLCD_string(0,"TEMP:");
  2358  001B6A  0E00               	movlw	0
  2359  001B6C  0100               	movlb	0	; () banked
  2360  001B6E  6F72               	movwf	(printLCD_string@line+1)& (0+255),b
  2361  001B70  0E00               	movlw	0
  2362  001B72  6F71               	movwf	printLCD_string@line& (0+255),b
  2363  001B74  0E4A               	movlw	low STR_3
  2364  001B76  6F73               	movwf	printLCD_string@array& (0+255),b
  2365  001B78  0E10               	movlw	high STR_3
  2366  001B7A  6F74               	movwf	(printLCD_string@array+1)& (0+255),b
  2367  001B7C  EC85  F019         	call	_printLCD_string	;wreg free
  2368  001B80                     
  2369                           ;./FUNCTIONS.h: 124:             printLCD_char(0 , 6 , MAX_TEMPERATURE/10 + '0');
  2370  001B80  0E00               	movlw	0
  2371  001B82  0100               	movlb	0	; () banked
  2372  001B84  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2373  001B86  0E00               	movlw	0
  2374  001B88  6F70               	movwf	printLCD_char@line& (0+255),b
  2375  001B8A  0E06               	movlw	6
  2376  001B8C  6F72               	movwf	printLCD_char@position& (0+255),b
  2377  001B8E  C0DE  F068         	movff	_MAX_TEMPERATURE,___lwdiv@dividend
  2378  001B92  C0DF  F069         	movff	_MAX_TEMPERATURE+1,___lwdiv@dividend+1
  2379  001B96  0E00               	movlw	0
  2380  001B98  6F6B               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2381  001B9A  0E0A               	movlw	10
  2382  001B9C  6F6A               	movwf	___lwdiv@divisor& (0+255),b
  2383  001B9E  ECFB  F016         	call	___lwdiv	;wreg free
  2384  001BA2  0100               	movlb	0	; () banked
  2385  001BA4  5168               	movf	?___lwdiv& (0+255),w,b
  2386  001BA6  0F30               	addlw	48
  2387  001BA8  6F73               	movwf	printLCD_char@c& (0+255),b
  2388  001BAA  ECFA  F018         	call	_printLCD_char	;wreg free
  2389  001BAE                     
  2390                           ;./FUNCTIONS.h: 125:             printLCD_char(0 , 7 , MAX_TEMPERATURE%10 + '0');
  2391  001BAE  0E00               	movlw	0
  2392  001BB0  0100               	movlb	0	; () banked
  2393  001BB2  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2394  001BB4  0E00               	movlw	0
  2395  001BB6  6F70               	movwf	printLCD_char@line& (0+255),b
  2396  001BB8  0E07               	movlw	7
  2397  001BBA  6F72               	movwf	printLCD_char@position& (0+255),b
  2398  001BBC  C0DE  F068         	movff	_MAX_TEMPERATURE,___lwmod@dividend
  2399  001BC0  C0DF  F069         	movff	_MAX_TEMPERATURE+1,___lwmod@dividend+1
  2400  001BC4  0E00               	movlw	0
  2401  001BC6  6F6B               	movwf	(___lwmod@divisor+1)& (0+255),b
  2402  001BC8  0E0A               	movlw	10
  2403  001BCA  6F6A               	movwf	___lwmod@divisor& (0+255),b
  2404  001BCC  EC10  F018         	call	___lwmod	;wreg free
  2405  001BD0  0100               	movlb	0	; () banked
  2406  001BD2  5168               	movf	?___lwmod& (0+255),w,b
  2407  001BD4  0F30               	addlw	48
  2408  001BD6  6F73               	movwf	printLCD_char@c& (0+255),b
  2409  001BD8  ECFA  F018         	call	_printLCD_char	;wreg free
  2410  001BDC                     
  2411                           ;./FUNCTIONS.h: 126:             printLCD_string(1 , "INCR:B0  NEXT:A0");
  2412  001BDC  0E00               	movlw	0
  2413  001BDE  0100               	movlb	0	; () banked
  2414  001BE0  6F72               	movwf	(printLCD_string@line+1)& (0+255),b
  2415  001BE2  0E01               	movlw	1
  2416  001BE4  6F71               	movwf	printLCD_string@line& (0+255),b
  2417  001BE6  0E23               	movlw	low STR_4
  2418  001BE8  6F73               	movwf	printLCD_string@array& (0+255),b
  2419  001BEA  0E10               	movlw	high STR_4
  2420  001BEC  6F74               	movwf	(printLCD_string@array+1)& (0+255),b
  2421  001BEE  EC85  F019         	call	_printLCD_string	;wreg free
  2422                           
  2423                           ;./FUNCTIONS.h: 127:             MAX_TEMPERATURE = (MAX_TEMPERATURE + 5) % 100;
  2424  001BF2  0E05               	movlw	5
  2425  001BF4  0100               	movlb	0	; () banked
  2426  001BF6  25DE               	addwf	_MAX_TEMPERATURE& (0+255),w,b
  2427  001BF8  6F68               	movwf	___lwmod@dividend& (0+255),b
  2428  001BFA  0E00               	movlw	0
  2429  001BFC  21DF               	addwfc	(_MAX_TEMPERATURE+1)& (0+255),w,b
  2430  001BFE  6F69               	movwf	(___lwmod@dividend+1)& (0+255),b
  2431  001C00  0E00               	movlw	0
  2432  001C02  6F6B               	movwf	(___lwmod@divisor+1)& (0+255),b
  2433  001C04  0E64               	movlw	100
  2434  001C06  6F6A               	movwf	___lwmod@divisor& (0+255),b
  2435  001C08  EC10  F018         	call	___lwmod	;wreg free
  2436  001C0C  C068  F0DE         	movff	?___lwmod,_MAX_TEMPERATURE
  2437  001C10  C069  F0DF         	movff	?___lwmod+1,_MAX_TEMPERATURE+1
  2438                           
  2439                           ;./FUNCTIONS.h: 128:         }
  2440  001C14  EF6C  F00E         	goto	l3227
  2441  001C18                     l3215:
  2442                           
  2443                           ; BSR set to: 0
  2444  001C18  05EA               	decf	_state& (0+255),w,b
  2445  001C1A  A4D8               	btfss	status,2,c
  2446  001C1C  EF12  F00E         	goto	u2491
  2447  001C20  EF14  F00E         	goto	u2490
  2448  001C24                     u2491:
  2449  001C24  EF6C  F00E         	goto	l3227
  2450  001C28                     u2490:
  2451  001C28                     
  2452                           ; BSR set to: 0
  2453                           ;./FUNCTIONS.h: 130:         {;./FUNCTIONS.h: 131:             LCDPutInst(0x01);
  2454  001C28  0E01               	movlw	1
  2455  001C2A  ECDB  F017         	call	_LCDPutInst
  2456                           
  2457                           ;./FUNCTIONS.h: 132:             MAX_HUMIDITY = (MAX_HUMIDITY + 5) % 100;
  2458  001C2E  0E05               	movlw	5
  2459  001C30  0100               	movlb	0	; () banked
  2460  001C32  25DC               	addwf	_MAX_HUMIDITY& (0+255),w,b
  2461  001C34  6F68               	movwf	___lwmod@dividend& (0+255),b
  2462  001C36  0E00               	movlw	0
  2463  001C38  21DD               	addwfc	(_MAX_HUMIDITY+1)& (0+255),w,b
  2464  001C3A  6F69               	movwf	(___lwmod@dividend+1)& (0+255),b
  2465  001C3C  0E00               	movlw	0
  2466  001C3E  6F6B               	movwf	(___lwmod@divisor+1)& (0+255),b
  2467  001C40  0E64               	movlw	100
  2468  001C42  6F6A               	movwf	___lwmod@divisor& (0+255),b
  2469  001C44  EC10  F018         	call	___lwmod	;wreg free
  2470  001C48  C068  F0DC         	movff	?___lwmod,_MAX_HUMIDITY
  2471  001C4C  C069  F0DD         	movff	?___lwmod+1,_MAX_HUMIDITY+1
  2472  001C50                     
  2473                           ;./FUNCTIONS.h: 133:             printLCD_string(0,"HUMID:");
  2474  001C50  0E00               	movlw	0
  2475  001C52  0100               	movlb	0	; () banked
  2476  001C54  6F72               	movwf	(printLCD_string@line+1)& (0+255),b
  2477  001C56  0E00               	movlw	0
  2478  001C58  6F71               	movwf	printLCD_string@line& (0+255),b
  2479  001C5A  0E43               	movlw	low STR_5
  2480  001C5C  6F73               	movwf	printLCD_string@array& (0+255),b
  2481  001C5E  0E10               	movlw	high STR_5
  2482  001C60  6F74               	movwf	(printLCD_string@array+1)& (0+255),b
  2483  001C62  EC85  F019         	call	_printLCD_string	;wreg free
  2484  001C66                     
  2485                           ;./FUNCTIONS.h: 134:             printLCD_char(0 , 7 , MAX_HUMIDITY/10 + '0');
  2486  001C66  0E00               	movlw	0
  2487  001C68  0100               	movlb	0	; () banked
  2488  001C6A  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2489  001C6C  0E00               	movlw	0
  2490  001C6E  6F70               	movwf	printLCD_char@line& (0+255),b
  2491  001C70  0E07               	movlw	7
  2492  001C72  6F72               	movwf	printLCD_char@position& (0+255),b
  2493  001C74  C0DC  F068         	movff	_MAX_HUMIDITY,___lwdiv@dividend
  2494  001C78  C0DD  F069         	movff	_MAX_HUMIDITY+1,___lwdiv@dividend+1
  2495  001C7C  0E00               	movlw	0
  2496  001C7E  6F6B               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2497  001C80  0E0A               	movlw	10
  2498  001C82  6F6A               	movwf	___lwdiv@divisor& (0+255),b
  2499  001C84  ECFB  F016         	call	___lwdiv	;wreg free
  2500  001C88  0100               	movlb	0	; () banked
  2501  001C8A  5168               	movf	?___lwdiv& (0+255),w,b
  2502  001C8C  0F30               	addlw	48
  2503  001C8E  6F73               	movwf	printLCD_char@c& (0+255),b
  2504  001C90  ECFA  F018         	call	_printLCD_char	;wreg free
  2505  001C94                     
  2506                           ;./FUNCTIONS.h: 135:             printLCD_char(0 , 8 , MAX_HUMIDITY%10 + '0');
  2507  001C94  0E00               	movlw	0
  2508  001C96  0100               	movlb	0	; () banked
  2509  001C98  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2510  001C9A  0E00               	movlw	0
  2511  001C9C  6F70               	movwf	printLCD_char@line& (0+255),b
  2512  001C9E  0E08               	movlw	8
  2513  001CA0  6F72               	movwf	printLCD_char@position& (0+255),b
  2514  001CA2  C0DC  F068         	movff	_MAX_HUMIDITY,___lwmod@dividend
  2515  001CA6  C0DD  F069         	movff	_MAX_HUMIDITY+1,___lwmod@dividend+1
  2516  001CAA  0E00               	movlw	0
  2517  001CAC  6F6B               	movwf	(___lwmod@divisor+1)& (0+255),b
  2518  001CAE  0E0A               	movlw	10
  2519  001CB0  6F6A               	movwf	___lwmod@divisor& (0+255),b
  2520  001CB2  EC10  F018         	call	___lwmod	;wreg free
  2521  001CB6  0100               	movlb	0	; () banked
  2522  001CB8  5168               	movf	?___lwmod& (0+255),w,b
  2523  001CBA  0F30               	addlw	48
  2524  001CBC  6F73               	movwf	printLCD_char@c& (0+255),b
  2525  001CBE  ECFA  F018         	call	_printLCD_char	;wreg free
  2526  001CC2                     
  2527                           ;./FUNCTIONS.h: 136:             printLCD_string(1 , "INCR:B0  NEXT:A0");
  2528  001CC2  0E00               	movlw	0
  2529  001CC4  0100               	movlb	0	; () banked
  2530  001CC6  6F72               	movwf	(printLCD_string@line+1)& (0+255),b
  2531  001CC8  0E01               	movlw	1
  2532  001CCA  6F71               	movwf	printLCD_string@line& (0+255),b
  2533  001CCC  0E23               	movlw	low STR_4
  2534  001CCE  6F73               	movwf	printLCD_string@array& (0+255),b
  2535  001CD0  0E10               	movlw	high STR_4
  2536  001CD2  6F74               	movwf	(printLCD_string@array+1)& (0+255),b
  2537  001CD4  EC85  F019         	call	_printLCD_string	;wreg free
  2538  001CD8                     l3227:
  2539                           
  2540                           ;./FUNCTIONS.h: 138:         check_but_inc = 1;
  2541  001CD8  0E00               	movlw	0
  2542  001CDA  0100               	movlb	0	; () banked
  2543  001CDC  6FC5               	movwf	(check_button@check_but_inc+1)& (0+255),b
  2544  001CDE  0E01               	movlw	1
  2545  001CE0  6FC4               	movwf	check_button@check_but_inc& (0+255),b
  2546                           
  2547                           ;./FUNCTIONS.h: 139:     }
  2548  001CE2  EF89  F00E         	goto	l502
  2549  001CE6                     l3229:
  2550                           
  2551                           ; BSR set to: 0
  2552  001CE6  51D6               	movf	_inc_but& (0+255),w,b
  2553  001CE8  11D7               	iorwf	(_inc_but+1)& (0+255),w,b
  2554  001CEA  A4D8               	btfss	status,2,c
  2555  001CEC  EF7A  F00E         	goto	u2501
  2556  001CF0  EF7C  F00E         	goto	u2500
  2557  001CF4                     u2501:
  2558  001CF4  EF89  F00E         	goto	l502
  2559  001CF8                     u2500:
  2560  001CF8                     
  2561                           ; BSR set to: 0
  2562  001CF8  05C4               	decf	check_button@check_but_inc& (0+255),w,b
  2563  001CFA  11C5               	iorwf	(check_button@check_but_inc+1)& (0+255),w,b
  2564  001CFC  A4D8               	btfss	status,2,c
  2565  001CFE  EF83  F00E         	goto	u2511
  2566  001D02  EF85  F00E         	goto	u2510
  2567  001D06                     u2511:
  2568  001D06  EF89  F00E         	goto	l502
  2569  001D0A                     u2510:
  2570  001D0A                     
  2571                           ; BSR set to: 0
  2572                           ;./FUNCTIONS.h: 141:     {;./FUNCTIONS.h: 142:         check_but_inc = 0;
  2573  001D0A  0E00               	movlw	0
  2574  001D0C  6FC5               	movwf	(check_button@check_but_inc+1)& (0+255),b
  2575  001D0E  0E00               	movlw	0
  2576  001D10  6FC4               	movwf	check_button@check_but_inc& (0+255),b
  2577  001D12                     l502:
  2578                           
  2579                           ; BSR set to: 0
  2580  001D12  0012               	return		;funcret
  2581  001D14                     __end_of_check_button:
  2582                           	opt callstack 0
  2583                           
  2584 ;; *************** function _get_temp_humid *****************
  2585 ;; Defined at:
  2586 ;;		line 68 in file "dht11.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;		None
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;		None
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  1    wreg      void 
  2593 ;; Registers used:
  2594 ;;		wreg, status,2, status,0, cstack
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;Total ram usage:        0 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; Hardware stack levels required when called:   11
  2607 ;; This function calls:
  2608 ;;		_print_temp_humid
  2609 ;;		_readDHT
  2610 ;; This function is called by:
  2611 ;;		_main
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text8
  2616  002B62                     __ptext8:
  2617                           	opt callstack 0
  2618  002B62                     _get_temp_humid:
  2619                           	opt callstack 19
  2620  002B62                     
  2621                           ;dht11.c: 69:     if (state == ON)
  2622  002B62  0E02               	movlw	2
  2623  002B64  0100               	movlb	0	; () banked
  2624  002B66  19EA               	xorwf	_state& (0+255),w,b
  2625  002B68  A4D8               	btfss	status,2,c
  2626  002B6A  EFB9  F015         	goto	u2521
  2627  002B6E  EFBB  F015         	goto	u2520
  2628  002B72                     u2521:
  2629  002B72  EFF6  F015         	goto	l682
  2630  002B76                     u2520:
  2631  002B76                     
  2632                           ; BSR set to: 0
  2633                           ;dht11.c: 70:     {;dht11.c: 71:         if(!readDHT()) {
  2634  002B76  ECC9  F010         	call	_readDHT	;wreg free
  2635  002B7A  0900               	iorlw	0
  2636  002B7C  A4D8               	btfss	status,2,c
  2637  002B7E  EFC3  F015         	goto	u2531
  2638  002B82  EFC5  F015         	goto	u2530
  2639  002B86                     u2531:
  2640  002B86  EFC7  F015         	goto	l3269
  2641  002B8A                     u2530:
  2642  002B8A  EFF6  F015         	goto	l682
  2643  002B8E                     l3269:
  2644                           
  2645                           ;dht11.c: 74:         print_temp_humid();
  2646  002B8E  EC50  F014         	call	_print_temp_humid	;wreg free
  2647  002B92                     
  2648                           ;dht11.c: 75:         temperature_value = temper[0];
  2649  002B92  C0E4  F0E2         	movff	_temper,_temperature_value
  2650  002B96  0100               	movlb	0	; () banked
  2651  002B98  6BE3               	clrf	(_temperature_value+1)& (0+255),b
  2652  002B9A                     
  2653                           ; BSR set to: 0
  2654                           ;dht11.c: 76:         humidity_value = humid[0];
  2655  002B9A  C0E6  F0E0         	movff	_humid,_humidity_value
  2656  002B9E  6BE1               	clrf	(_humidity_value+1)& (0+255),b
  2657  002BA0                     
  2658                           ; BSR set to: 0
  2659                           ;dht11.c: 78:         if (humidity_value>MAX_HUMIDITY) turn_fan3 = 1;
  2660  002BA0  51E0               	movf	_humidity_value& (0+255),w,b
  2661  002BA2  5DDC               	subwf	_MAX_HUMIDITY& (0+255),w,b
  2662  002BA4  51E1               	movf	(_humidity_value+1)& (0+255),w,b
  2663  002BA6  59DD               	subwfb	(_MAX_HUMIDITY+1)& (0+255),w,b
  2664  002BA8  B0D8               	btfsc	status,0,c
  2665  002BAA  EFD9  F015         	goto	u2541
  2666  002BAE  EFDB  F015         	goto	u2540
  2667  002BB2                     u2541:
  2668  002BB2  EFE1  F015         	goto	l3279
  2669  002BB6                     u2540:
  2670  002BB6                     
  2671                           ; BSR set to: 0
  2672  002BB6  0E00               	movlw	0
  2673  002BB8  6FDB               	movwf	(_turn_fan3+1)& (0+255),b
  2674  002BBA  0E01               	movlw	1
  2675  002BBC  6FDA               	movwf	_turn_fan3& (0+255),b
  2676  002BBE  EFE5  F015         	goto	l3281
  2677  002BC2                     l3279:
  2678                           
  2679                           ; BSR set to: 0
  2680  002BC2  0E00               	movlw	0
  2681  002BC4  6FDB               	movwf	(_turn_fan3+1)& (0+255),b
  2682  002BC6  0E00               	movlw	0
  2683  002BC8  6FDA               	movwf	_turn_fan3& (0+255),b
  2684  002BCA                     l3281:
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;dht11.c: 80:         if (humidity_value >= 90) fan3 = 100;
  2688  002BCA  51E1               	movf	(_humidity_value+1)& (0+255),w,b
  2689  002BCC  E109               	bnz	u2550
  2690  002BCE  0E5A               	movlw	90
  2691  002BD0  5DE0               	subwf	_humidity_value& (0+255),w,b
  2692  002BD2  A0D8               	btfss	status,0,c
  2693  002BD4  EFEE  F015         	goto	u2551
  2694  002BD8  EFF0  F015         	goto	u2550
  2695  002BDC                     u2551:
  2696  002BDC  EFF4  F015         	goto	l685
  2697  002BE0                     u2550:
  2698  002BE0                     
  2699                           ; BSR set to: 0
  2700  002BE0  0E64               	movlw	100
  2701  002BE2  6FEC               	movwf	_fan3& (0+255),b
  2702  002BE4  EFF6  F015         	goto	l682
  2703  002BE8                     l685:
  2704                           
  2705                           ; BSR set to: 0
  2706  002BE8  C0E6  F0EC         	movff	_humid,_fan3
  2707  002BEC                     l682:
  2708  002BEC  0012               	return		;funcret
  2709  002BEE                     __end_of_get_temp_humid:
  2710                           	opt callstack 0
  2711                           
  2712 ;; *************** function _heater_heatpumper *****************
  2713 ;; Defined at:
  2714 ;;		line 17 in file "./FUNCTIONS.h"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;		None
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;		None
  2719 ;; Return value:  Size  Location     Type
  2720 ;;                  1    wreg      void 
  2721 ;; Registers used:
  2722 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2723 ;; Tracked objects:
  2724 ;;		On entry : 0/0
  2725 ;;		On exit  : 0/0
  2726 ;;		Unchanged: 0/0
  2727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2732 ;;Total ram usage:        0 bytes
  2733 ;; Hardware stack levels used:    1
  2734 ;; Hardware stack levels required when called:   11
  2735 ;; This function calls:
  2736 ;;		_LCDPutInst
  2737 ;;		___awdiv
  2738 ;;		___awmod
  2739 ;;		___lwdiv
  2740 ;;		___lwmod
  2741 ;;		_printLCD_char
  2742 ;;		_printLCD_string
  2743 ;; This function is called by:
  2744 ;;		_main
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text9
  2749  001D14                     __ptext9:
  2750                           	opt callstack 0
  2751  001D14                     _heater_heatpumper:
  2752                           	opt callstack 19
  2753  001D14                     
  2754                           ;./FUNCTIONS.h: 19:     static int check_off_temp = 1;;./FUNCTIONS.h: 20:     if (state 
      +                          == ON)
  2755  001D14  0E02               	movlw	2
  2756  001D16  0100               	movlb	0	; () banked
  2757  001D18  19EA               	xorwf	_state& (0+255),w,b
  2758  001D1A  A4D8               	btfss	status,2,c
  2759  001D1C  EF92  F00E         	goto	u2281
  2760  001D20  EF94  F00E         	goto	u2280
  2761  001D24                     u2281:
  2762  001D24  EF64  F00F         	goto	l3129
  2763  001D28                     u2280:
  2764  001D28                     
  2765                           ; BSR set to: 0
  2766                           ;./FUNCTIONS.h: 21:     {;./FUNCTIONS.h: 22:         if (time_each_state>0)
  2767  001D28  BFF0               	btfsc	(_time_each_state+1)& (0+255),7,b
  2768  001D2A  EF9F  F00E         	goto	u2291
  2769  001D2E  51F0               	movf	(_time_each_state+1)& (0+255),w,b
  2770  001D30  E108               	bnz	u2290
  2771  001D32  05EF               	decf	_time_each_state& (0+255),w,b
  2772  001D34  A0D8               	btfss	status,0,c
  2773  001D36  EF9F  F00E         	goto	u2291
  2774  001D3A  EFA1  F00E         	goto	u2290
  2775  001D3E                     u2291:
  2776  001D3E  EFDE  F00E         	goto	l3109
  2777  001D42                     u2290:
  2778  001D42                     
  2779                           ; BSR set to: 0
  2780                           ;./FUNCTIONS.h: 23:         {;./FUNCTIONS.h: 24:             if (FUNCTION == Heater)
  2781  001D42  51EB               	movf	_FUNCTION& (0+255),w,b
  2782  001D44  A4D8               	btfss	status,2,c
  2783  001D46  EFA7  F00E         	goto	u2301
  2784  001D4A  EFA9  F00E         	goto	u2300
  2785  001D4E                     u2301:
  2786  001D4E  EFCA  F00E         	goto	l3103
  2787  001D52                     u2300:
  2788  001D52                     
  2789                           ; BSR set to: 0
  2790                           ;./FUNCTIONS.h: 25:             {;./FUNCTIONS.h: 26:                 if (temperature_val
      +                          ue < MAX_TEMPERATURE)
  2791  001D52  51DE               	movf	_MAX_TEMPERATURE& (0+255),w,b
  2792  001D54  5DE2               	subwf	_temperature_value& (0+255),w,b
  2793  001D56  51DF               	movf	(_MAX_TEMPERATURE+1)& (0+255),w,b
  2794  001D58  59E3               	subwfb	(_temperature_value+1)& (0+255),w,b
  2795  001D5A  B0D8               	btfsc	status,0,c
  2796  001D5C  EFB2  F00E         	goto	u2311
  2797  001D60  EFB4  F00E         	goto	u2310
  2798  001D64                     u2311:
  2799  001D64  EFC0  F00E         	goto	l3099
  2800  001D68                     u2310:
  2801  001D68                     
  2802                           ; BSR set to: 0
  2803                           ;./FUNCTIONS.h: 27:                     printLCD_string(0,"Heating   F3:   ");
  2804  001D68  0E00               	movlw	0
  2805  001D6A  6F72               	movwf	(printLCD_string@line+1)& (0+255),b
  2806  001D6C  0E00               	movlw	0
  2807  001D6E  6F71               	movwf	printLCD_string@line& (0+255),b
  2808  001D70  0E01               	movlw	low STR_1
  2809  001D72  6F73               	movwf	printLCD_string@array& (0+255),b
  2810  001D74  0E10               	movlw	high STR_1
  2811  001D76  6F74               	movwf	(printLCD_string@array+1)& (0+255),b
  2812  001D78  EC85  F019         	call	_printLCD_string	;wreg free
  2813  001D7C  EFC4  F00E         	goto	l3101
  2814  001D80                     l3099:
  2815                           
  2816                           ; BSR set to: 0
  2817  001D80  0E00               	movlw	0
  2818  001D82  6FF0               	movwf	(_time_each_state+1)& (0+255),b
  2819  001D84  0E01               	movlw	1
  2820  001D86  6FEF               	movwf	_time_each_state& (0+255),b
  2821  001D88                     l3101:
  2822                           
  2823                           ;./FUNCTIONS.h: 29:                 time_each_state--;
  2824  001D88  0100               	movlb	0	; () banked
  2825  001D8A  07EF               	decf	_time_each_state& (0+255),f,b
  2826  001D8C  A0D8               	btfss	status,0,c
  2827  001D8E  07F0               	decf	(_time_each_state+1)& (0+255),f,b
  2828                           
  2829                           ;./FUNCTIONS.h: 30:             }
  2830  001D90  EFF8  F00E         	goto	l3117
  2831  001D94                     l3103:
  2832                           
  2833                           ; BSR set to: 0
  2834  001D94  05EB               	decf	_FUNCTION& (0+255),w,b
  2835  001D96  A4D8               	btfss	status,2,c
  2836  001D98  EFD0  F00E         	goto	u2321
  2837  001D9C  EFD2  F00E         	goto	u2320
  2838  001DA0                     u2321:
  2839  001DA0  EFF8  F00E         	goto	l3117
  2840  001DA4                     u2320:
  2841  001DA4                     
  2842                           ; BSR set to: 0
  2843                           ;./FUNCTIONS.h: 32:             {;./FUNCTIONS.h: 33:                 printLCD_string(0,"
      +                          Pump heat F3:   ");
  2844  001DA4  0E00               	movlw	0
  2845  001DA6  6F72               	movwf	(printLCD_string@line+1)& (0+255),b
  2846  001DA8  0E00               	movlw	0
  2847  001DAA  6F71               	movwf	printLCD_string@line& (0+255),b
  2848  001DAC  0E12               	movlw	low STR_2
  2849  001DAE  6F73               	movwf	printLCD_string@array& (0+255),b
  2850  001DB0  0E10               	movlw	high STR_2
  2851  001DB2  6F74               	movwf	(printLCD_string@array+1)& (0+255),b
  2852  001DB4  EC85  F019         	call	_printLCD_string	;wreg free
  2853  001DB8  EFC4  F00E         	goto	l3101
  2854  001DBC                     l3109:
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;./FUNCTIONS.h: 38:             time_each_state = 20;
  2858  001DBC  0E00               	movlw	0
  2859  001DBE  6FF0               	movwf	(_time_each_state+1)& (0+255),b
  2860  001DC0  0E14               	movlw	20
  2861  001DC2  6FEF               	movwf	_time_each_state& (0+255),b
  2862                           
  2863                           ;./FUNCTIONS.h: 39:             if (FUNCTION == Heater) FUNCTION = Heat_pumper;
  2864  001DC4  51EB               	movf	_FUNCTION& (0+255),w,b
  2865  001DC6  A4D8               	btfss	status,2,c
  2866  001DC8  EFE8  F00E         	goto	u2331
  2867  001DCC  EFEA  F00E         	goto	u2330
  2868  001DD0                     u2331:
  2869  001DD0  EFEE  F00E         	goto	l3113
  2870  001DD4                     u2330:
  2871  001DD4                     
  2872                           ; BSR set to: 0
  2873  001DD4  0E01               	movlw	1
  2874  001DD6  6FEB               	movwf	_FUNCTION& (0+255),b
  2875  001DD8  EFF8  F00E         	goto	l3117
  2876  001DDC                     l3113:
  2877                           
  2878                           ; BSR set to: 0
  2879  001DDC  05EB               	decf	_FUNCTION& (0+255),w,b
  2880  001DDE  A4D8               	btfss	status,2,c
  2881  001DE0  EFF4  F00E         	goto	u2341
  2882  001DE4  EFF6  F00E         	goto	u2340
  2883  001DE8                     u2341:
  2884  001DE8  EFF8  F00E         	goto	l3117
  2885  001DEC                     u2340:
  2886  001DEC                     
  2887                           ; BSR set to: 0
  2888  001DEC  0E00               	movlw	0
  2889  001DEE  6FEB               	movwf	_FUNCTION& (0+255),b
  2890  001DF0                     l3117:
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;./FUNCTIONS.h: 43:         if (turn_fan3 == 1)
  2894  001DF0  05DA               	decf	_turn_fan3& (0+255),w,b
  2895  001DF2  11DB               	iorwf	(_turn_fan3+1)& (0+255),w,b
  2896  001DF4  A4D8               	btfss	status,2,c
  2897  001DF6  EFFF  F00E         	goto	u2351
  2898  001DFA  EF01  F00F         	goto	u2350
  2899  001DFE                     u2351:
  2900  001DFE  EF39  F00F         	goto	l3125
  2901  001E02                     u2350:
  2902  001E02                     
  2903                           ; BSR set to: 0
  2904                           ;./FUNCTIONS.h: 52:             {;./FUNCTIONS.h: 53:                 printLCD_char(0,13,
      +                          fan3/10+'0');
  2905  001E02  0E00               	movlw	0
  2906  001E04  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2907  001E06  0E00               	movlw	0
  2908  001E08  6F70               	movwf	printLCD_char@line& (0+255),b
  2909  001E0A  0E0D               	movlw	13
  2910  001E0C  6F72               	movwf	printLCD_char@position& (0+255),b
  2911  001E0E  C0EC  F068         	movff	_fan3,___awdiv@dividend
  2912  001E12  6B69               	clrf	(___awdiv@dividend+1)& (0+255),b
  2913  001E14  0E00               	movlw	0
  2914  001E16  6F6B               	movwf	(___awdiv@divisor+1)& (0+255),b
  2915  001E18  0E0A               	movlw	10
  2916  001E1A  6F6A               	movwf	___awdiv@divisor& (0+255),b
  2917  001E1C  EC8C  F013         	call	___awdiv	;wreg free
  2918  001E20  0100               	movlb	0	; () banked
  2919  001E22  5168               	movf	?___awdiv& (0+255),w,b
  2920  001E24  0F30               	addlw	48
  2921  001E26  6F73               	movwf	printLCD_char@c& (0+255),b
  2922  001E28  ECFA  F018         	call	_printLCD_char	;wreg free
  2923                           
  2924                           ;./FUNCTIONS.h: 54:                 printLCD_char(0,14,fan3%10+'0');
  2925  001E2C  0E00               	movlw	0
  2926  001E2E  0100               	movlb	0	; () banked
  2927  001E30  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2928  001E32  0E00               	movlw	0
  2929  001E34  6F70               	movwf	printLCD_char@line& (0+255),b
  2930  001E36  0E0E               	movlw	14
  2931  001E38  6F72               	movwf	printLCD_char@position& (0+255),b
  2932  001E3A  C0EC  F068         	movff	_fan3,___awmod@dividend
  2933  001E3E  6B69               	clrf	(___awmod@dividend+1)& (0+255),b
  2934  001E40  0E00               	movlw	0
  2935  001E42  6F6B               	movwf	(___awmod@divisor+1)& (0+255),b
  2936  001E44  0E0A               	movlw	10
  2937  001E46  6F6A               	movwf	___awmod@divisor& (0+255),b
  2938  001E48  ECA9  F014         	call	___awmod	;wreg free
  2939  001E4C  0100               	movlb	0	; () banked
  2940  001E4E  5168               	movf	?___awmod& (0+255),w,b
  2941  001E50  0F30               	addlw	48
  2942  001E52  6F73               	movwf	printLCD_char@c& (0+255),b
  2943  001E54  ECFA  F018         	call	_printLCD_char	;wreg free
  2944                           
  2945                           ;./FUNCTIONS.h: 55:                 printLCD_char(0 , 15 , ' ');
  2946  001E58  0E00               	movlw	0
  2947  001E5A  0100               	movlb	0	; () banked
  2948  001E5C  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2949  001E5E  0E00               	movlw	0
  2950  001E60  6F70               	movwf	printLCD_char@line& (0+255),b
  2951  001E62  0E0F               	movlw	15
  2952  001E64  6F72               	movwf	printLCD_char@position& (0+255),b
  2953  001E66  0E20               	movlw	32
  2954  001E68  6F73               	movwf	printLCD_char@c& (0+255),b
  2955  001E6A  ECFA  F018         	call	_printLCD_char	;wreg free
  2956  001E6E  EFC1  F00F         	goto	l481
  2957  001E72                     l3125:
  2958                           
  2959                           ; BSR set to: 0
  2960  001E72  51DA               	movf	_turn_fan3& (0+255),w,b
  2961  001E74  11DB               	iorwf	(_turn_fan3+1)& (0+255),w,b
  2962  001E76  A4D8               	btfss	status,2,c
  2963  001E78  EF40  F00F         	goto	u2361
  2964  001E7C  EF42  F00F         	goto	u2360
  2965  001E80                     u2361:
  2966  001E80  EFC1  F00F         	goto	l481
  2967  001E84                     u2360:
  2968  001E84                     
  2969                           ; BSR set to: 0
  2970                           ;./FUNCTIONS.h: 59:         {;./FUNCTIONS.h: 60:             printLCD_char(0 , 13 , 'O')
      +                          ;
  2971  001E84  0E00               	movlw	0
  2972  001E86  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2973  001E88  0E00               	movlw	0
  2974  001E8A  6F70               	movwf	printLCD_char@line& (0+255),b
  2975  001E8C  0E0D               	movlw	13
  2976  001E8E  6F72               	movwf	printLCD_char@position& (0+255),b
  2977  001E90  0E4F               	movlw	79
  2978  001E92  6F73               	movwf	printLCD_char@c& (0+255),b
  2979  001E94  ECFA  F018         	call	_printLCD_char	;wreg free
  2980                           
  2981                           ;./FUNCTIONS.h: 61:             printLCD_char(0 , 14, 'F');
  2982  001E98  0E00               	movlw	0
  2983  001E9A  0100               	movlb	0	; () banked
  2984  001E9C  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2985  001E9E  0E00               	movlw	0
  2986  001EA0  6F70               	movwf	printLCD_char@line& (0+255),b
  2987  001EA2  0E0E               	movlw	14
  2988  001EA4  6F72               	movwf	printLCD_char@position& (0+255),b
  2989  001EA6  0E46               	movlw	70
  2990  001EA8  6F73               	movwf	printLCD_char@c& (0+255),b
  2991  001EAA  ECFA  F018         	call	_printLCD_char	;wreg free
  2992                           
  2993                           ;./FUNCTIONS.h: 62:             printLCD_char(0 , 15 , 'F');
  2994  001EAE  0E00               	movlw	0
  2995  001EB0  0100               	movlb	0	; () banked
  2996  001EB2  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  2997  001EB4  0E00               	movlw	0
  2998  001EB6  6F70               	movwf	printLCD_char@line& (0+255),b
  2999  001EB8  0E0F               	movlw	15
  3000  001EBA  6F72               	movwf	printLCD_char@position& (0+255),b
  3001  001EBC  0E46               	movlw	70
  3002  001EBE  6F73               	movwf	printLCD_char@c& (0+255),b
  3003  001EC0  ECFA  F018         	call	_printLCD_char	;wreg free
  3004  001EC4  EFC1  F00F         	goto	l481
  3005  001EC8                     l3129:
  3006                           
  3007                           ; BSR set to: 0
  3008  001EC8  51EA               	movf	_state& (0+255),w,b
  3009  001ECA  A4D8               	btfss	status,2,c
  3010  001ECC  EF6A  F00F         	goto	u2371
  3011  001ED0  EF6C  F00F         	goto	u2370
  3012  001ED4                     u2371:
  3013  001ED4  EFC1  F00F         	goto	l481
  3014  001ED8                     u2370:
  3015  001ED8                     
  3016                           ; BSR set to: 0
  3017                           ;./FUNCTIONS.h: 66:         if (check_off_temp==1)
  3018  001ED8  05ED               	decf	heater_heatpumper@check_off_temp& (0+255),w,b
  3019  001EDA  11EE               	iorwf	(heater_heatpumper@check_off_temp+1)& (0+255),w,b
  3020  001EDC  A4D8               	btfss	status,2,c
  3021  001EDE  EF73  F00F         	goto	u2381
  3022  001EE2  EF75  F00F         	goto	u2380
  3023  001EE6                     u2381:
  3024  001EE6  EFC1  F00F         	goto	l481
  3025  001EEA                     u2380:
  3026  001EEA                     
  3027                           ; BSR set to: 0
  3028                           ;./FUNCTIONS.h: 67:         {;./FUNCTIONS.h: 68:             LCDPutInst(0x01);
  3029  001EEA  0E01               	movlw	1
  3030  001EEC  ECDB  F017         	call	_LCDPutInst
  3031  001EF0                     
  3032                           ;./FUNCTIONS.h: 69:             printLCD_string(0,"TEMP:");
  3033  001EF0  0E00               	movlw	0
  3034  001EF2  0100               	movlb	0	; () banked
  3035  001EF4  6F72               	movwf	(printLCD_string@line+1)& (0+255),b
  3036  001EF6  0E00               	movlw	0
  3037  001EF8  6F71               	movwf	printLCD_string@line& (0+255),b
  3038  001EFA  0E4A               	movlw	low STR_3
  3039  001EFC  6F73               	movwf	printLCD_string@array& (0+255),b
  3040  001EFE  0E10               	movlw	high STR_3
  3041  001F00  6F74               	movwf	(printLCD_string@array+1)& (0+255),b
  3042  001F02  EC85  F019         	call	_printLCD_string	;wreg free
  3043  001F06                     
  3044                           ;./FUNCTIONS.h: 70:             printLCD_char(0 , 6 , MAX_TEMPERATURE/10 + '0');
  3045  001F06  0E00               	movlw	0
  3046  001F08  0100               	movlb	0	; () banked
  3047  001F0A  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  3048  001F0C  0E00               	movlw	0
  3049  001F0E  6F70               	movwf	printLCD_char@line& (0+255),b
  3050  001F10  0E06               	movlw	6
  3051  001F12  6F72               	movwf	printLCD_char@position& (0+255),b
  3052  001F14  C0DE  F068         	movff	_MAX_TEMPERATURE,___lwdiv@dividend
  3053  001F18  C0DF  F069         	movff	_MAX_TEMPERATURE+1,___lwdiv@dividend+1
  3054  001F1C  0E00               	movlw	0
  3055  001F1E  6F6B               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3056  001F20  0E0A               	movlw	10
  3057  001F22  6F6A               	movwf	___lwdiv@divisor& (0+255),b
  3058  001F24  ECFB  F016         	call	___lwdiv	;wreg free
  3059  001F28  0100               	movlb	0	; () banked
  3060  001F2A  5168               	movf	?___lwdiv& (0+255),w,b
  3061  001F2C  0F30               	addlw	48
  3062  001F2E  6F73               	movwf	printLCD_char@c& (0+255),b
  3063  001F30  ECFA  F018         	call	_printLCD_char	;wreg free
  3064  001F34                     
  3065                           ;./FUNCTIONS.h: 71:             printLCD_char(0 , 7 , MAX_TEMPERATURE%10 + '0');
  3066  001F34  0E00               	movlw	0
  3067  001F36  0100               	movlb	0	; () banked
  3068  001F38  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  3069  001F3A  0E00               	movlw	0
  3070  001F3C  6F70               	movwf	printLCD_char@line& (0+255),b
  3071  001F3E  0E07               	movlw	7
  3072  001F40  6F72               	movwf	printLCD_char@position& (0+255),b
  3073  001F42  C0DE  F068         	movff	_MAX_TEMPERATURE,___lwmod@dividend
  3074  001F46  C0DF  F069         	movff	_MAX_TEMPERATURE+1,___lwmod@dividend+1
  3075  001F4A  0E00               	movlw	0
  3076  001F4C  6F6B               	movwf	(___lwmod@divisor+1)& (0+255),b
  3077  001F4E  0E0A               	movlw	10
  3078  001F50  6F6A               	movwf	___lwmod@divisor& (0+255),b
  3079  001F52  EC10  F018         	call	___lwmod	;wreg free
  3080  001F56  0100               	movlb	0	; () banked
  3081  001F58  5168               	movf	?___lwmod& (0+255),w,b
  3082  001F5A  0F30               	addlw	48
  3083  001F5C  6F73               	movwf	printLCD_char@c& (0+255),b
  3084  001F5E  ECFA  F018         	call	_printLCD_char	;wreg free
  3085  001F62                     
  3086                           ;./FUNCTIONS.h: 72:             printLCD_string(1 , "INCR:B0  NEXT:A0");
  3087  001F62  0E00               	movlw	0
  3088  001F64  0100               	movlb	0	; () banked
  3089  001F66  6F72               	movwf	(printLCD_string@line+1)& (0+255),b
  3090  001F68  0E01               	movlw	1
  3091  001F6A  6F71               	movwf	printLCD_string@line& (0+255),b
  3092  001F6C  0E23               	movlw	low STR_4
  3093  001F6E  6F73               	movwf	printLCD_string@array& (0+255),b
  3094  001F70  0E10               	movlw	high STR_4
  3095  001F72  6F74               	movwf	(printLCD_string@array+1)& (0+255),b
  3096  001F74  EC85  F019         	call	_printLCD_string	;wreg free
  3097  001F78                     
  3098                           ;./FUNCTIONS.h: 73:             check_off_temp = 0;
  3099  001F78  0E00               	movlw	0
  3100  001F7A  0100               	movlb	0	; () banked
  3101  001F7C  6FEE               	movwf	(heater_heatpumper@check_off_temp+1)& (0+255),b
  3102  001F7E  0E00               	movlw	0
  3103  001F80  6FED               	movwf	heater_heatpumper@check_off_temp& (0+255),b
  3104  001F82                     l481:
  3105  001F82  0012               	return		;funcret
  3106  001F84                     __end_of_heater_heatpumper:
  3107                           	opt callstack 0
  3108                           
  3109 ;; *************** function _readDHT *****************
  3110 ;; Defined at:
  3111 ;;		line 22 in file "dht11.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;		None
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;  temp            1   15[BANK0 ] unsigned char 
  3116 ;;  check_sum       1   14[BANK0 ] unsigned char 
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      unsigned char 
  3119 ;; Registers used:
  3120 ;;		wreg, status,2, status,0, cstack
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3127 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3128 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3129 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3130 ;;Total ram usage:        4 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:    7
  3133 ;; This function calls:
  3134 ;;		_getByte
  3135 ;; This function is called by:
  3136 ;;		_get_temp_humid
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           	psect	text10
  3141  002192                     __ptext10:
  3142                           	opt callstack 0
  3143  002192                     _readDHT:
  3144                           	opt callstack 22
  3145  002192                     
  3146                           ;dht11.c: 23:     char check_sum;;dht11.c: 24:     TRISDbits.TRISD0 = 0;
  3147  002192  9095               	bcf	149,0,c	;volatile
  3148                           
  3149                           ;dht11.c: 25:     LATDbits.LATD0 = 0;
  3150  002194  908C               	bcf	140,0,c	;volatile
  3151  002196                     
  3152                           ;dht11.c: 26:     _delay((unsigned long)((20)*(10000000/4000.0)));
  3153  002196  0E41               	movlw	65
  3154  002198  0100               	movlb	0	; () banked
  3155  00219A  6F6C               	movwf	??_readDHT& (0+255),b
  3156  00219C  0EEE               	movlw	238
  3157  00219E                     u2637:
  3158  00219E  2EE8               	decfsz	wreg,f,c
  3159  0021A0  D7FE               	bra	u2637
  3160  0021A2  2F6C               	decfsz	??_readDHT& (0+255),f,b
  3161  0021A4  D7FC               	bra	u2637
  3162  0021A6  F000               	nop	
  3163  0021A8                     
  3164                           ;dht11.c: 28:     LATDbits.LATD0 = 1;
  3165  0021A8  808C               	bsf	140,0,c	;volatile
  3166                           
  3167                           ;dht11.c: 29:     _delay((unsigned long)((20)*(10000000/4000000.0)));
  3168  0021AA  0E10               	movlw	16
  3169  0021AC                     u2647:
  3170  0021AC  2EE8               	decfsz	wreg,f,c
  3171  0021AE  D7FE               	bra	u2647
  3172  0021B0  D000               	nop2	
  3173  0021B2                     
  3174                           ;dht11.c: 30:     TRISDbits.TRISD0 = 1;
  3175  0021B2  8095               	bsf	149,0,c	;volatile
  3176  0021B4                     
  3177                           ;dht11.c: 32:     time_out_dht = 100;
  3178  0021B4  0E00               	movlw	0
  3179  0021B6  6E5E               	movwf	(_time_out_dht+1)^0,c
  3180  0021B8  0E64               	movlw	100
  3181  0021BA  6E5D               	movwf	_time_out_dht^0,c
  3182                           
  3183                           ;dht11.c: 33:     while(PORTDbits.RD0 & 1) {
  3184  0021BC  EFEC  F010         	goto	l663
  3185  0021C0                     l2935:
  3186                           
  3187                           ;dht11.c: 34:         if(time_out_dht == 0) return 0;
  3188  0021C0  505D               	movf	_time_out_dht^0,w,c
  3189  0021C2  105E               	iorwf	(_time_out_dht+1)^0,w,c
  3190  0021C4  A4D8               	btfss	status,2,c
  3191  0021C6  EFE7  F010         	goto	u2031
  3192  0021CA  EFE9  F010         	goto	u2030
  3193  0021CE                     u2031:
  3194  0021CE  EFEC  F010         	goto	l663
  3195  0021D2                     u2030:
  3196  0021D2                     l2937:
  3197  0021D2  0E00               	movlw	0
  3198  0021D4  EF52  F011         	goto	l666
  3199  0021D8                     l663:
  3200                           
  3201                           ;dht11.c: 33:     while(PORTDbits.RD0 & 1) {
  3202  0021D8  B083               	btfsc	131,0,c	;volatile
  3203  0021DA  EFF1  F010         	goto	u2041
  3204  0021DE  EFF3  F010         	goto	u2040
  3205  0021E2                     u2041:
  3206  0021E2  EFE0  F010         	goto	l2935
  3207  0021E6                     u2040:
  3208  0021E6                     
  3209                           ;dht11.c: 37:     time_out_dht = 100;
  3210  0021E6  0E00               	movlw	0
  3211  0021E8  6E5E               	movwf	(_time_out_dht+1)^0,c
  3212  0021EA  0E64               	movlw	100
  3213  0021EC  6E5D               	movwf	_time_out_dht^0,c
  3214                           
  3215                           ;dht11.c: 38:     while(!PORTDbits.RD0 & 1) {
  3216  0021EE  EF04  F011         	goto	l2949
  3217  0021F2                     l2943:
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;dht11.c: 39:         if(time_out_dht == 0) return 0;
  3221  0021F2  505D               	movf	_time_out_dht^0,w,c
  3222  0021F4  105E               	iorwf	(_time_out_dht+1)^0,w,c
  3223  0021F6  A4D8               	btfss	status,2,c
  3224  0021F8  EF00  F011         	goto	u2051
  3225  0021FC  EF02  F011         	goto	u2050
  3226  002200                     u2051:
  3227  002200  EF04  F011         	goto	l2949
  3228  002204                     u2050:
  3229  002204  EFE9  F010         	goto	l2937
  3230  002208                     l2949:
  3231                           
  3232                           ;dht11.c: 38:     while(!PORTDbits.RD0 & 1) {
  3233  002208  A083               	btfss	131,0,c	;volatile
  3234  00220A  EF09  F011         	goto	u2061
  3235  00220E  EF0C  F011         	goto	u2060
  3236  002212                     u2061:
  3237  002212  0E01               	movlw	1
  3238  002214  EF0D  F011         	goto	u2070
  3239  002218                     u2060:
  3240  002218  0E00               	movlw	0
  3241  00221A                     u2070:
  3242  00221A  0100               	movlb	0	; () banked
  3243  00221C  6F6C               	movwf	??_readDHT& (0+255),b
  3244  00221E  6B6D               	clrf	(??_readDHT+1)& (0+255),b
  3245  002220  B16C               	btfsc	??_readDHT& (0+255),0,b
  3246  002222  EF15  F011         	goto	u2081
  3247  002226  EF17  F011         	goto	u2080
  3248  00222A                     u2081:
  3249  00222A  EFF9  F010         	goto	l2943
  3250  00222E                     u2080:
  3251  00222E                     
  3252                           ; BSR set to: 0
  3253                           ;dht11.c: 42:     time_out_dht = 100;
  3254  00222E  0E00               	movlw	0
  3255  002230  6E5E               	movwf	(_time_out_dht+1)^0,c
  3256  002232  0E64               	movlw	100
  3257  002234  6E5D               	movwf	_time_out_dht^0,c
  3258                           
  3259                           ;dht11.c: 43:     while(PORTDbits.RD0 & 1) {
  3260  002236  EF28  F011         	goto	l672
  3261  00223A                     l2953:
  3262                           
  3263                           ;dht11.c: 44:         if(time_out_dht == 0) return 0;
  3264  00223A  505D               	movf	_time_out_dht^0,w,c
  3265  00223C  105E               	iorwf	(_time_out_dht+1)^0,w,c
  3266  00223E  A4D8               	btfss	status,2,c
  3267  002240  EF24  F011         	goto	u2091
  3268  002244  EF26  F011         	goto	u2090
  3269  002248                     u2091:
  3270  002248  EF28  F011         	goto	l672
  3271  00224C                     u2090:
  3272  00224C  EFE9  F010         	goto	l2937
  3273  002250                     l672:
  3274                           
  3275                           ;dht11.c: 43:     while(PORTDbits.RD0 & 1) {
  3276  002250  B083               	btfsc	131,0,c	;volatile
  3277  002252  EF2D  F011         	goto	u2101
  3278  002256  EF2F  F011         	goto	u2100
  3279  00225A                     u2101:
  3280  00225A  EF1D  F011         	goto	l2953
  3281  00225E                     u2100:
  3282  00225E                     
  3283                           ;dht11.c: 46:     humid[0] = getByte();
  3284  00225E  EC53  F011         	call	_getByte	;wreg free
  3285  002262  0100               	movlb	0	; () banked
  3286  002264  6FE6               	movwf	_humid& (0+255),b
  3287                           
  3288                           ;dht11.c: 47:     humid[1] = getByte();
  3289  002266  EC53  F011         	call	_getByte	;wreg free
  3290  00226A  0100               	movlb	0	; () banked
  3291  00226C  6FE7               	movwf	(_humid+1)& (0+255),b
  3292                           
  3293                           ;dht11.c: 48:     temper[0] = getByte();
  3294  00226E  EC53  F011         	call	_getByte	;wreg free
  3295  002272  0100               	movlb	0	; () banked
  3296  002274  6FE4               	movwf	_temper& (0+255),b
  3297                           
  3298                           ;dht11.c: 49:     temper[1] = getByte();
  3299  002276  EC53  F011         	call	_getByte	;wreg free
  3300  00227A  0100               	movlb	0	; () banked
  3301  00227C  6FE5               	movwf	(_temper+1)& (0+255),b
  3302                           
  3303                           ;dht11.c: 50:     check_sum = getByte();
  3304  00227E  EC53  F011         	call	_getByte	;wreg free
  3305  002282  0100               	movlb	0	; () banked
  3306  002284  6F6E               	movwf	readDHT@check_sum& (0+255),b
  3307  002286                     
  3308                           ; BSR set to: 0
  3309                           ;dht11.c: 51:     char temp = (humid[0] + humid[1] + temper[0] + temper[1] ) & 0xFF;
  3310  002286  51E7               	movf	(_humid+1)& (0+255),w,b
  3311  002288  25E5               	addwf	(_temper+1)& (0+255),w,b
  3312  00228A  25E6               	addwf	_humid& (0+255),w,b
  3313  00228C  25E4               	addwf	_temper& (0+255),w,b
  3314  00228E  6F6F               	movwf	readDHT@temp& (0+255),b
  3315  002290                     
  3316                           ; BSR set to: 0
  3317                           ;dht11.c: 64:     if( temp == check_sum ) return 1;
  3318  002290  516E               	movf	readDHT@check_sum& (0+255),w,b
  3319  002292  196F               	xorwf	readDHT@temp& (0+255),w,b
  3320  002294  A4D8               	btfss	status,2,c
  3321  002296  EF4F  F011         	goto	u2111
  3322  00229A  EF51  F011         	goto	u2110
  3323  00229E                     u2111:
  3324  00229E  EFE9  F010         	goto	l2937
  3325  0022A2                     u2110:
  3326  0022A2                     
  3327                           ; BSR set to: 0
  3328  0022A2  0E01               	movlw	1
  3329  0022A4                     l666:
  3330  0022A4  0012               	return		;funcret
  3331  0022A6                     __end_of_readDHT:
  3332                           	opt callstack 0
  3333                           
  3334 ;; *************** function _getByte *****************
  3335 ;; Defined at:
  3336 ;;		line 3 in file "dht11.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;		None
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;  j               1   11[BANK0 ] unsigned char 
  3341 ;;  i               1   10[BANK0 ] unsigned char 
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  1    wreg      unsigned char 
  3344 ;; Registers used:
  3345 ;;		wreg, status,2, status,0
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3352 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3353 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3354 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3355 ;;Total ram usage:        4 bytes
  3356 ;; Hardware stack levels used:    1
  3357 ;; Hardware stack levels required when called:    6
  3358 ;; This function calls:
  3359 ;;		Nothing
  3360 ;; This function is called by:
  3361 ;;		_readDHT
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text11
  3366  0022A6                     __ptext11:
  3367                           	opt callstack 0
  3368  0022A6                     _getByte:
  3369                           	opt callstack 22
  3370  0022A6                     
  3371                           ;dht11.c: 4:     char i, j;;dht11.c: 5:     for(j = 0; j < 8; j++){
  3372  0022A6  0E00               	movlw	0
  3373  0022A8  0100               	movlb	0	; () banked
  3374  0022AA  6F6B               	movwf	getByte@j& (0+255),b
  3375  0022AC                     l2615:
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;dht11.c: 6:         time_out_dht = 100;
  3379  0022AC  0E00               	movlw	0
  3380  0022AE  6E5E               	movwf	(_time_out_dht+1)^0,c
  3381  0022B0  0E64               	movlw	100
  3382  0022B2  6E5D               	movwf	_time_out_dht^0,c
  3383                           
  3384                           ;dht11.c: 7:         while(!PORTDbits.RD0 & 1)
  3385  0022B4  EF68  F011         	goto	l2623
  3386  0022B8                     l2617:
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;dht11.c: 8:             if(time_out_dht == 0) return 0;
  3390  0022B8  505D               	movf	_time_out_dht^0,w,c
  3391  0022BA  105E               	iorwf	(_time_out_dht+1)^0,w,c
  3392  0022BC  A4D8               	btfss	status,2,c
  3393  0022BE  EF63  F011         	goto	u1511
  3394  0022C2  EF65  F011         	goto	u1510
  3395  0022C6                     u1511:
  3396  0022C6  EF68  F011         	goto	l2623
  3397  0022CA                     u1510:
  3398  0022CA                     l2619:
  3399  0022CA  0E00               	movlw	0
  3400  0022CC  EFD6  F011         	goto	l653
  3401  0022D0                     l2623:
  3402                           
  3403                           ; BSR set to: 0
  3404                           ;dht11.c: 7:         while(!PORTDbits.RD0 & 1)
  3405  0022D0  A083               	btfss	131,0,c	;volatile
  3406  0022D2  EF6D  F011         	goto	u1521
  3407  0022D6  EF70  F011         	goto	u1520
  3408  0022DA                     u1521:
  3409  0022DA  0E01               	movlw	1
  3410  0022DC  EF71  F011         	goto	u1530
  3411  0022E0                     u1520:
  3412  0022E0  0E00               	movlw	0
  3413  0022E2                     u1530:
  3414  0022E2  6F68               	movwf	??_getByte& (0+255),b
  3415  0022E4  6B69               	clrf	(??_getByte+1)& (0+255),b
  3416  0022E6  B168               	btfsc	??_getByte& (0+255),0,b
  3417  0022E8  EF78  F011         	goto	u1541
  3418  0022EC  EF7A  F011         	goto	u1540
  3419  0022F0                     u1541:
  3420  0022F0  EF5C  F011         	goto	l2617
  3421  0022F4                     u1540:
  3422  0022F4                     
  3423                           ; BSR set to: 0
  3424                           ;dht11.c: 9:         _delay((unsigned long)((30)*(10000000/4000000.0)));
  3425  0022F4  0E19               	movlw	25
  3426  0022F6                     u2657:
  3427  0022F6  2EE8               	decfsz	wreg,f,c
  3428  0022F8  D7FE               	bra	u2657
  3429  0022FA                     
  3430                           ;dht11.c: 10:         if(!PORTDbits.RD0 & 1)
  3431  0022FA  A083               	btfss	131,0,c	;volatile
  3432  0022FC  EF82  F011         	goto	u1551
  3433  002300  EF85  F011         	goto	u1550
  3434  002304                     u1551:
  3435  002304  0E01               	movlw	1
  3436  002306  EF86  F011         	goto	u1560
  3437  00230A                     u1550:
  3438  00230A  0E00               	movlw	0
  3439  00230C                     u1560:
  3440  00230C  0100               	movlb	0	; () banked
  3441  00230E  6F68               	movwf	??_getByte& (0+255),b
  3442  002310  6B69               	clrf	(??_getByte+1)& (0+255),b
  3443  002312  A168               	btfss	??_getByte& (0+255),0,b
  3444  002314  EF8E  F011         	goto	u1571
  3445  002318  EF90  F011         	goto	u1570
  3446  00231C                     u1571:
  3447  00231C  EFA3  F011         	goto	l2631
  3448  002320                     u1570:
  3449  002320                     
  3450                           ; BSR set to: 0
  3451                           ;dht11.c: 11:             i&= ~(1<<(7 - j));
  3452  002320  516B               	movf	getByte@j& (0+255),w,b
  3453  002322  0807               	sublw	7
  3454  002324  6F68               	movwf	??_getByte& (0+255),b
  3455  002326  0E01               	movlw	1
  3456  002328  6F69               	movwf	(??_getByte+1)& (0+255),b
  3457  00232A  2B68               	incf	??_getByte& (0+255),f,b
  3458  00232C  EF9A  F011         	goto	u1584
  3459  002330                     u1585:
  3460  002330  90D8               	bcf	status,0,c
  3461  002332  3769               	rlcf	(??_getByte+1)& (0+255),f,b
  3462  002334                     u1584:
  3463  002334  2F68               	decfsz	??_getByte& (0+255),f,b
  3464  002336  EF98  F011         	goto	u1585
  3465  00233A  0100               	movlb	0	; () banked
  3466  00233C  5169               	movf	(??_getByte+1)& (0+255),w,b
  3467  00233E  0AFF               	xorlw	255
  3468  002340  176A               	andwf	getByte@i& (0+255),f,b
  3469  002342  EFC4  F011         	goto	l657
  3470  002346                     l2631:
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;dht11.c: 13:             i|= (1 << (7 - j));
  3474  002346  516B               	movf	getByte@j& (0+255),w,b
  3475  002348  0807               	sublw	7
  3476  00234A  6F68               	movwf	??_getByte& (0+255),b
  3477  00234C  0E01               	movlw	1
  3478  00234E  6F69               	movwf	(??_getByte+1)& (0+255),b
  3479  002350  2B68               	incf	??_getByte& (0+255),f,b
  3480  002352  EFAD  F011         	goto	u1594
  3481  002356                     u1595:
  3482  002356  90D8               	bcf	status,0,c
  3483  002358  3769               	rlcf	(??_getByte+1)& (0+255),f,b
  3484  00235A                     u1594:
  3485  00235A  2F68               	decfsz	??_getByte& (0+255),f,b
  3486  00235C  EFAB  F011         	goto	u1595
  3487  002360  0100               	movlb	0	; () banked
  3488  002362  5169               	movf	(??_getByte+1)& (0+255),w,b
  3489  002364  136A               	iorwf	getByte@i& (0+255),f,b
  3490  002366                     
  3491                           ; BSR set to: 0
  3492                           ;dht11.c: 14:             time_out_dht = 100;
  3493  002366  0E00               	movlw	0
  3494  002368  6E5E               	movwf	(_time_out_dht+1)^0,c
  3495  00236A  0E64               	movlw	100
  3496  00236C  6E5D               	movwf	_time_out_dht^0,c
  3497  00236E  EFC4  F011         	goto	l657
  3498  002372                     l2635:
  3499                           
  3500                           ;dht11.c: 17:             if(time_out_dht == 0) return 0;
  3501  002372  505D               	movf	_time_out_dht^0,w,c
  3502  002374  105E               	iorwf	(_time_out_dht+1)^0,w,c
  3503  002376  A4D8               	btfss	status,2,c
  3504  002378  EFC0  F011         	goto	u1601
  3505  00237C  EFC2  F011         	goto	u1600
  3506  002380                     u1601:
  3507  002380  EFC4  F011         	goto	l657
  3508  002384                     u1600:
  3509  002384  EF65  F011         	goto	l2619
  3510  002388                     l657:
  3511                           
  3512                           ;dht11.c: 16:         while(PORTDbits.RD0 & 1)
  3513  002388  B083               	btfsc	131,0,c	;volatile
  3514  00238A  EFC9  F011         	goto	u1611
  3515  00238E  EFCB  F011         	goto	u1610
  3516  002392                     u1611:
  3517  002392  EFB9  F011         	goto	l2635
  3518  002396                     u1610:
  3519  002396                     
  3520                           ;dht11.c: 18:     }
  3521  002396  0100               	movlb	0	; () banked
  3522  002398  2B6B               	incf	getByte@j& (0+255),f,b
  3523  00239A                     
  3524                           ; BSR set to: 0
  3525  00239A  0E07               	movlw	7
  3526  00239C  656B               	cpfsgt	getByte@j& (0+255),b
  3527  00239E  EFD3  F011         	goto	u1621
  3528  0023A2  EFD5  F011         	goto	u1620
  3529  0023A6                     u1621:
  3530  0023A6  EF56  F011         	goto	l2615
  3531  0023AA                     u1620:
  3532  0023AA                     
  3533                           ; BSR set to: 0
  3534                           ;dht11.c: 19:     return i;
  3535  0023AA  516A               	movf	getByte@i& (0+255),w,b
  3536  0023AC                     l653:
  3537  0023AC  0012               	return		;funcret
  3538  0023AE                     __end_of_getByte:
  3539                           	opt callstack 0
  3540                           
  3541 ;; *************** function _print_temp_humid *****************
  3542 ;; Defined at:
  3543 ;;		line 85 in file "dht11.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;		None
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;		None
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  1    wreg      void 
  3550 ;; Registers used:
  3551 ;;		wreg, status,2, status,0, cstack
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3561 ;;Total ram usage:        0 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; Hardware stack levels required when called:   10
  3564 ;; This function calls:
  3565 ;;		___awdiv
  3566 ;;		___awmod
  3567 ;;		_printLCD_char
  3568 ;; This function is called by:
  3569 ;;		_get_temp_humid
  3570 ;; This function uses a non-reentrant model
  3571 ;;
  3572                           
  3573                           	psect	text12
  3574  0028A0                     __ptext12:
  3575                           	opt callstack 0
  3576  0028A0                     _print_temp_humid:
  3577                           	opt callstack 19
  3578  0028A0                     
  3579                           ;dht11.c: 87:     printLCD_char(1 , 5 , temper[0]/10 +'0');
  3580  0028A0  0E00               	movlw	0
  3581  0028A2  0100               	movlb	0	; () banked
  3582  0028A4  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  3583  0028A6  0E01               	movlw	1
  3584  0028A8  6F70               	movwf	printLCD_char@line& (0+255),b
  3585  0028AA  0E05               	movlw	5
  3586  0028AC  6F72               	movwf	printLCD_char@position& (0+255),b
  3587  0028AE  C0E4  F068         	movff	_temper,___awdiv@dividend
  3588  0028B2  6B69               	clrf	(___awdiv@dividend+1)& (0+255),b
  3589  0028B4  0E00               	movlw	0
  3590  0028B6  6F6B               	movwf	(___awdiv@divisor+1)& (0+255),b
  3591  0028B8  0E0A               	movlw	10
  3592  0028BA  6F6A               	movwf	___awdiv@divisor& (0+255),b
  3593  0028BC  EC8C  F013         	call	___awdiv	;wreg free
  3594  0028C0  0100               	movlb	0	; () banked
  3595  0028C2  5168               	movf	?___awdiv& (0+255),w,b
  3596  0028C4  0F30               	addlw	48
  3597  0028C6  6F73               	movwf	printLCD_char@c& (0+255),b
  3598  0028C8  ECFA  F018         	call	_printLCD_char	;wreg free
  3599                           
  3600                           ;dht11.c: 88:     printLCD_char(1 , 6 , temper[0]%10 +'0');
  3601  0028CC  0E00               	movlw	0
  3602  0028CE  0100               	movlb	0	; () banked
  3603  0028D0  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  3604  0028D2  0E01               	movlw	1
  3605  0028D4  6F70               	movwf	printLCD_char@line& (0+255),b
  3606  0028D6  0E06               	movlw	6
  3607  0028D8  6F72               	movwf	printLCD_char@position& (0+255),b
  3608  0028DA  C0E4  F068         	movff	_temper,___awmod@dividend
  3609  0028DE  6B69               	clrf	(___awmod@dividend+1)& (0+255),b
  3610  0028E0  0E00               	movlw	0
  3611  0028E2  6F6B               	movwf	(___awmod@divisor+1)& (0+255),b
  3612  0028E4  0E0A               	movlw	10
  3613  0028E6  6F6A               	movwf	___awmod@divisor& (0+255),b
  3614  0028E8  ECA9  F014         	call	___awmod	;wreg free
  3615  0028EC  0100               	movlb	0	; () banked
  3616  0028EE  5168               	movf	?___awmod& (0+255),w,b
  3617  0028F0  0F30               	addlw	48
  3618  0028F2  6F73               	movwf	printLCD_char@c& (0+255),b
  3619  0028F4  ECFA  F018         	call	_printLCD_char	;wreg free
  3620                           
  3621                           ;dht11.c: 89:     printLCD_char(1 , 14 , humid[0]/10 +'0');
  3622  0028F8  0E00               	movlw	0
  3623  0028FA  0100               	movlb	0	; () banked
  3624  0028FC  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  3625  0028FE  0E01               	movlw	1
  3626  002900  6F70               	movwf	printLCD_char@line& (0+255),b
  3627  002902  0E0E               	movlw	14
  3628  002904  6F72               	movwf	printLCD_char@position& (0+255),b
  3629  002906  C0E6  F068         	movff	_humid,___awdiv@dividend
  3630  00290A  6B69               	clrf	(___awdiv@dividend+1)& (0+255),b
  3631  00290C  0E00               	movlw	0
  3632  00290E  6F6B               	movwf	(___awdiv@divisor+1)& (0+255),b
  3633  002910  0E0A               	movlw	10
  3634  002912  6F6A               	movwf	___awdiv@divisor& (0+255),b
  3635  002914  EC8C  F013         	call	___awdiv	;wreg free
  3636  002918  0100               	movlb	0	; () banked
  3637  00291A  5168               	movf	?___awdiv& (0+255),w,b
  3638  00291C  0F30               	addlw	48
  3639  00291E  6F73               	movwf	printLCD_char@c& (0+255),b
  3640  002920  ECFA  F018         	call	_printLCD_char	;wreg free
  3641                           
  3642                           ;dht11.c: 90:     printLCD_char(1 , 15 , humid[0]%10 +'0');
  3643  002924  0E00               	movlw	0
  3644  002926  0100               	movlb	0	; () banked
  3645  002928  6F71               	movwf	(printLCD_char@line+1)& (0+255),b
  3646  00292A  0E01               	movlw	1
  3647  00292C  6F70               	movwf	printLCD_char@line& (0+255),b
  3648  00292E  0E0F               	movlw	15
  3649  002930  6F72               	movwf	printLCD_char@position& (0+255),b
  3650  002932  C0E6  F068         	movff	_humid,___awmod@dividend
  3651  002936  6B69               	clrf	(___awmod@dividend+1)& (0+255),b
  3652  002938  0E00               	movlw	0
  3653  00293A  6F6B               	movwf	(___awmod@divisor+1)& (0+255),b
  3654  00293C  0E0A               	movlw	10
  3655  00293E  6F6A               	movwf	___awmod@divisor& (0+255),b
  3656  002940  ECA9  F014         	call	___awmod	;wreg free
  3657  002944  0100               	movlb	0	; () banked
  3658  002946  5168               	movf	?___awmod& (0+255),w,b
  3659  002948  0F30               	addlw	48
  3660  00294A  6F73               	movwf	printLCD_char@c& (0+255),b
  3661  00294C  ECFA  F018         	call	_printLCD_char	;wreg free
  3662  002950  0012               	return		;funcret
  3663  002952                     __end_of_print_temp_humid:
  3664                           	opt callstack 0
  3665                           
  3666 ;; *************** function ___awdiv *****************
  3667 ;; Defined at:
  3668 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;  dividend        2    8[BANK0 ] int 
  3671 ;;  divisor         2   10[BANK0 ] int 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  quotient        2   14[BANK0 ] int 
  3674 ;;  sign            1   13[BANK0 ] unsigned char 
  3675 ;;  counter         1   12[BANK0 ] unsigned char 
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  2    8[BANK0 ] int 
  3678 ;; Registers used:
  3679 ;;		wreg, status,2, status,0
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3685 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3689 ;;Total ram usage:        8 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    6
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		_heater_heatpumper
  3696 ;;		_print_temp_humid
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700                           	psect	text13
  3701  002718                     __ptext13:
  3702                           	opt callstack 0
  3703  002718                     ___awdiv:
  3704                           	opt callstack 23
  3705  002718  0E00               	movlw	0
  3706  00271A  0100               	movlb	0	; () banked
  3707  00271C  6F6D               	movwf	___awdiv@sign& (0+255),b
  3708  00271E                     
  3709                           ; BSR set to: 0
  3710  00271E  BF6B               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  3711  002720  EF96  F013         	goto	u1630
  3712  002724  EF94  F013         	goto	u1631
  3713  002728                     u1631:
  3714  002728  EF9C  F013         	goto	l2657
  3715  00272C                     u1630:
  3716  00272C                     
  3717                           ; BSR set to: 0
  3718  00272C  6D6A               	negf	___awdiv@divisor& (0+255),b
  3719  00272E  1F6B               	comf	(___awdiv@divisor+1)& (0+255),f,b
  3720  002730  B0D8               	btfsc	status,0,c
  3721  002732  2B6B               	incf	(___awdiv@divisor+1)& (0+255),f,b
  3722  002734                     
  3723                           ; BSR set to: 0
  3724  002734  0E01               	movlw	1
  3725  002736  6F6D               	movwf	___awdiv@sign& (0+255),b
  3726  002738                     l2657:
  3727                           
  3728                           ; BSR set to: 0
  3729  002738  BF69               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  3730  00273A  EFA3  F013         	goto	u1640
  3731  00273E  EFA1  F013         	goto	u1641
  3732  002742                     u1641:
  3733  002742  EFA9  F013         	goto	l2663
  3734  002746                     u1640:
  3735  002746                     
  3736                           ; BSR set to: 0
  3737  002746  6D68               	negf	___awdiv@dividend& (0+255),b
  3738  002748  1F69               	comf	(___awdiv@dividend+1)& (0+255),f,b
  3739  00274A  B0D8               	btfsc	status,0,c
  3740  00274C  2B69               	incf	(___awdiv@dividend+1)& (0+255),f,b
  3741  00274E                     
  3742                           ; BSR set to: 0
  3743  00274E  0E01               	movlw	1
  3744  002750  1B6D               	xorwf	___awdiv@sign& (0+255),f,b
  3745  002752                     l2663:
  3746                           
  3747                           ; BSR set to: 0
  3748  002752  0E00               	movlw	0
  3749  002754  6F6F               	movwf	(___awdiv@quotient+1)& (0+255),b
  3750  002756  0E00               	movlw	0
  3751  002758  6F6E               	movwf	___awdiv@quotient& (0+255),b
  3752  00275A                     
  3753                           ; BSR set to: 0
  3754  00275A  516A               	movf	___awdiv@divisor& (0+255),w,b
  3755  00275C  116B               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  3756  00275E  B4D8               	btfsc	status,2,c
  3757  002760  EFB4  F013         	goto	u1651
  3758  002764  EFB6  F013         	goto	u1650
  3759  002768                     u1651:
  3760  002768  EFDE  F013         	goto	l2685
  3761  00276C                     u1650:
  3762  00276C                     
  3763                           ; BSR set to: 0
  3764  00276C  0E01               	movlw	1
  3765  00276E  6F6C               	movwf	___awdiv@counter& (0+255),b
  3766  002770  EFBE  F013         	goto	l2671
  3767  002774                     l2669:
  3768                           
  3769                           ; BSR set to: 0
  3770  002774  90D8               	bcf	status,0,c
  3771  002776  376A               	rlcf	___awdiv@divisor& (0+255),f,b
  3772  002778  376B               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3773  00277A  2B6C               	incf	___awdiv@counter& (0+255),f,b
  3774  00277C                     l2671:
  3775                           
  3776                           ; BSR set to: 0
  3777  00277C  AF6B               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3778  00277E  EFC3  F013         	goto	u1661
  3779  002782  EFC5  F013         	goto	u1660
  3780  002786                     u1661:
  3781  002786  EFBA  F013         	goto	l2669
  3782  00278A                     u1660:
  3783  00278A                     l2673:
  3784                           
  3785                           ; BSR set to: 0
  3786  00278A  90D8               	bcf	status,0,c
  3787  00278C  376E               	rlcf	___awdiv@quotient& (0+255),f,b
  3788  00278E  376F               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3789  002790                     
  3790                           ; BSR set to: 0
  3791  002790  516A               	movf	___awdiv@divisor& (0+255),w,b
  3792  002792  5D68               	subwf	___awdiv@dividend& (0+255),w,b
  3793  002794  516B               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3794  002796  5969               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3795  002798  A0D8               	btfss	status,0,c
  3796  00279A  EFD1  F013         	goto	u1671
  3797  00279E  EFD3  F013         	goto	u1670
  3798  0027A2                     u1671:
  3799  0027A2  EFD8  F013         	goto	l2681
  3800  0027A6                     u1670:
  3801  0027A6                     
  3802                           ; BSR set to: 0
  3803  0027A6  516A               	movf	___awdiv@divisor& (0+255),w,b
  3804  0027A8  5F68               	subwf	___awdiv@dividend& (0+255),f,b
  3805  0027AA  516B               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3806  0027AC  5B69               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3807  0027AE                     
  3808                           ; BSR set to: 0
  3809  0027AE  816E               	bsf	___awdiv@quotient& (0+255),0,b
  3810  0027B0                     l2681:
  3811                           
  3812                           ; BSR set to: 0
  3813  0027B0  90D8               	bcf	status,0,c
  3814  0027B2  336B               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3815  0027B4  336A               	rrcf	___awdiv@divisor& (0+255),f,b
  3816  0027B6                     
  3817                           ; BSR set to: 0
  3818  0027B6  2F6C               	decfsz	___awdiv@counter& (0+255),f,b
  3819  0027B8  EFC5  F013         	goto	l2673
  3820  0027BC                     l2685:
  3821                           
  3822                           ; BSR set to: 0
  3823  0027BC  516D               	movf	___awdiv@sign& (0+255),w,b
  3824  0027BE  B4D8               	btfsc	status,2,c
  3825  0027C0  EFE4  F013         	goto	u1681
  3826  0027C4  EFE6  F013         	goto	u1680
  3827  0027C8                     u1681:
  3828  0027C8  EFEA  F013         	goto	l2689
  3829  0027CC                     u1680:
  3830  0027CC                     
  3831                           ; BSR set to: 0
  3832  0027CC  6D6E               	negf	___awdiv@quotient& (0+255),b
  3833  0027CE  1F6F               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3834  0027D0  B0D8               	btfsc	status,0,c
  3835  0027D2  2B6F               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3836  0027D4                     l2689:
  3837                           
  3838                           ; BSR set to: 0
  3839  0027D4  C06E  F068         	movff	___awdiv@quotient,?___awdiv
  3840  0027D8  C06F  F069         	movff	___awdiv@quotient+1,?___awdiv+1
  3841  0027DC                     
  3842                           ; BSR set to: 0
  3843  0027DC  0012               	return		;funcret
  3844  0027DE                     __end_of___awdiv:
  3845                           	opt callstack 0
  3846                           
  3847 ;; *************** function _dequeue *****************
  3848 ;; Defined at:
  3849 ;;		line 155 in file "linked_list.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;		None
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;  temp            3   19[BANK0 ] PTR FTN()void 
  3854 ;;		 -> get_temp_humid(1), check_button(1), heater_heatpumper(1), NULL(0), 
  3855 ;; Return value:  Size  Location     Type
  3856 ;;                  3   16[BANK0 ] PTR FTN()void 
  3857 ;; Registers used:
  3858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3859 ;; Tracked objects:
  3860 ;;		On entry : 0/0
  3861 ;;		On exit  : 0/0
  3862 ;;		Unchanged: 0/0
  3863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3864 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3865 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3867 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3868 ;;Total ram usage:        6 bytes
  3869 ;; Hardware stack levels used:    1
  3870 ;; Hardware stack levels required when called:    8
  3871 ;; This function calls:
  3872 ;;		___awmod
  3873 ;;		___wmul
  3874 ;;		_init_queue
  3875 ;; This function is called by:
  3876 ;;		_main
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           	psect	text14
  3881  002C78                     __ptext14:
  3882                           	opt callstack 0
  3883  002C78                     _dequeue:
  3884                           	opt callstack 22
  3885  002C78                     
  3886                           ;linked_list.c: 157:     FUNCTION_PTR temp = queue[front];
  3887  002C78  C0D4  F068         	movff	_front,___wmul@multiplier
  3888  002C7C  C0D5  F069         	movff	_front+1,___wmul@multiplier+1
  3889  002C80  0E00               	movlw	0
  3890  002C82  0100               	movlb	0	; () banked
  3891  002C84  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3892  002C86  0E03               	movlw	3
  3893  002C88  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  3894  002C8A  ECF5  F019         	call	___wmul	;wreg free
  3895  002C8E  0E28               	movlw	low _queue
  3896  002C90  0100               	movlb	0	; () banked
  3897  002C92  2568               	addwf	?___wmul& (0+255),w,b
  3898  002C94  6ED9               	movwf	fsr2l,c
  3899  002C96  0E01               	movlw	high _queue
  3900  002C98  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  3901  002C9A  6EDA               	movwf	fsr2h,c
  3902  002C9C  CFDE F073          	movff	postinc2,dequeue@temp
  3903  002CA0  CFDE F074          	movff	postinc2,dequeue@temp+1
  3904  002CA4  CFDD F075          	movff	postdec2,dequeue@temp+2
  3905  002CA8                     
  3906                           ; BSR set to: 0
  3907                           ;linked_list.c: 158:     no_q --;
  3908  002CA8  07D0               	decf	_no_q& (0+255),f,b
  3909  002CAA  A0D8               	btfss	status,0,c
  3910  002CAC  07D1               	decf	(_no_q+1)& (0+255),f,b
  3911  002CAE                     
  3912                           ; BSR set to: 0
  3913                           ;linked_list.c: 159:     if (no_q ==0)
  3914  002CAE  51D0               	movf	_no_q& (0+255),w,b
  3915  002CB0  11D1               	iorwf	(_no_q+1)& (0+255),w,b
  3916  002CB2  A4D8               	btfss	status,2,c
  3917  002CB4  EF5E  F016         	goto	u2271
  3918  002CB8  EF60  F016         	goto	u2270
  3919  002CBC                     u2271:
  3920  002CBC  EF6A  F016         	goto	l3083
  3921  002CC0                     u2270:
  3922  002CC0                     
  3923                           ; BSR set to: 0
  3924                           ;linked_list.c: 160:     {;linked_list.c: 161:         init_queue();
  3925  002CC0  ECA6  F017         	call	_init_queue	;wreg free
  3926  002CC4                     l3077:
  3927                           
  3928                           ;linked_list.c: 162:         return temp;
  3929  002CC4  C073  F070         	movff	dequeue@temp,?_dequeue
  3930  002CC8  C074  F071         	movff	dequeue@temp+1,?_dequeue+1
  3931  002CCC  C075  F072         	movff	dequeue@temp+2,?_dequeue+2
  3932  002CD0  EF7C  F016         	goto	l355
  3933  002CD4                     l3083:
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;linked_list.c: 165:         front = (front +1)%1000;
  3937  002CD4  0E01               	movlw	1
  3938  002CD6  25D4               	addwf	_front& (0+255),w,b
  3939  002CD8  6F68               	movwf	___awmod@dividend& (0+255),b
  3940  002CDA  0E00               	movlw	0
  3941  002CDC  21D5               	addwfc	(_front+1)& (0+255),w,b
  3942  002CDE  6F69               	movwf	(___awmod@dividend+1)& (0+255),b
  3943  002CE0  0E03               	movlw	3
  3944  002CE2  6F6B               	movwf	(___awmod@divisor+1)& (0+255),b
  3945  002CE4  0EE8               	movlw	232
  3946  002CE6  6F6A               	movwf	___awmod@divisor& (0+255),b
  3947  002CE8  ECA9  F014         	call	___awmod	;wreg free
  3948  002CEC  C068  F0D4         	movff	?___awmod,_front
  3949  002CF0  C069  F0D5         	movff	?___awmod+1,_front+1
  3950  002CF4  EF62  F016         	goto	l3077
  3951  002CF8                     l355:
  3952  002CF8  0012               	return		;funcret
  3953  002CFA                     __end_of_dequeue:
  3954                           	opt callstack 0
  3955                           
  3956 ;; *************** function ___awmod *****************
  3957 ;; Defined at:
  3958 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  dividend        2    8[BANK0 ] int 
  3961 ;;  divisor         2   10[BANK0 ] int 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  sign            1   13[BANK0 ] unsigned char 
  3964 ;;  counter         1   12[BANK0 ] unsigned char 
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  2    8[BANK0 ] int 
  3967 ;; Registers used:
  3968 ;;		wreg, status,2, status,0
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3974 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3975 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3977 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3978 ;;Total ram usage:        6 bytes
  3979 ;; Hardware stack levels used:    1
  3980 ;; Hardware stack levels required when called:    6
  3981 ;; This function calls:
  3982 ;;		Nothing
  3983 ;; This function is called by:
  3984 ;;		_dequeue
  3985 ;;		_heater_heatpumper
  3986 ;;		_print_temp_humid
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           	psect	text15
  3991  002952                     __ptext15:
  3992                           	opt callstack 0
  3993  002952                     ___awmod:
  3994                           	opt callstack 23
  3995  002952  0E00               	movlw	0
  3996  002954  0100               	movlb	0	; () banked
  3997  002956  6F6D               	movwf	___awmod@sign& (0+255),b
  3998  002958                     
  3999                           ; BSR set to: 0
  4000  002958  BF69               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  4001  00295A  EFB3  F014         	goto	u1690
  4002  00295E  EFB1  F014         	goto	u1691
  4003  002962                     u1691:
  4004  002962  EFB9  F014         	goto	l2701
  4005  002966                     u1690:
  4006  002966                     
  4007                           ; BSR set to: 0
  4008  002966  6D68               	negf	___awmod@dividend& (0+255),b
  4009  002968  1F69               	comf	(___awmod@dividend+1)& (0+255),f,b
  4010  00296A  B0D8               	btfsc	status,0,c
  4011  00296C  2B69               	incf	(___awmod@dividend+1)& (0+255),f,b
  4012  00296E                     
  4013                           ; BSR set to: 0
  4014  00296E  0E01               	movlw	1
  4015  002970  6F6D               	movwf	___awmod@sign& (0+255),b
  4016  002972                     l2701:
  4017                           
  4018                           ; BSR set to: 0
  4019  002972  BF6B               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  4020  002974  EFC0  F014         	goto	u1700
  4021  002978  EFBE  F014         	goto	u1701
  4022  00297C                     u1701:
  4023  00297C  EFC4  F014         	goto	l2705
  4024  002980                     u1700:
  4025  002980                     
  4026                           ; BSR set to: 0
  4027  002980  6D6A               	negf	___awmod@divisor& (0+255),b
  4028  002982  1F6B               	comf	(___awmod@divisor+1)& (0+255),f,b
  4029  002984  B0D8               	btfsc	status,0,c
  4030  002986  2B6B               	incf	(___awmod@divisor+1)& (0+255),f,b
  4031  002988                     l2705:
  4032                           
  4033                           ; BSR set to: 0
  4034  002988  516A               	movf	___awmod@divisor& (0+255),w,b
  4035  00298A  116B               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  4036  00298C  B4D8               	btfsc	status,2,c
  4037  00298E  EFCB  F014         	goto	u1711
  4038  002992  EFCD  F014         	goto	u1710
  4039  002996                     u1711:
  4040  002996  EFF1  F014         	goto	l2721
  4041  00299A                     u1710:
  4042  00299A                     
  4043                           ; BSR set to: 0
  4044  00299A  0E01               	movlw	1
  4045  00299C  6F6C               	movwf	___awmod@counter& (0+255),b
  4046  00299E  EFD5  F014         	goto	l2711
  4047  0029A2                     l2709:
  4048                           
  4049                           ; BSR set to: 0
  4050  0029A2  90D8               	bcf	status,0,c
  4051  0029A4  376A               	rlcf	___awmod@divisor& (0+255),f,b
  4052  0029A6  376B               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4053  0029A8  2B6C               	incf	___awmod@counter& (0+255),f,b
  4054  0029AA                     l2711:
  4055                           
  4056                           ; BSR set to: 0
  4057  0029AA  AF6B               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4058  0029AC  EFDA  F014         	goto	u1721
  4059  0029B0  EFDC  F014         	goto	u1720
  4060  0029B4                     u1721:
  4061  0029B4  EFD1  F014         	goto	l2709
  4062  0029B8                     u1720:
  4063  0029B8                     l2713:
  4064                           
  4065                           ; BSR set to: 0
  4066  0029B8  516A               	movf	___awmod@divisor& (0+255),w,b
  4067  0029BA  5D68               	subwf	___awmod@dividend& (0+255),w,b
  4068  0029BC  516B               	movf	(___awmod@divisor+1)& (0+255),w,b
  4069  0029BE  5969               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4070  0029C0  A0D8               	btfss	status,0,c
  4071  0029C2  EFE5  F014         	goto	u1731
  4072  0029C6  EFE7  F014         	goto	u1730
  4073  0029CA                     u1731:
  4074  0029CA  EFEB  F014         	goto	l2717
  4075  0029CE                     u1730:
  4076  0029CE                     
  4077                           ; BSR set to: 0
  4078  0029CE  516A               	movf	___awmod@divisor& (0+255),w,b
  4079  0029D0  5F68               	subwf	___awmod@dividend& (0+255),f,b
  4080  0029D2  516B               	movf	(___awmod@divisor+1)& (0+255),w,b
  4081  0029D4  5B69               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4082  0029D6                     l2717:
  4083                           
  4084                           ; BSR set to: 0
  4085  0029D6  90D8               	bcf	status,0,c
  4086  0029D8  336B               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4087  0029DA  336A               	rrcf	___awmod@divisor& (0+255),f,b
  4088  0029DC                     
  4089                           ; BSR set to: 0
  4090  0029DC  2F6C               	decfsz	___awmod@counter& (0+255),f,b
  4091  0029DE  EFDC  F014         	goto	l2713
  4092  0029E2                     l2721:
  4093                           
  4094                           ; BSR set to: 0
  4095  0029E2  516D               	movf	___awmod@sign& (0+255),w,b
  4096  0029E4  B4D8               	btfsc	status,2,c
  4097  0029E6  EFF7  F014         	goto	u1741
  4098  0029EA  EFF9  F014         	goto	u1740
  4099  0029EE                     u1741:
  4100  0029EE  EFFD  F014         	goto	l2725
  4101  0029F2                     u1740:
  4102  0029F2                     
  4103                           ; BSR set to: 0
  4104  0029F2  6D68               	negf	___awmod@dividend& (0+255),b
  4105  0029F4  1F69               	comf	(___awmod@dividend+1)& (0+255),f,b
  4106  0029F6  B0D8               	btfsc	status,0,c
  4107  0029F8  2B69               	incf	(___awmod@dividend+1)& (0+255),f,b
  4108  0029FA                     l2725:
  4109                           
  4110                           ; BSR set to: 0
  4111  0029FA  C068  F068         	movff	___awmod@dividend,?___awmod
  4112  0029FE  C069  F069         	movff	___awmod@dividend+1,?___awmod+1
  4113  002A02                     
  4114                           ; BSR set to: 0
  4115  002A02  0012               	return		;funcret
  4116  002A04                     __end_of___awmod:
  4117                           	opt callstack 0
  4118                           
  4119 ;; *************** function _printLCD_string *****************
  4120 ;; Defined at:
  4121 ;;		line 168 in file "BBSPI_LCD.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;  line            2   17[BANK0 ] int 
  4124 ;;  array           2   19[BANK0 ] PTR unsigned char 
  4125 ;;		 -> STR_13(17), STR_12(7), STR_11(17), STR_10(6), 
  4126 ;;		 -> STR_9(17), STR_8(6), STR_7(15), STR_6(17), 
  4127 ;;		 -> STR_5(7), STR_4(17), STR_3(6), STR_2(17), 
  4128 ;;		 -> STR_1(17), 
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;		None
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      void 
  4133 ;; Registers used:
  4134 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4140 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4143 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4144 ;;Total ram usage:        4 bytes
  4145 ;; Hardware stack levels used:    1
  4146 ;; Hardware stack levels required when called:   10
  4147 ;; This function calls:
  4148 ;;		_LCDPutInst
  4149 ;;		_LCDPutStr
  4150 ;; This function is called by:
  4151 ;;		_heater_heatpumper
  4152 ;;		_check_button
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text16
  4157  00330A                     __ptext16:
  4158                           	opt callstack 0
  4159  00330A                     _printLCD_string:
  4160                           	opt callstack 19
  4161  00330A                     
  4162                           ;BBSPI_LCD.c: 169:     if (line == 0)
  4163  00330A  0100               	movlb	0	; () banked
  4164  00330C  5171               	movf	printLCD_string@line& (0+255),w,b
  4165  00330E  1172               	iorwf	(printLCD_string@line+1)& (0+255),w,b
  4166  003310  A4D8               	btfss	status,2,c
  4167  003312  EF8D  F019         	goto	u1871
  4168  003316  EF8F  F019         	goto	u1870
  4169  00331A                     u1871:
  4170  00331A  EF9A  F019         	goto	l2823
  4171  00331E                     u1870:
  4172  00331E                     
  4173                           ; BSR set to: 0
  4174                           ;BBSPI_LCD.c: 170:     {;BBSPI_LCD.c: 171:         LCDPutInst(0x80);
  4175  00331E  0E80               	movlw	128
  4176  003320  ECDB  F017         	call	_LCDPutInst
  4177  003324                     
  4178                           ;BBSPI_LCD.c: 172:         LCDPutStr(array);
  4179  003324  C073  F06F         	movff	printLCD_string@array,LCDPutStr@ptr
  4180  003328  C074  F070         	movff	printLCD_string@array+1,LCDPutStr@ptr+1
  4181  00332C  EC65  F019         	call	_LCDPutStr	;wreg free
  4182                           
  4183                           ;BBSPI_LCD.c: 173:     }
  4184  003330  EFA3  F019         	goto	l62
  4185  003334                     l2823:
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;BBSPI_LCD.c: 175:     {;BBSPI_LCD.c: 176:         LCDPutInst(0xC0);
  4189  003334  0EC0               	movlw	192
  4190  003336  ECDB  F017         	call	_LCDPutInst
  4191  00333A                     
  4192                           ;BBSPI_LCD.c: 177:         LCDPutStr(array);
  4193  00333A  C073  F06F         	movff	printLCD_string@array,LCDPutStr@ptr
  4194  00333E  C074  F070         	movff	printLCD_string@array+1,LCDPutStr@ptr+1
  4195  003342  EC65  F019         	call	_LCDPutStr	;wreg free
  4196  003346                     l62:
  4197  003346  0012               	return		;funcret
  4198  003348                     __end_of_printLCD_string:
  4199                           	opt callstack 0
  4200                           
  4201 ;; *************** function _LCDPutStr *****************
  4202 ;; Defined at:
  4203 ;;		line 163 in file "BBSPI_LCD.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;  ptr             2   15[BANK0 ] PTR const unsigned char 
  4206 ;;		 -> STR_13(17), STR_12(7), STR_11(17), STR_10(6), 
  4207 ;;		 -> STR_9(17), STR_8(6), STR_7(15), STR_6(17), 
  4208 ;;		 -> STR_5(7), STR_4(17), STR_3(6), STR_2(17), 
  4209 ;;		 -> STR_1(17), 
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;		None
  4212 ;; Return value:  Size  Location     Type
  4213 ;;                  1    wreg      void 
  4214 ;; Registers used:
  4215 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4221 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4224 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4225 ;;Total ram usage:        2 bytes
  4226 ;; Hardware stack levels used:    1
  4227 ;; Hardware stack levels required when called:    9
  4228 ;; This function calls:
  4229 ;;		_LCDPutChar
  4230 ;; This function is called by:
  4231 ;;		_printLCD_string
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           	psect	text17
  4236  0032CA                     __ptext17:
  4237                           	opt callstack 0
  4238  0032CA                     _LCDPutStr:
  4239                           	opt callstack 19
  4240  0032CA                     
  4241                           ;BBSPI_LCD.c: 163: void LCDPutStr (const char *ptr);BBSPI_LCD.c: 164: {;BBSPI_LCD.c: 165
      +                          :     while(*ptr) LCDPutChar(*(ptr++));
  4242  0032CA  EF74  F019         	goto	l2543
  4243  0032CE                     l2539:
  4244  0032CE  C06F  FFF6         	movff	LCDPutStr@ptr,tblptrl
  4245  0032D2  C070  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  4246  0032D6                     	if	0	;tblptru may be non-zero
  4247  0032D6                     	endif
  4248  0032D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4249  0032D6  0E00               	movlw	low (__mediumconst shr (0+16))
  4250  0032D8  6EF8               	movwf	tblptru,c
  4251  0032DA                     	endif
  4252  0032DA  0008               	tblrd		*
  4253  0032DC  50F5               	movf	tablat,w,c
  4254  0032DE  EC71  F017         	call	_LCDPutChar
  4255  0032E2  0100               	movlb	0	; () banked
  4256  0032E4  4B6F               	infsnz	LCDPutStr@ptr& (0+255),f,b
  4257  0032E6  2B70               	incf	(LCDPutStr@ptr+1)& (0+255),f,b
  4258  0032E8                     l2543:
  4259  0032E8  C06F  FFF6         	movff	LCDPutStr@ptr,tblptrl
  4260  0032EC  C070  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  4261  0032F0                     	if	0	;tblptru may be non-zero
  4262  0032F0                     	endif
  4263  0032F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4264  0032F0  0E00               	movlw	low (__mediumconst shr (0+16))
  4265  0032F2  6EF8               	movwf	tblptru,c
  4266  0032F4                     	endif
  4267  0032F4  0008               	tblrd		*
  4268  0032F6  50F5               	movf	tablat,w,c
  4269  0032F8  0900               	iorlw	0
  4270  0032FA  A4D8               	btfss	status,2,c
  4271  0032FC  EF82  F019         	goto	u1441
  4272  003300  EF84  F019         	goto	u1440
  4273  003304                     u1441:
  4274  003304  EF67  F019         	goto	l2539
  4275  003308                     u1440:
  4276  003308  0012               	return		;funcret
  4277  00330A                     __end_of_LCDPutStr:
  4278                           	opt callstack 0
  4279                           
  4280 ;; *************** function _printLCD_char *****************
  4281 ;; Defined at:
  4282 ;;		line 180 in file "BBSPI_LCD.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  line            2   16[BANK0 ] int 
  4285 ;;  position        1   18[BANK0 ] unsigned char 
  4286 ;;  c               1   19[BANK0 ] unsigned char 
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;		None
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  1    wreg      void 
  4291 ;; Registers used:
  4292 ;;		wreg, status,2, status,0, cstack
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4298 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4301 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4302 ;;Total ram usage:        4 bytes
  4303 ;; Hardware stack levels used:    1
  4304 ;; Hardware stack levels required when called:    9
  4305 ;; This function calls:
  4306 ;;		_LCDPutChar
  4307 ;;		_LCDPutInst
  4308 ;; This function is called by:
  4309 ;;		_heater_heatpumper
  4310 ;;		_check_button
  4311 ;;		_print_temp_humid
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           	psect	text18
  4316  0031F4                     __ptext18:
  4317                           	opt callstack 0
  4318  0031F4                     _printLCD_char:
  4319                           	opt callstack 20
  4320  0031F4                     
  4321                           ;BBSPI_LCD.c: 181:     if (line ==0)
  4322  0031F4  0100               	movlb	0	; () banked
  4323  0031F6  5170               	movf	printLCD_char@line& (0+255),w,b
  4324  0031F8  1171               	iorwf	(printLCD_char@line+1)& (0+255),w,b
  4325  0031FA  A4D8               	btfss	status,2,c
  4326  0031FC  EF02  F019         	goto	u1451
  4327  003200  EF04  F019         	goto	u1450
  4328  003204                     u1451:
  4329  003204  EF0E  F019         	goto	l2549
  4330  003208                     u1450:
  4331  003208                     
  4332                           ; BSR set to: 0
  4333                           ;BBSPI_LCD.c: 182:     {;BBSPI_LCD.c: 183:         LCDPutInst(0x80 + position);
  4334  003208  5172               	movf	printLCD_char@position& (0+255),w,b
  4335  00320A  0F80               	addlw	128
  4336  00320C  ECDB  F017         	call	_LCDPutInst
  4337                           
  4338                           ;BBSPI_LCD.c: 184:         LCDPutChar(c);
  4339  003210  0100               	movlb	0	; () banked
  4340  003212  5173               	movf	printLCD_char@c& (0+255),w,b
  4341  003214  EC71  F017         	call	_LCDPutChar
  4342                           
  4343                           ;BBSPI_LCD.c: 185:     }
  4344  003218  EF1F  F019         	goto	l68
  4345  00321C                     l2549:
  4346                           
  4347                           ; BSR set to: 0
  4348  00321C  0570               	decf	printLCD_char@line& (0+255),w,b
  4349  00321E  1171               	iorwf	(printLCD_char@line+1)& (0+255),w,b
  4350  003220  A4D8               	btfss	status,2,c
  4351  003222  EF15  F019         	goto	u1461
  4352  003226  EF17  F019         	goto	u1460
  4353  00322A                     u1461:
  4354  00322A  EF1F  F019         	goto	l68
  4355  00322E                     u1460:
  4356  00322E                     
  4357                           ; BSR set to: 0
  4358                           ;BBSPI_LCD.c: 187:         LCDPutInst(0xC0 + position);
  4359  00322E  5172               	movf	printLCD_char@position& (0+255),w,b
  4360  003230  0FC0               	addlw	192
  4361  003232  ECDB  F017         	call	_LCDPutInst
  4362                           
  4363                           ;BBSPI_LCD.c: 188:         LCDPutChar(c);
  4364  003236  0100               	movlb	0	; () banked
  4365  003238  5173               	movf	printLCD_char@c& (0+255),w,b
  4366  00323A  EC71  F017         	call	_LCDPutChar
  4367  00323E                     l68:
  4368  00323E  0012               	return		;funcret
  4369  003240                     __end_of_printLCD_char:
  4370                           	opt callstack 0
  4371                           
  4372 ;; *************** function _LCDPutChar *****************
  4373 ;; Defined at:
  4374 ;;		line 125 in file "BBSPI_LCD.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  ch              1    wreg     unsigned char 
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;  ch              1   14[BANK0 ] unsigned char 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  1    wreg      void 
  4381 ;; Registers used:
  4382 ;;		wreg, status,2, status,0, cstack
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4390 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4391 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4392 ;;Total ram usage:        2 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:    8
  4395 ;; This function calls:
  4396 ;;		_WritePort_BBSPI
  4397 ;; This function is called by:
  4398 ;;		_LCDPutStr
  4399 ;;		_printLCD_char
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403                           	psect	text19
  4404  002EE2                     __ptext19:
  4405                           	opt callstack 0
  4406  002EE2                     _LCDPutChar:
  4407                           	opt callstack 19
  4408                           
  4409                           ;incstack = 0
  4410                           ;LCDPutChar@ch stored from wreg
  4411  002EE2  0100               	movlb	0	; () banked
  4412  002EE4  6F6E               	movwf	LCDPutChar@ch& (0+255),b
  4413  002EE6                     
  4414                           ;BBSPI_LCD.c: 128:     WritePort_BBSPI (0x12, 0x80);
  4415  002EE6  0E80               	movlw	128
  4416  002EE8  0100               	movlb	0	; () banked
  4417  002EEA  6F6B               	movwf	WritePort_BBSPI@a& (0+255),b
  4418  002EEC  0E12               	movlw	18
  4419  002EEE  EC1C  F01A         	call	_WritePort_BBSPI
  4420  002EF2                     
  4421                           ;BBSPI_LCD.c: 129:     _delay((unsigned long)((1)*(10000000/4000.0)));
  4422  002EF2  0E04               	movlw	4
  4423  002EF4  0100               	movlb	0	; () banked
  4424  002EF6  6F6D               	movwf	??_LCDPutChar& (0+255),b
  4425  002EF8  0E3D               	movlw	61
  4426  002EFA                     u2667:
  4427  002EFA  2EE8               	decfsz	wreg,f,c
  4428  002EFC  D7FE               	bra	u2667
  4429  002EFE  2F6D               	decfsz	??_LCDPutChar& (0+255),f,b
  4430  002F00  D7FC               	bra	u2667
  4431  002F02  D000               	nop2	
  4432  002F04                     
  4433                           ;BBSPI_LCD.c: 130:     WritePort_BBSPI (0x13, ch);
  4434  002F04  C06E  F06B         	movff	LCDPutChar@ch,WritePort_BBSPI@a
  4435  002F08  0E13               	movlw	19
  4436  002F0A  EC1C  F01A         	call	_WritePort_BBSPI
  4437                           
  4438                           ;BBSPI_LCD.c: 131:     _delay((unsigned long)((1)*(10000000/4000.0)));
  4439  002F0E  0E04               	movlw	4
  4440  002F10  0100               	movlb	0	; () banked
  4441  002F12  6F6D               	movwf	??_LCDPutChar& (0+255),b
  4442  002F14  0E3D               	movlw	61
  4443  002F16                     u2677:
  4444  002F16  2EE8               	decfsz	wreg,f,c
  4445  002F18  D7FE               	bra	u2677
  4446  002F1A  2F6D               	decfsz	??_LCDPutChar& (0+255),f,b
  4447  002F1C  D7FC               	bra	u2677
  4448  002F1E  D000               	nop2	
  4449  002F20                     
  4450                           ;BBSPI_LCD.c: 132:     WritePort_BBSPI (0x12, 0xC0);
  4451  002F20  0EC0               	movlw	192
  4452  002F22  0100               	movlb	0	; () banked
  4453  002F24  6F6B               	movwf	WritePort_BBSPI@a& (0+255),b
  4454  002F26  0E12               	movlw	18
  4455  002F28  EC1C  F01A         	call	_WritePort_BBSPI
  4456  002F2C                     
  4457                           ;BBSPI_LCD.c: 133:     _delay((unsigned long)((1)*(10000000/4000.0)));
  4458  002F2C  0E04               	movlw	4
  4459  002F2E  0100               	movlb	0	; () banked
  4460  002F30  6F6D               	movwf	??_LCDPutChar& (0+255),b
  4461  002F32  0E3D               	movlw	61
  4462  002F34                     u2687:
  4463  002F34  2EE8               	decfsz	wreg,f,c
  4464  002F36  D7FE               	bra	u2687
  4465  002F38  2F6D               	decfsz	??_LCDPutChar& (0+255),f,b
  4466  002F3A  D7FC               	bra	u2687
  4467  002F3C  D000               	nop2	
  4468                           
  4469                           ;BBSPI_LCD.c: 134:     WritePort_BBSPI (0x12, 0x00);
  4470  002F3E  0E00               	movlw	0
  4471  002F40  0100               	movlb	0	; () banked
  4472  002F42  6F6B               	movwf	WritePort_BBSPI@a& (0+255),b
  4473  002F44  0E12               	movlw	18
  4474  002F46  EC1C  F01A         	call	_WritePort_BBSPI
  4475  002F4A  0012               	return		;funcret
  4476  002F4C                     __end_of_LCDPutChar:
  4477                           	opt callstack 0
  4478                           
  4479 ;; *************** function ___lwmod *****************
  4480 ;; Defined at:
  4481 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwmod.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;  dividend        2    8[BANK0 ] unsigned int 
  4484 ;;  divisor         2   10[BANK0 ] unsigned int 
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;  counter         1   12[BANK0 ] unsigned char 
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  2    8[BANK0 ] unsigned int 
  4489 ;; Registers used:
  4490 ;;		wreg, status,2, status,0
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4496 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4497 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4499 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4500 ;;Total ram usage:        5 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; Hardware stack levels required when called:    6
  4503 ;; This function calls:
  4504 ;;		Nothing
  4505 ;; This function is called by:
  4506 ;;		_heater_heatpumper
  4507 ;;		_check_button
  4508 ;; This function uses a non-reentrant model
  4509 ;;
  4510                           
  4511                           	psect	text20
  4512  003020                     __ptext20:
  4513                           	opt callstack 0
  4514  003020                     ___lwmod:
  4515                           	opt callstack 23
  4516  003020  0100               	movlb	0	; () banked
  4517  003022  516A               	movf	___lwmod@divisor& (0+255),w,b
  4518  003024  116B               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  4519  003026  B4D8               	btfsc	status,2,c
  4520  003028  EF18  F018         	goto	u2151
  4521  00302C  EF1A  F018         	goto	u2150
  4522  003030                     u2151:
  4523  003030  EF3E  F018         	goto	l1207
  4524  003034                     u2150:
  4525  003034                     
  4526                           ; BSR set to: 0
  4527  003034  0E01               	movlw	1
  4528  003036  6F6C               	movwf	___lwmod@counter& (0+255),b
  4529  003038  EF22  F018         	goto	l3005
  4530  00303C                     l3003:
  4531                           
  4532                           ; BSR set to: 0
  4533  00303C  90D8               	bcf	status,0,c
  4534  00303E  376A               	rlcf	___lwmod@divisor& (0+255),f,b
  4535  003040  376B               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  4536  003042  2B6C               	incf	___lwmod@counter& (0+255),f,b
  4537  003044                     l3005:
  4538                           
  4539                           ; BSR set to: 0
  4540  003044  AF6B               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  4541  003046  EF27  F018         	goto	u2161
  4542  00304A  EF29  F018         	goto	u2160
  4543  00304E                     u2161:
  4544  00304E  EF1E  F018         	goto	l3003
  4545  003052                     u2160:
  4546  003052                     l3007:
  4547                           
  4548                           ; BSR set to: 0
  4549  003052  516A               	movf	___lwmod@divisor& (0+255),w,b
  4550  003054  5D68               	subwf	___lwmod@dividend& (0+255),w,b
  4551  003056  516B               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4552  003058  5969               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  4553  00305A  A0D8               	btfss	status,0,c
  4554  00305C  EF32  F018         	goto	u2171
  4555  003060  EF34  F018         	goto	u2170
  4556  003064                     u2171:
  4557  003064  EF38  F018         	goto	l3011
  4558  003068                     u2170:
  4559  003068                     
  4560                           ; BSR set to: 0
  4561  003068  516A               	movf	___lwmod@divisor& (0+255),w,b
  4562  00306A  5F68               	subwf	___lwmod@dividend& (0+255),f,b
  4563  00306C  516B               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4564  00306E  5B69               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  4565  003070                     l3011:
  4566                           
  4567                           ; BSR set to: 0
  4568  003070  90D8               	bcf	status,0,c
  4569  003072  336B               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  4570  003074  336A               	rrcf	___lwmod@divisor& (0+255),f,b
  4571  003076                     
  4572                           ; BSR set to: 0
  4573  003076  2F6C               	decfsz	___lwmod@counter& (0+255),f,b
  4574  003078  EF29  F018         	goto	l3007
  4575  00307C                     l1207:
  4576                           
  4577                           ; BSR set to: 0
  4578  00307C  C068  F068         	movff	___lwmod@dividend,?___lwmod
  4579  003080  C069  F069         	movff	___lwmod@dividend+1,?___lwmod+1
  4580  003084                     
  4581                           ; BSR set to: 0
  4582  003084  0012               	return		;funcret
  4583  003086                     __end_of___lwmod:
  4584                           	opt callstack 0
  4585                           
  4586 ;; *************** function ___lwdiv *****************
  4587 ;; Defined at:
  4588 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;  dividend        2    8[BANK0 ] unsigned int 
  4591 ;;  divisor         2   10[BANK0 ] unsigned int 
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;  quotient        2   12[BANK0 ] unsigned int 
  4594 ;;  counter         1   14[BANK0 ] unsigned char 
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  2    8[BANK0 ] unsigned int 
  4597 ;; Registers used:
  4598 ;;		wreg, status,2, status,0
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4604 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4605 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4607 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4608 ;;Total ram usage:        7 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; Hardware stack levels required when called:    6
  4611 ;; This function calls:
  4612 ;;		Nothing
  4613 ;; This function is called by:
  4614 ;;		_heater_heatpumper
  4615 ;;		_check_button
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           	psect	text21
  4620  002DF6                     __ptext21:
  4621                           	opt callstack 0
  4622  002DF6                     ___lwdiv:
  4623                           	opt callstack 23
  4624  002DF6  0E00               	movlw	0
  4625  002DF8  0100               	movlb	0	; () banked
  4626  002DFA  6F6D               	movwf	(___lwdiv@quotient+1)& (0+255),b
  4627  002DFC  0E00               	movlw	0
  4628  002DFE  6F6C               	movwf	___lwdiv@quotient& (0+255),b
  4629  002E00                     
  4630                           ; BSR set to: 0
  4631  002E00  516A               	movf	___lwdiv@divisor& (0+255),w,b
  4632  002E02  116B               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  4633  002E04  B4D8               	btfsc	status,2,c
  4634  002E06  EF07  F017         	goto	u2121
  4635  002E0A  EF09  F017         	goto	u2120
  4636  002E0E                     u2121:
  4637  002E0E  EF31  F017         	goto	l1197
  4638  002E12                     u2120:
  4639  002E12                     
  4640                           ; BSR set to: 0
  4641  002E12  0E01               	movlw	1
  4642  002E14  6F6E               	movwf	___lwdiv@counter& (0+255),b
  4643  002E16  EF11  F017         	goto	l2985
  4644  002E1A                     l2983:
  4645                           
  4646                           ; BSR set to: 0
  4647  002E1A  90D8               	bcf	status,0,c
  4648  002E1C  376A               	rlcf	___lwdiv@divisor& (0+255),f,b
  4649  002E1E  376B               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  4650  002E20  2B6E               	incf	___lwdiv@counter& (0+255),f,b
  4651  002E22                     l2985:
  4652                           
  4653                           ; BSR set to: 0
  4654  002E22  AF6B               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  4655  002E24  EF16  F017         	goto	u2131
  4656  002E28  EF18  F017         	goto	u2130
  4657  002E2C                     u2131:
  4658  002E2C  EF0D  F017         	goto	l2983
  4659  002E30                     u2130:
  4660  002E30                     l2987:
  4661                           
  4662                           ; BSR set to: 0
  4663  002E30  90D8               	bcf	status,0,c
  4664  002E32  376C               	rlcf	___lwdiv@quotient& (0+255),f,b
  4665  002E34  376D               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  4666  002E36                     
  4667                           ; BSR set to: 0
  4668  002E36  516A               	movf	___lwdiv@divisor& (0+255),w,b
  4669  002E38  5D68               	subwf	___lwdiv@dividend& (0+255),w,b
  4670  002E3A  516B               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  4671  002E3C  5969               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  4672  002E3E  A0D8               	btfss	status,0,c
  4673  002E40  EF24  F017         	goto	u2141
  4674  002E44  EF26  F017         	goto	u2140
  4675  002E48                     u2141:
  4676  002E48  EF2B  F017         	goto	l2995
  4677  002E4C                     u2140:
  4678  002E4C                     
  4679                           ; BSR set to: 0
  4680  002E4C  516A               	movf	___lwdiv@divisor& (0+255),w,b
  4681  002E4E  5F68               	subwf	___lwdiv@dividend& (0+255),f,b
  4682  002E50  516B               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  4683  002E52  5B69               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  4684  002E54                     
  4685                           ; BSR set to: 0
  4686  002E54  816C               	bsf	___lwdiv@quotient& (0+255),0,b
  4687  002E56                     l2995:
  4688                           
  4689                           ; BSR set to: 0
  4690  002E56  90D8               	bcf	status,0,c
  4691  002E58  336B               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  4692  002E5A  336A               	rrcf	___lwdiv@divisor& (0+255),f,b
  4693  002E5C                     
  4694                           ; BSR set to: 0
  4695  002E5C  2F6E               	decfsz	___lwdiv@counter& (0+255),f,b
  4696  002E5E  EF18  F017         	goto	l2987
  4697  002E62                     l1197:
  4698                           
  4699                           ; BSR set to: 0
  4700  002E62  C06C  F068         	movff	___lwdiv@quotient,?___lwdiv
  4701  002E66  C06D  F069         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4702  002E6A                     
  4703                           ; BSR set to: 0
  4704  002E6A  0012               	return		;funcret
  4705  002E6C                     __end_of___lwdiv:
  4706                           	opt callstack 0
  4707                           
  4708 ;; *************** function _SYSTEM_INITIALIZATION *****************
  4709 ;; Defined at:
  4710 ;;		line 26 in file "main.c"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;		None
  4713 ;; Auto vars:     Size  Location     Type
  4714 ;;		None
  4715 ;; Return value:  Size  Location     Type
  4716 ;;                  1    wreg      void 
  4717 ;; Registers used:
  4718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4719 ;; Tracked objects:
  4720 ;;		On entry : 0/0
  4721 ;;		On exit  : 0/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4728 ;;Total ram usage:        0 bytes
  4729 ;; Hardware stack levels used:    1
  4730 ;; Hardware stack levels required when called:   10
  4731 ;; This function calls:
  4732 ;;		_LCDInit
  4733 ;;		_TMR0_INITIALIZATION
  4734 ;;		_TMR1_INITIALIZATION
  4735 ;;		_init_queue
  4736 ;; This function is called by:
  4737 ;;		_main
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           	psect	text22
  4742  003348                     __ptext22:
  4743                           	opt callstack 0
  4744  003348                     _SYSTEM_INITIALIZATION:
  4745                           	opt callstack 20
  4746  003348                     
  4747                           ;main.c: 28:     LCDInit();
  4748  003348  ECD0  F018         	call	_LCDInit	;wreg free
  4749  00334C                     
  4750                           ;main.c: 29:     INTCONbits.GIE=1;
  4751  00334C  8EF2               	bsf	242,7,c	;volatile
  4752  00334E                     
  4753                           ;main.c: 32:     OSCCON=0x73;
  4754  00334E  0E73               	movlw	115
  4755  003350  6ED3               	movwf	211,c	;volatile
  4756  003352                     
  4757                           ;main.c: 33:     OSCTUNE=0b00001111;
  4758  003352  0E0F               	movlw	15
  4759  003354  6E9B               	movwf	155,c	;volatile
  4760  003356                     
  4761                           ;main.c: 34:     TRISAbits.TRISA5 = 1;
  4762  003356  8A92               	bsf	146,5,c	;volatile
  4763  003358                     
  4764                           ;main.c: 35:     TRISBbits.TRISB0 = 1;
  4765  003358  8093               	bsf	147,0,c	;volatile
  4766  00335A                     
  4767                           ;main.c: 36:     TRISDbits.TRISD1 = 0;
  4768  00335A  9295               	bcf	149,1,c	;volatile
  4769  00335C                     
  4770                           ;main.c: 37:     ADCON1 = 0b00001111;
  4771  00335C  0E0F               	movlw	15
  4772  00335E  6EC1               	movwf	193,c	;volatile
  4773  003360                     
  4774                           ;main.c: 38:     LATDbits.LATD1 = 0;
  4775  003360  928C               	bcf	140,1,c	;volatile
  4776  003362                     
  4777                           ;main.c: 39:     MAX_TEMPERATURE = 0;
  4778  003362  0E00               	movlw	0
  4779  003364  0100               	movlb	0	; () banked
  4780  003366  6FDF               	movwf	(_MAX_TEMPERATURE+1)& (0+255),b
  4781  003368  0E00               	movlw	0
  4782  00336A  6FDE               	movwf	_MAX_TEMPERATURE& (0+255),b
  4783  00336C                     
  4784                           ; BSR set to: 0
  4785                           ;main.c: 40:     MAX_HUMIDITY = 0;
  4786  00336C  0E00               	movlw	0
  4787  00336E  6FDD               	movwf	(_MAX_HUMIDITY+1)& (0+255),b
  4788  003370  0E00               	movlw	0
  4789  003372  6FDC               	movwf	_MAX_HUMIDITY& (0+255),b
  4790  003374                     
  4791                           ; BSR set to: 0
  4792                           ;main.c: 41:     TMR0_INITIALIZATION();
  4793  003374  EC4C  F01A         	call	_TMR0_INITIALIZATION	;wreg free
  4794  003378                     
  4795                           ;main.c: 42:     TMR1_INITIALIZATION();
  4796  003378  EC44  F01A         	call	_TMR1_INITIALIZATION	;wreg free
  4797  00337C                     
  4798                           ;main.c: 43:     init_queue();
  4799  00337C  ECA6  F017         	call	_init_queue	;wreg free
  4800  003380  0012               	return		;funcret
  4801  003382                     __end_of_SYSTEM_INITIALIZATION:
  4802                           	opt callstack 0
  4803                           
  4804 ;; *************** function _init_queue *****************
  4805 ;; Defined at:
  4806 ;;		line 146 in file "linked_list.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;		None
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;  i               2   14[BANK0 ] int 
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  1    wreg      void 
  4813 ;; Registers used:
  4814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4821 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4823 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4824 ;;Total ram usage:        2 bytes
  4825 ;; Hardware stack levels used:    1
  4826 ;; Hardware stack levels required when called:    7
  4827 ;; This function calls:
  4828 ;;		___wmul
  4829 ;; This function is called by:
  4830 ;;		_dequeue
  4831 ;;		_SYSTEM_INITIALIZATION
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           	psect	text23
  4836  002F4C                     __ptext23:
  4837                           	opt callstack 0
  4838  002F4C                     _init_queue:
  4839                           	opt callstack 22
  4840  002F4C                     
  4841                           ;linked_list.c: 148:     front = -1;
  4842  002F4C  0100               	movlb	0	; () banked
  4843  002F4E  69D4               	setf	_front& (0+255),b
  4844  002F50  69D5               	setf	(_front+1)& (0+255),b
  4845                           
  4846                           ;linked_list.c: 149:     rear = -1;
  4847  002F52  69D2               	setf	_rear& (0+255),b
  4848  002F54  69D3               	setf	(_rear+1)& (0+255),b
  4849  002F56                     
  4850                           ; BSR set to: 0
  4851                           ;linked_list.c: 150:     no_q = 0;
  4852  002F56  0E00               	movlw	0
  4853  002F58  6FD1               	movwf	(_no_q+1)& (0+255),b
  4854  002F5A  0E00               	movlw	0
  4855  002F5C  6FD0               	movwf	_no_q& (0+255),b
  4856                           
  4857                           ;linked_list.c: 152:     for (int i = 0; i<1000 ; i++)
  4858  002F5E  0E00               	movlw	0
  4859  002F60  6F6F               	movwf	(init_queue@i+1)& (0+255),b
  4860  002F62  0E00               	movlw	0
  4861  002F64  6F6E               	movwf	init_queue@i& (0+255),b
  4862  002F66                     l2911:
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;linked_list.c: 153:         queue[i] = ((void*)0);
  4866  002F66  C06E  F068         	movff	init_queue@i,___wmul@multiplier
  4867  002F6A  C06F  F069         	movff	init_queue@i+1,___wmul@multiplier+1
  4868  002F6E  0E00               	movlw	0
  4869  002F70  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4870  002F72  0E03               	movlw	3
  4871  002F74  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  4872  002F76  ECF5  F019         	call	___wmul	;wreg free
  4873  002F7A  0E28               	movlw	low _queue
  4874  002F7C  0100               	movlb	0	; () banked
  4875  002F7E  2568               	addwf	?___wmul& (0+255),w,b
  4876  002F80  6ED9               	movwf	fsr2l,c
  4877  002F82  0E01               	movlw	high _queue
  4878  002F84  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  4879  002F86  6EDA               	movwf	fsr2h,c
  4880  002F88  0E00               	movlw	0
  4881  002F8A  6EDE               	movwf	postinc2,c
  4882  002F8C  0E00               	movlw	0
  4883  002F8E  6EDE               	movwf	postinc2,c
  4884  002F90  0E00               	movlw	0
  4885  002F92  6EDE               	movwf	postinc2,c
  4886  002F94                     
  4887                           ; BSR set to: 0
  4888  002F94  4B6E               	infsnz	init_queue@i& (0+255),f,b
  4889  002F96  2B6F               	incf	(init_queue@i+1)& (0+255),f,b
  4890  002F98                     
  4891                           ; BSR set to: 0
  4892  002F98  BF6F               	btfsc	(init_queue@i+1)& (0+255),7,b
  4893  002F9A  EFD8  F017         	goto	u2021
  4894  002F9E  0EE8               	movlw	232
  4895  002FA0  5D6E               	subwf	init_queue@i& (0+255),w,b
  4896  002FA2  0E03               	movlw	3
  4897  002FA4  596F               	subwfb	(init_queue@i+1)& (0+255),w,b
  4898  002FA6  A0D8               	btfss	status,0,c
  4899  002FA8  EFD8  F017         	goto	u2021
  4900  002FAC  EFDA  F017         	goto	u2020
  4901  002FB0                     u2021:
  4902  002FB0  EFB3  F017         	goto	l2911
  4903  002FB4                     u2020:
  4904  002FB4                     
  4905                           ; BSR set to: 0
  4906  002FB4  0012               	return		;funcret
  4907  002FB6                     __end_of_init_queue:
  4908                           	opt callstack 0
  4909                           
  4910 ;; *************** function _TMR1_INITIALIZATION *****************
  4911 ;; Defined at:
  4912 ;;		line 3 in file "timer1.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;		None
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;		None
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  1    wreg      void 
  4919 ;; Registers used:
  4920 ;;		wreg, status,2
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4930 ;;Total ram usage:        0 bytes
  4931 ;; Hardware stack levels used:    1
  4932 ;; Hardware stack levels required when called:    6
  4933 ;; This function calls:
  4934 ;;		Nothing
  4935 ;; This function is called by:
  4936 ;;		_SYSTEM_INITIALIZATION
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           	psect	text24
  4941  003488                     __ptext24:
  4942                           	opt callstack 0
  4943  003488                     _TMR1_INITIALIZATION:
  4944                           	opt callstack 23
  4945  003488                     
  4946                           ;timer1.c: 5:     T1CON = 0b10000001;
  4947  003488  0E81               	movlw	129
  4948  00348A  6ECD               	movwf	205,c	;volatile
  4949  00348C                     
  4950                           ;timer1.c: 6:     PIR1bits.TMR1IF = 0;
  4951  00348C  909E               	bcf	158,0,c	;volatile
  4952                           
  4953                           ;timer1.c: 7:     TMR1H = 0xB1;
  4954  00348E  0EB1               	movlw	177
  4955  003490  6ECF               	movwf	207,c	;volatile
  4956                           
  4957                           ;timer1.c: 8:     TMR1L = 0xE0;
  4958  003492  0EE0               	movlw	224
  4959  003494  6ECE               	movwf	206,c	;volatile
  4960  003496  0012               	return		;funcret
  4961  003498                     __end_of_TMR1_INITIALIZATION:
  4962                           	opt callstack 0
  4963                           
  4964 ;; *************** function _TMR0_INITIALIZATION *****************
  4965 ;; Defined at:
  4966 ;;		line 3 in file "timer0.c"
  4967 ;; Parameters:    Size  Location     Type
  4968 ;;		None
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;		None
  4971 ;; Return value:  Size  Location     Type
  4972 ;;                  1    wreg      void 
  4973 ;; Registers used:
  4974 ;;		wreg, status,2
  4975 ;; Tracked objects:
  4976 ;;		On entry : 0/0
  4977 ;;		On exit  : 0/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4984 ;;Total ram usage:        0 bytes
  4985 ;; Hardware stack levels used:    1
  4986 ;; Hardware stack levels required when called:    6
  4987 ;; This function calls:
  4988 ;;		Nothing
  4989 ;; This function is called by:
  4990 ;;		_SYSTEM_INITIALIZATION
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993                           
  4994                           	psect	text25
  4995  003498                     __ptext25:
  4996                           	opt callstack 0
  4997  003498                     _TMR0_INITIALIZATION:
  4998                           	opt callstack 23
  4999  003498                     
  5000                           ;timer0.c: 5:     T0CON = 0b11000111;
  5001  003498  0EC7               	movlw	199
  5002  00349A  6ED5               	movwf	213,c	;volatile
  5003                           
  5004                           ;timer0.c: 6:     TMR0 = 0xB2;
  5005  00349C  0E00               	movlw	0
  5006  00349E  6ED7               	movwf	215,c	;volatile
  5007  0034A0  0EB2               	movlw	178
  5008  0034A2  6ED6               	movwf	214,c	;volatile
  5009  0034A4                     
  5010                           ;timer0.c: 7:     INTCONbits.TMR0IF = 0;
  5011  0034A4  94F2               	bcf	242,2,c	;volatile
  5012  0034A6  0012               	return		;funcret
  5013  0034A8                     __end_of_TMR0_INITIALIZATION:
  5014                           	opt callstack 0
  5015                           
  5016 ;; *************** function _LCDInit *****************
  5017 ;; Defined at:
  5018 ;;		line 10 in file "BBSPI_LCD.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;		None
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;		None
  5023 ;; Return value:  Size  Location     Type
  5024 ;;                  1    wreg      void 
  5025 ;; Registers used:
  5026 ;;		wreg, status,2, status,0, cstack
  5027 ;; Tracked objects:
  5028 ;;		On entry : 0/0
  5029 ;;		On exit  : 0/0
  5030 ;;		Unchanged: 0/0
  5031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5034 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5035 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5036 ;;Total ram usage:        1 bytes
  5037 ;; Hardware stack levels used:    1
  5038 ;; Hardware stack levels required when called:    9
  5039 ;; This function calls:
  5040 ;;		_InitBBSPI
  5041 ;;		_LCDPutInst
  5042 ;;		_Port_BBSPIInit
  5043 ;;		_WritePort_BBSPI
  5044 ;; This function is called by:
  5045 ;;		_SYSTEM_INITIALIZATION
  5046 ;; This function uses a non-reentrant model
  5047 ;;
  5048                           
  5049                           	psect	text26
  5050  0031A0                     __ptext26:
  5051                           	opt callstack 0
  5052  0031A0                     _LCDInit:
  5053                           	opt callstack 20
  5054  0031A0                     
  5055                           ;BBSPI_LCD.c: 12:     InitBBSPI();
  5056  0031A0  EC3B  F01A         	call	_InitBBSPI	;wreg free
  5057  0031A4                     
  5058                           ;BBSPI_LCD.c: 13:     TRISFbits.TRISF6 = 0;
  5059  0031A4  9C97               	bcf	151,6,c	;volatile
  5060  0031A6                     
  5061                           ;BBSPI_LCD.c: 14:     LATFbits.LATF6 = 0;
  5062  0031A6  9C8E               	bcf	142,6,c	;volatile
  5063  0031A8                     
  5064                           ;BBSPI_LCD.c: 16:     LATFbits.LATF6 = 1;
  5065  0031A8  8C8E               	bsf	142,6,c	;volatile
  5066  0031AA                     
  5067                           ;BBSPI_LCD.c: 17:     Port_BBSPIInit (0x00);
  5068  0031AA  0E00               	movlw	0
  5069  0031AC  EC2C  F01A         	call	_Port_BBSPIInit
  5070  0031B0                     
  5071                           ;BBSPI_LCD.c: 18:     Port_BBSPIInit (0x01);
  5072  0031B0  0E01               	movlw	1
  5073  0031B2  EC2C  F01A         	call	_Port_BBSPIInit
  5074  0031B6                     
  5075                           ;BBSPI_LCD.c: 19:     WritePort_BBSPI (0x12, 0);
  5076  0031B6  0E00               	movlw	0
  5077  0031B8  0100               	movlb	0	; () banked
  5078  0031BA  6F6B               	movwf	WritePort_BBSPI@a& (0+255),b
  5079  0031BC  0E12               	movlw	18
  5080  0031BE  EC1C  F01A         	call	_WritePort_BBSPI
  5081  0031C2                     
  5082                           ;BBSPI_LCD.c: 20:     _delay((unsigned long)((15)*(10000000/4000.0)));
  5083  0031C2  0E31               	movlw	49
  5084  0031C4  0100               	movlb	0	; () banked
  5085  0031C6  6F6F               	movwf	??_LCDInit& (0+255),b
  5086  0031C8  0EB2               	movlw	178
  5087  0031CA                     u2697:
  5088  0031CA  2EE8               	decfsz	wreg,f,c
  5089  0031CC  D7FE               	bra	u2697
  5090  0031CE  2F6F               	decfsz	??_LCDInit& (0+255),f,b
  5091  0031D0  D7FC               	bra	u2697
  5092  0031D2  F000               	nop	
  5093  0031D4                     
  5094                           ;BBSPI_LCD.c: 21:     LCDPutInst(0x32);
  5095  0031D4  0E32               	movlw	50
  5096  0031D6  ECDB  F017         	call	_LCDPutInst
  5097  0031DA                     
  5098                           ;BBSPI_LCD.c: 22:     LCDPutInst(0x3C);
  5099  0031DA  0E3C               	movlw	60
  5100  0031DC  ECDB  F017         	call	_LCDPutInst
  5101  0031E0                     
  5102                           ;BBSPI_LCD.c: 23:     LCDPutInst(0x0C);
  5103  0031E0  0E0C               	movlw	12
  5104  0031E2  ECDB  F017         	call	_LCDPutInst
  5105  0031E6                     
  5106                           ;BBSPI_LCD.c: 24:     LCDPutInst(0x01);
  5107  0031E6  0E01               	movlw	1
  5108  0031E8  ECDB  F017         	call	_LCDPutInst
  5109  0031EC                     
  5110                           ;BBSPI_LCD.c: 25:     LCDPutInst(0x06);
  5111  0031EC  0E06               	movlw	6
  5112  0031EE  ECDB  F017         	call	_LCDPutInst
  5113  0031F2  0012               	return		;funcret
  5114  0031F4                     __end_of_LCDInit:
  5115                           	opt callstack 0
  5116                           
  5117 ;; *************** function _Port_BBSPIInit *****************
  5118 ;; Defined at:
  5119 ;;		line 88 in file "BBSPI_LCD.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;  port_dir        1    wreg     unsigned char 
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;  port_dir        1   11[BANK0 ] unsigned char 
  5124 ;; Return value:  Size  Location     Type
  5125 ;;                  1    wreg      void 
  5126 ;; Registers used:
  5127 ;;		wreg, status,2, status,0, cstack
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/0
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5134 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5136 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5137 ;;Total ram usage:        1 bytes
  5138 ;; Hardware stack levels used:    1
  5139 ;; Hardware stack levels required when called:    7
  5140 ;; This function calls:
  5141 ;;		_SendByteBBSPI
  5142 ;; This function is called by:
  5143 ;;		_LCDInit
  5144 ;; This function uses a non-reentrant model
  5145 ;;
  5146                           
  5147                           	psect	text27
  5148  003458                     __ptext27:
  5149                           	opt callstack 0
  5150  003458                     _Port_BBSPIInit:
  5151                           	opt callstack 21
  5152                           
  5153                           ;incstack = 0
  5154                           ;Port_BBSPIInit@port_dir stored from wreg
  5155  003458  0100               	movlb	0	; () banked
  5156  00345A  6F6B               	movwf	Port_BBSPIInit@port_dir& (0+255),b
  5157  00345C                     
  5158                           ;BBSPI_LCD.c: 88: void Port_BBSPIInit (unsigned char port_dir);BBSPI_LCD.c: 89: {;BBSPI_
      +                          LCD.c: 93:     LATAbits.LATA2 = 0;
  5159  00345C  9489               	bcf	137,2,c	;volatile
  5160  00345E                     
  5161                           ;BBSPI_LCD.c: 94:     SendByteBBSPI(0x40);
  5162  00345E  0E40               	movlw	64
  5163  003460  EC36  F017         	call	_SendByteBBSPI
  5164                           
  5165                           ;BBSPI_LCD.c: 95:     SendByteBBSPI(port_dir);
  5166  003464  0100               	movlb	0	; () banked
  5167  003466  516B               	movf	Port_BBSPIInit@port_dir& (0+255),w,b
  5168  003468  EC36  F017         	call	_SendByteBBSPI
  5169                           
  5170                           ;BBSPI_LCD.c: 96:     SendByteBBSPI(0x00);
  5171  00346C  0E00               	movlw	0
  5172  00346E  EC36  F017         	call	_SendByteBBSPI
  5173  003472                     
  5174                           ;BBSPI_LCD.c: 97:     LATAbits.LATA2 = 1;
  5175  003472  8489               	bsf	137,2,c	;volatile
  5176  003474  0012               	return		;funcret
  5177  003476                     __end_of_Port_BBSPIInit:
  5178                           	opt callstack 0
  5179                           
  5180 ;; *************** function _LCDPutInst *****************
  5181 ;; Defined at:
  5182 ;;		line 144 in file "BBSPI_LCD.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  ch              1    wreg     unsigned char 
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;  ch              1   14[BANK0 ] unsigned char 
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  1    wreg      void 
  5189 ;; Registers used:
  5190 ;;		wreg, status,2, status,0, cstack
  5191 ;; Tracked objects:
  5192 ;;		On entry : 0/0
  5193 ;;		On exit  : 0/0
  5194 ;;		Unchanged: 0/0
  5195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5198 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5199 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5200 ;;Total ram usage:        2 bytes
  5201 ;; Hardware stack levels used:    1
  5202 ;; Hardware stack levels required when called:    8
  5203 ;; This function calls:
  5204 ;;		_WritePort_BBSPI
  5205 ;; This function is called by:
  5206 ;;		_LCDInit
  5207 ;;		_printLCD_string
  5208 ;;		_printLCD_char
  5209 ;;		_heater_heatpumper
  5210 ;;		_check_button
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           	psect	text28
  5215  002FB6                     __ptext28:
  5216                           	opt callstack 0
  5217  002FB6                     _LCDPutInst:
  5218                           	opt callstack 20
  5219                           
  5220                           ;incstack = 0
  5221                           ;LCDPutInst@ch stored from wreg
  5222  002FB6  0100               	movlb	0	; () banked
  5223  002FB8  6F6E               	movwf	LCDPutInst@ch& (0+255),b
  5224  002FBA                     
  5225                           ;BBSPI_LCD.c: 147:     WritePort_BBSPI (0x12, 0x00);
  5226  002FBA  0E00               	movlw	0
  5227  002FBC  0100               	movlb	0	; () banked
  5228  002FBE  6F6B               	movwf	WritePort_BBSPI@a& (0+255),b
  5229  002FC0  0E12               	movlw	18
  5230  002FC2  EC1C  F01A         	call	_WritePort_BBSPI
  5231  002FC6                     
  5232                           ;BBSPI_LCD.c: 148:     _delay((unsigned long)((1)*(10000000/4000.0)));
  5233  002FC6  0E04               	movlw	4
  5234  002FC8  0100               	movlb	0	; () banked
  5235  002FCA  6F6D               	movwf	??_LCDPutInst& (0+255),b
  5236  002FCC  0E3D               	movlw	61
  5237  002FCE                     u2707:
  5238  002FCE  2EE8               	decfsz	wreg,f,c
  5239  002FD0  D7FE               	bra	u2707
  5240  002FD2  2F6D               	decfsz	??_LCDPutInst& (0+255),f,b
  5241  002FD4  D7FC               	bra	u2707
  5242  002FD6  D000               	nop2	
  5243  002FD8                     
  5244                           ;BBSPI_LCD.c: 149:     WritePort_BBSPI (0x13, ch);
  5245  002FD8  C06E  F06B         	movff	LCDPutInst@ch,WritePort_BBSPI@a
  5246  002FDC  0E13               	movlw	19
  5247  002FDE  EC1C  F01A         	call	_WritePort_BBSPI
  5248                           
  5249                           ;BBSPI_LCD.c: 150:     _delay((unsigned long)((1)*(10000000/4000.0)));
  5250  002FE2  0E04               	movlw	4
  5251  002FE4  0100               	movlb	0	; () banked
  5252  002FE6  6F6D               	movwf	??_LCDPutInst& (0+255),b
  5253  002FE8  0E3D               	movlw	61
  5254  002FEA                     u2717:
  5255  002FEA  2EE8               	decfsz	wreg,f,c
  5256  002FEC  D7FE               	bra	u2717
  5257  002FEE  2F6D               	decfsz	??_LCDPutInst& (0+255),f,b
  5258  002FF0  D7FC               	bra	u2717
  5259  002FF2  D000               	nop2	
  5260  002FF4                     
  5261                           ;BBSPI_LCD.c: 151:     WritePort_BBSPI (0x12,0x40);
  5262  002FF4  0E40               	movlw	64
  5263  002FF6  0100               	movlb	0	; () banked
  5264  002FF8  6F6B               	movwf	WritePort_BBSPI@a& (0+255),b
  5265  002FFA  0E12               	movlw	18
  5266  002FFC  EC1C  F01A         	call	_WritePort_BBSPI
  5267  003000                     
  5268                           ;BBSPI_LCD.c: 152:     _delay((unsigned long)((1)*(10000000/4000.0)));
  5269  003000  0E04               	movlw	4
  5270  003002  0100               	movlb	0	; () banked
  5271  003004  6F6D               	movwf	??_LCDPutInst& (0+255),b
  5272  003006  0E3D               	movlw	61
  5273  003008                     u2727:
  5274  003008  2EE8               	decfsz	wreg,f,c
  5275  00300A  D7FE               	bra	u2727
  5276  00300C  2F6D               	decfsz	??_LCDPutInst& (0+255),f,b
  5277  00300E  D7FC               	bra	u2727
  5278  003010  D000               	nop2	
  5279                           
  5280                           ;BBSPI_LCD.c: 153:     WritePort_BBSPI (0x12, 0x00);
  5281  003012  0E00               	movlw	0
  5282  003014  0100               	movlb	0	; () banked
  5283  003016  6F6B               	movwf	WritePort_BBSPI@a& (0+255),b
  5284  003018  0E12               	movlw	18
  5285  00301A  EC1C  F01A         	call	_WritePort_BBSPI
  5286  00301E  0012               	return		;funcret
  5287  003020                     __end_of_LCDPutInst:
  5288                           	opt callstack 0
  5289                           
  5290 ;; *************** function _WritePort_BBSPI *****************
  5291 ;; Defined at:
  5292 ;;		line 109 in file "BBSPI_LCD.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;  port_add        1    wreg     unsigned char 
  5295 ;;  a               1   11[BANK0 ] unsigned char 
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;  port_add        1   12[BANK0 ] unsigned char 
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  1    wreg      void 
  5300 ;; Registers used:
  5301 ;;		wreg, status,2, status,0, cstack
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5307 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5308 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5310 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5311 ;;Total ram usage:        2 bytes
  5312 ;; Hardware stack levels used:    1
  5313 ;; Hardware stack levels required when called:    7
  5314 ;; This function calls:
  5315 ;;		_SendByteBBSPI
  5316 ;; This function is called by:
  5317 ;;		_LCDInit
  5318 ;;		_LCDPutChar
  5319 ;;		_LCDPutInst
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323                           	psect	text29
  5324  003438                     __ptext29:
  5325                           	opt callstack 0
  5326  003438                     _WritePort_BBSPI:
  5327                           	opt callstack 19
  5328                           
  5329                           ;incstack = 0
  5330                           ;WritePort_BBSPI@port_add stored from wreg
  5331  003438  0100               	movlb	0	; () banked
  5332  00343A  6F6C               	movwf	WritePort_BBSPI@port_add& (0+255),b
  5333  00343C                     
  5334                           ;BBSPI_LCD.c: 109: void WritePort_BBSPI (unsigned char port_add, unsigned char a);BBSPI_
      +                          LCD.c: 110: {;BBSPI_LCD.c: 111:     LATAbits.LATA2 = 0;
  5335  00343C  9489               	bcf	137,2,c	;volatile
  5336  00343E                     
  5337                           ;BBSPI_LCD.c: 112:     SendByteBBSPI(0x40);
  5338  00343E  0E40               	movlw	64
  5339  003440  EC36  F017         	call	_SendByteBBSPI
  5340                           
  5341                           ;BBSPI_LCD.c: 113:     SendByteBBSPI(port_add);
  5342  003444  0100               	movlb	0	; () banked
  5343  003446  516C               	movf	WritePort_BBSPI@port_add& (0+255),w,b
  5344  003448  EC36  F017         	call	_SendByteBBSPI
  5345                           
  5346                           ;BBSPI_LCD.c: 114:     SendByteBBSPI(a);
  5347  00344C  0100               	movlb	0	; () banked
  5348  00344E  516B               	movf	WritePort_BBSPI@a& (0+255),w,b
  5349  003450  EC36  F017         	call	_SendByteBBSPI
  5350  003454                     
  5351                           ;BBSPI_LCD.c: 115:     LATAbits.LATA2 = 1;
  5352  003454  8489               	bsf	137,2,c	;volatile
  5353  003456  0012               	return		;funcret
  5354  003458                     __end_of_WritePort_BBSPI:
  5355                           	opt callstack 0
  5356                           
  5357 ;; *************** function _SendByteBBSPI *****************
  5358 ;; Defined at:
  5359 ;;		line 56 in file "BBSPI_LCD.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;  output          1    wreg     unsigned char 
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;  output          1    8[BANK0 ] unsigned char 
  5364 ;;  input           1   10[BANK0 ] unsigned char 
  5365 ;;  bitcount        1    9[BANK0 ] unsigned char 
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      void 
  5368 ;; Registers used:
  5369 ;;		wreg, status,2, status,0
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5376 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5378 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5379 ;;Total ram usage:        3 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; Hardware stack levels required when called:    6
  5382 ;; This function calls:
  5383 ;;		Nothing
  5384 ;; This function is called by:
  5385 ;;		_Port_BBSPIInit
  5386 ;;		_WritePort_BBSPI
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text30
  5391  002E6C                     __ptext30:
  5392                           	opt callstack 0
  5393  002E6C                     _SendByteBBSPI:
  5394                           	opt callstack 19
  5395                           
  5396                           ;incstack = 0
  5397                           ;SendByteBBSPI@output stored from wreg
  5398  002E6C  0100               	movlb	0	; () banked
  5399  002E6E  6F68               	movwf	SendByteBBSPI@output& (0+255),b
  5400  002E70                     
  5401                           ;BBSPI_LCD.c: 56: void SendByteBBSPI (unsigned char output);BBSPI_LCD.c: 57: {;BBSPI_LCD
      +                          .c: 58:     unsigned char bitcount;;BBSPI_LCD.c: 59:     unsigned char input = output;
  5402  002E70  C068  F06A         	movff	SendByteBBSPI@output,SendByteBBSPI@input
  5403  002E74                     
  5404                           ;BBSPI_LCD.c: 61:     for(bitcount=0;bitcount<8;bitcount++)
  5405  002E74  0E00               	movlw	0
  5406  002E76  0100               	movlb	0	; () banked
  5407  002E78  6F69               	movwf	SendByteBBSPI@bitcount& (0+255),b
  5408  002E7A                     l33:
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;BBSPI_LCD.c: 62:     {;BBSPI_LCD.c: 64:         if(output & 0x80)
  5412  002E7A  AF68               	btfss	SendByteBBSPI@output& (0+255),7,b
  5413  002E7C  EF42  F017         	goto	u1321
  5414  002E80  EF44  F017         	goto	u1320
  5415  002E84                     u1321:
  5416  002E84  EF47  F017         	goto	l35
  5417  002E88                     u1320:
  5418  002E88                     
  5419                           ; BSR set to: 0
  5420                           ;BBSPI_LCD.c: 65:             LATCbits.LATC5 = 1;
  5421  002E88  8A8B               	bsf	139,5,c	;volatile
  5422  002E8A  EF48  F017         	goto	l36
  5423  002E8E                     l35:
  5424                           
  5425                           ; BSR set to: 0
  5426                           ;BBSPI_LCD.c: 67:             LATCbits.LATC5 = 0;
  5427  002E8E  9A8B               	bcf	139,5,c	;volatile
  5428  002E90                     l36:
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;BBSPI_LCD.c: 69:         if (LATCbits.LATC4)
  5432  002E90  A88B               	btfss	139,4,c	;volatile
  5433  002E92  EF4D  F017         	goto	u1331
  5434  002E96  EF4F  F017         	goto	u1330
  5435  002E9A                     u1331:
  5436  002E9A  EF53  F017         	goto	l2381
  5437  002E9E                     u1330:
  5438  002E9E                     
  5439                           ; BSR set to: 0
  5440                           ;BBSPI_LCD.c: 70:             input = (input << 1) | 0x1;
  5441  002E9E  80D8               	bsf	status,0,c
  5442  002EA0  376A               	rlcf	SendByteBBSPI@input& (0+255),f,b
  5443  002EA2  EF56  F017         	goto	l2383
  5444  002EA6                     l2381:
  5445                           
  5446                           ; BSR set to: 0
  5447                           ;BBSPI_LCD.c: 72:             input = input << 1;
  5448  002EA6  516A               	movf	SendByteBBSPI@input& (0+255),w,b
  5449  002EA8  256A               	addwf	SendByteBBSPI@input& (0+255),w,b
  5450  002EAA  6F6A               	movwf	SendByteBBSPI@input& (0+255),b
  5451  002EAC                     l2383:
  5452                           
  5453                           ; BSR set to: 0
  5454                           ;BBSPI_LCD.c: 73:         LATCbits.LATC3 = 1;
  5455  002EAC  868B               	bsf	139,3,c	;volatile
  5456  002EAE                     
  5457                           ; BSR set to: 0
  5458                           ;BBSPI_LCD.c: 74:         __nop();__nop();__nop();__nop();__nop();__nop();
  5459  002EAE  F000               	nop	
  5460  002EB0  F000               	nop	
  5461  002EB2  F000               	nop	
  5462  002EB4  F000               	nop	
  5463  002EB6  F000               	nop	
  5464  002EB8  F000               	nop	
  5465  002EBA                     
  5466                           ;BBSPI_LCD.c: 75:         __nop();__nop();__nop();__nop();__nop();__nop();
  5467  002EBA  F000               	nop	
  5468  002EBC  F000               	nop	
  5469  002EBE  F000               	nop	
  5470  002EC0  F000               	nop	
  5471  002EC2  F000               	nop	
  5472  002EC4  F000               	nop	
  5473  002EC6                     
  5474                           ;BBSPI_LCD.c: 76:         LATCbits.LATC3 = 0;
  5475  002EC6  968B               	bcf	139,3,c	;volatile
  5476                           
  5477                           ;BBSPI_LCD.c: 77:         output <<= 1;
  5478  002EC8  0100               	movlb	0	; () banked
  5479  002ECA  90D8               	bcf	status,0,c
  5480  002ECC  3768               	rlcf	SendByteBBSPI@output& (0+255),f,b
  5481  002ECE                     
  5482                           ; BSR set to: 0
  5483                           ;BBSPI_LCD.c: 78:     }
  5484  002ECE  2B69               	incf	SendByteBBSPI@bitcount& (0+255),f,b
  5485  002ED0                     
  5486                           ; BSR set to: 0
  5487  002ED0  0E07               	movlw	7
  5488  002ED2  6569               	cpfsgt	SendByteBBSPI@bitcount& (0+255),b
  5489  002ED4  EF6E  F017         	goto	u1341
  5490  002ED8  EF70  F017         	goto	u1340
  5491  002EDC                     u1341:
  5492  002EDC  EF3D  F017         	goto	l33
  5493  002EE0                     u1340:
  5494  002EE0                     
  5495                           ; BSR set to: 0
  5496  002EE0  0012               	return		;funcret
  5497  002EE2                     __end_of_SendByteBBSPI:
  5498                           	opt callstack 0
  5499                           
  5500 ;; *************** function _InitBBSPI *****************
  5501 ;; Defined at:
  5502 ;;		line 35 in file "BBSPI_LCD.c"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;		None
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;		None
  5507 ;; Return value:  Size  Location     Type
  5508 ;;                  1    wreg      void 
  5509 ;; Registers used:
  5510 ;;		None
  5511 ;; Tracked objects:
  5512 ;;		On entry : 0/0
  5513 ;;		On exit  : 0/0
  5514 ;;		Unchanged: 0/0
  5515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5520 ;;Total ram usage:        0 bytes
  5521 ;; Hardware stack levels used:    1
  5522 ;; Hardware stack levels required when called:    6
  5523 ;; This function calls:
  5524 ;;		Nothing
  5525 ;; This function is called by:
  5526 ;;		_LCDInit
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           
  5530                           	psect	text31
  5531  003476                     __ptext31:
  5532                           	opt callstack 0
  5533  003476                     _InitBBSPI:
  5534                           	opt callstack 22
  5535  003476                     
  5536                           ;BBSPI_LCD.c: 37:     TRISAbits.TRISA2 = 0;
  5537  003476  9492               	bcf	146,2,c	;volatile
  5538                           
  5539                           ;BBSPI_LCD.c: 38:     TRISCbits.TRISC4 = 1;
  5540  003478  8894               	bsf	148,4,c	;volatile
  5541                           
  5542                           ;BBSPI_LCD.c: 39:     TRISCbits.TRISC5 = 0;
  5543  00347A  9A94               	bcf	148,5,c	;volatile
  5544                           
  5545                           ;BBSPI_LCD.c: 40:     TRISCbits.TRISC3 = 0;
  5546  00347C  9694               	bcf	148,3,c	;volatile
  5547                           
  5548                           ;BBSPI_LCD.c: 42:     LATAbits.LATA2 = 1;
  5549  00347E  8489               	bsf	137,2,c	;volatile
  5550                           
  5551                           ;BBSPI_LCD.c: 43:     LATCbits.LATC4 = 1;
  5552  003480  888B               	bsf	139,4,c	;volatile
  5553                           
  5554                           ;BBSPI_LCD.c: 44:     LATCbits.LATC5 = 0;
  5555  003482  9A8B               	bcf	139,5,c	;volatile
  5556                           
  5557                           ;BBSPI_LCD.c: 45:     LATCbits.LATC3 = 0;
  5558  003484  968B               	bcf	139,3,c	;volatile
  5559  003486  0012               	return		;funcret
  5560  003488                     __end_of_InitBBSPI:
  5561                           	opt callstack 0
  5562                           
  5563 ;; *************** function _LINKED_LIST_INITIALIZATION *****************
  5564 ;; Defined at:
  5565 ;;		line 2 in file "linked_list.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;		None
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;  i               2   14[BANK0 ] int 
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  1    wreg      void 
  5572 ;; Registers used:
  5573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5574 ;; Tracked objects:
  5575 ;;		On entry : 0/0
  5576 ;;		On exit  : 0/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5580 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5582 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5583 ;;Total ram usage:        2 bytes
  5584 ;; Hardware stack levels used:    1
  5585 ;; Hardware stack levels required when called:    7
  5586 ;; This function calls:
  5587 ;;		___wmul
  5588 ;; This function is called by:
  5589 ;;		_main
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592                           
  5593                           	psect	text32
  5594  0024A0                     __ptext32:
  5595                           	opt callstack 0
  5596  0024A0                     _LINKED_LIST_INITIALIZATION:
  5597                           	opt callstack 23
  5598  0024A0                     
  5599                           ;linked_list.c: 4:     head = -1;
  5600  0024A0  0100               	movlb	0	; () banked
  5601  0024A2  69F1               	setf	_head& (0+255),b
  5602  0024A4  69F2               	setf	(_head+1)& (0+255),b
  5603  0024A6                     
  5604                           ; BSR set to: 0
  5605                           ;linked_list.c: 5:     no_funcs = 0;
  5606  0024A6  0E00               	movlw	0
  5607  0024A8  6FE9               	movwf	(_no_funcs+1)& (0+255),b
  5608  0024AA  0E00               	movlw	0
  5609  0024AC  6FE8               	movwf	_no_funcs& (0+255),b
  5610                           
  5611                           ;linked_list.c: 6:  for (int i = 0; i < 20; i++)
  5612  0024AE  0E00               	movlw	0
  5613  0024B0  6F6F               	movwf	(LINKED_LIST_INITIALIZATION@i+1)& (0+255),b
  5614  0024B2  0E00               	movlw	0
  5615  0024B4  6F6E               	movwf	LINKED_LIST_INITIALIZATION@i& (0+255),b
  5616  0024B6                     l3063:
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;linked_list.c: 7:  {;linked_list.c: 8:   array[i].next = -1;
  5620  0024B6  C06E  F068         	movff	LINKED_LIST_INITIALIZATION@i,___wmul@multiplier
  5621  0024BA  C06F  F069         	movff	LINKED_LIST_INITIALIZATION@i+1,___wmul@multiplier+1
  5622  0024BE  0E00               	movlw	0
  5623  0024C0  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5624  0024C2  0E0D               	movlw	13
  5625  0024C4  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  5626  0024C6  ECF5  F019         	call	___wmul	;wreg free
  5627  0024CA  0EE0               	movlw	low _array
  5628  0024CC  0100               	movlb	0	; () banked
  5629  0024CE  2568               	addwf	?___wmul& (0+255),w,b
  5630  0024D0  6ED9               	movwf	fsr2l,c
  5631  0024D2  0E0C               	movlw	high _array
  5632  0024D4  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  5633  0024D6  6EDA               	movwf	fsr2h,c
  5634  0024D8  0EFF               	movlw	255
  5635  0024DA  6EDE               	movwf	postinc2,c
  5636  0024DC  0EFF               	movlw	255
  5637  0024DE  6EDD               	movwf	postdec2,c
  5638                           
  5639                           ;linked_list.c: 9:   array[i].delay = 0;
  5640  0024E0  C06E  F068         	movff	LINKED_LIST_INITIALIZATION@i,___wmul@multiplier
  5641  0024E4  C06F  F069         	movff	LINKED_LIST_INITIALIZATION@i+1,___wmul@multiplier+1
  5642  0024E8  0E00               	movlw	0
  5643  0024EA  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5644  0024EC  0E0D               	movlw	13
  5645  0024EE  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  5646  0024F0  ECF5  F019         	call	___wmul	;wreg free
  5647  0024F4  0EE2               	movlw	low (_array+2)
  5648  0024F6  0100               	movlb	0	; () banked
  5649  0024F8  2568               	addwf	?___wmul& (0+255),w,b
  5650  0024FA  6ED9               	movwf	fsr2l,c
  5651  0024FC  0E0C               	movlw	high (_array+2)
  5652  0024FE  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  5653  002500  6EDA               	movwf	fsr2h,c
  5654  002502  6ADE               	clrf	postinc2,c
  5655  002504  6ADE               	clrf	postinc2,c
  5656  002506  6ADE               	clrf	postinc2,c
  5657  002508  6ADD               	clrf	postdec2,c
  5658                           
  5659                           ;linked_list.c: 10:   array[i].period = 0;
  5660  00250A  C06E  F068         	movff	LINKED_LIST_INITIALIZATION@i,___wmul@multiplier
  5661  00250E  C06F  F069         	movff	LINKED_LIST_INITIALIZATION@i+1,___wmul@multiplier+1
  5662  002512  0E00               	movlw	0
  5663  002514  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5664  002516  0E0D               	movlw	13
  5665  002518  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  5666  00251A  ECF5  F019         	call	___wmul	;wreg free
  5667  00251E  0EE6               	movlw	low (_array+6)
  5668  002520  0100               	movlb	0	; () banked
  5669  002522  2568               	addwf	?___wmul& (0+255),w,b
  5670  002524  6ED9               	movwf	fsr2l,c
  5671  002526  0E0C               	movlw	high (_array+6)
  5672  002528  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  5673  00252A  6EDA               	movwf	fsr2h,c
  5674  00252C  6ADE               	clrf	postinc2,c
  5675  00252E  6ADE               	clrf	postinc2,c
  5676  002530  6ADE               	clrf	postinc2,c
  5677  002532  6ADD               	clrf	postdec2,c
  5678                           
  5679                           ;linked_list.c: 11:   array[i].function = ((void*)0);
  5680  002534  C06E  F068         	movff	LINKED_LIST_INITIALIZATION@i,___wmul@multiplier
  5681  002538  C06F  F069         	movff	LINKED_LIST_INITIALIZATION@i+1,___wmul@multiplier+1
  5682  00253C  0E00               	movlw	0
  5683  00253E  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5684  002540  0E0D               	movlw	13
  5685  002542  6F6A               	movwf	___wmul@multiplicand& (0+255),b
  5686  002544  ECF5  F019         	call	___wmul	;wreg free
  5687  002548  0EEA               	movlw	low (_array+10)
  5688  00254A  0100               	movlb	0	; () banked
  5689  00254C  2568               	addwf	?___wmul& (0+255),w,b
  5690  00254E  6ED9               	movwf	fsr2l,c
  5691  002550  0E0C               	movlw	high (_array+10)
  5692  002552  2169               	addwfc	(?___wmul+1)& (0+255),w,b
  5693  002554  6EDA               	movwf	fsr2h,c
  5694  002556  0E00               	movlw	0
  5695  002558  6EDE               	movwf	postinc2,c
  5696  00255A  0E00               	movlw	0
  5697  00255C  6EDE               	movwf	postinc2,c
  5698  00255E  0E00               	movlw	0
  5699  002560  6EDE               	movwf	postinc2,c
  5700  002562                     
  5701                           ; BSR set to: 0
  5702                           ;linked_list.c: 12:  }
  5703  002562  4B6E               	infsnz	LINKED_LIST_INITIALIZATION@i& (0+255),f,b
  5704  002564  2B6F               	incf	(LINKED_LIST_INITIALIZATION@i+1)& (0+255),f,b
  5705  002566                     
  5706                           ; BSR set to: 0
  5707  002566  BF6F               	btfsc	(LINKED_LIST_INITIALIZATION@i+1)& (0+255),7,b
  5708  002568  EFBF  F012         	goto	u2261
  5709  00256C  516F               	movf	(LINKED_LIST_INITIALIZATION@i+1)& (0+255),w,b
  5710  00256E  E109               	bnz	u2260
  5711  002570  0E14               	movlw	20
  5712  002572  5D6E               	subwf	LINKED_LIST_INITIALIZATION@i& (0+255),w,b
  5713  002574  A0D8               	btfss	status,0,c
  5714  002576  EFBF  F012         	goto	u2261
  5715  00257A  EFC1  F012         	goto	u2260
  5716  00257E                     u2261:
  5717  00257E  EF5B  F012         	goto	l3063
  5718  002582                     u2260:
  5719  002582                     
  5720                           ; BSR set to: 0
  5721  002582  0012               	return		;funcret
  5722  002584                     __end_of_LINKED_LIST_INITIALIZATION:
  5723                           	opt callstack 0
  5724                           
  5725 ;; *************** function ___wmul *****************
  5726 ;; Defined at:
  5727 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  5728 ;; Parameters:    Size  Location     Type
  5729 ;;  multiplier      2    8[BANK0 ] unsigned int 
  5730 ;;  multiplicand    2   10[BANK0 ] unsigned int 
  5731 ;; Auto vars:     Size  Location     Type
  5732 ;;  product         2   12[BANK0 ] unsigned int 
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  2    8[BANK0 ] unsigned int 
  5735 ;; Registers used:
  5736 ;;		wreg, status,2, status,0, prodl, prodh
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5742 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5743 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5745 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5746 ;;Total ram usage:        6 bytes
  5747 ;; Hardware stack levels used:    1
  5748 ;; Hardware stack levels required when called:    6
  5749 ;; This function calls:
  5750 ;;		Nothing
  5751 ;; This function is called by:
  5752 ;;		_LINKED_LIST_INITIALIZATION
  5753 ;;		_ADD_NODE
  5754 ;;		_add
  5755 ;;		_init_queue
  5756 ;;		_dequeue
  5757 ;;		_REMOVE_NODE
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           	psect	text33
  5762  0033EA                     __ptext33:
  5763                           	opt callstack 0
  5764  0033EA                     ___wmul:
  5765                           	opt callstack 21
  5766  0033EA  0100               	movlb	0	; () banked
  5767  0033EC  5168               	movf	___wmul@multiplier& (0+255),w,b
  5768  0033EE  036A               	mulwf	___wmul@multiplicand& (0+255),b
  5769  0033F0  CFF3 F06C          	movff	prodl,___wmul@product
  5770  0033F4  CFF4 F06D          	movff	prodh,___wmul@product+1
  5771  0033F8  5168               	movf	___wmul@multiplier& (0+255),w,b
  5772  0033FA  036B               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5773  0033FC  50F3               	movf	243,w,c
  5774  0033FE  276D               	addwf	(___wmul@product+1)& (0+255),f,b
  5775  003400  5169               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5776  003402  036A               	mulwf	___wmul@multiplicand& (0+255),b
  5777  003404  50F3               	movf	243,w,c
  5778  003406  276D               	addwf	(___wmul@product+1)& (0+255),f,b
  5779  003408                     
  5780                           ; BSR set to: 0
  5781  003408  C06C  F068         	movff	___wmul@product,?___wmul
  5782  00340C  C06D  F069         	movff	___wmul@product+1,?___wmul+1
  5783  003410                     
  5784                           ; BSR set to: 0
  5785  003410  0012               	return		;funcret
  5786  003412                     __end_of___wmul:
  5787                           	opt callstack 0
  5788                           
  5789 ;; *************** function _INTERRUPT_InterruptManager *****************
  5790 ;; Defined at:
  5791 ;;		line 3 in file "interrupt.c"
  5792 ;; Parameters:    Size  Location     Type
  5793 ;;		None
  5794 ;; Auto vars:     Size  Location     Type
  5795 ;;		None
  5796 ;; Return value:  Size  Location     Type
  5797 ;;                  1    wreg      void 
  5798 ;; Registers used:
  5799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5800 ;; Tracked objects:
  5801 ;;		On entry : 0/0
  5802 ;;		On exit  : 0/0
  5803 ;;		Unchanged: 0/0
  5804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5807 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5808 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5809 ;;Total ram usage:        8 bytes
  5810 ;; Hardware stack levels used:    1
  5811 ;; Hardware stack levels required when called:    5
  5812 ;; This function calls:
  5813 ;;		_TMR0_IRS
  5814 ;;		_read_button
  5815 ;;		_read_button_increase
  5816 ;;		_timer_ISR
  5817 ;; This function is called by:
  5818 ;;		Interrupt level 2
  5819 ;; This function uses a non-reentrant model
  5820 ;;
  5821                           
  5822                           	psect	intcode
  5823  000008                     __pintcode:
  5824                           	opt callstack 0
  5825  000008                     _INTERRUPT_InterruptManager:
  5826                           	opt callstack 19
  5827                           
  5828                           ; BSR set to: 0
  5829                           ;incstack = 0
  5830  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5831  00000A  EDF7  F015         	call	int_func,f	;refresh shadow registers
  5832                           
  5833                           	psect	intcode_body
  5834  002BEE                     __pintcode_body:
  5835                           	opt callstack 19
  5836  002BEE                     int_func:
  5837                           	opt callstack 19
  5838  002BEE  0006               	pop		; remove dummy address from shadow register refresh
  5839  002BF0  CFE9 F060          	movff	fsr0l,??_INTERRUPT_InterruptManager
  5840  002BF4  CFEA F061          	movff	fsr0h,??_INTERRUPT_InterruptManager+1
  5841  002BF8  CFE1 F062          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
  5842  002BFC  CFE2 F063          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
  5843  002C00  CFD9 F064          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
  5844  002C04  CFDA F065          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
  5845  002C08  CFF3 F066          	movff	prodl,??_INTERRUPT_InterruptManager+6
  5846  002C0C  CFF4 F067          	movff	prodh,??_INTERRUPT_InterruptManager+7
  5847  002C10                     
  5848                           ;interrupt.c: 5:     if (INTCONbits.TMR0IF == 1 && INTCONbits.TMR0IE == 1)
  5849  002C10  A4F2               	btfss	242,2,c	;volatile
  5850  002C12  EF0D  F016         	goto	i2u258_41
  5851  002C16  EF0F  F016         	goto	i2u258_40
  5852  002C1A                     i2u258_41:
  5853  002C1A  EF2A  F016         	goto	i2l226
  5854  002C1E                     i2u258_40:
  5855  002C1E  AAF2               	btfss	242,5,c	;volatile
  5856  002C20  EF14  F016         	goto	i2u259_41
  5857  002C24  EF16  F016         	goto	i2u259_40
  5858  002C28                     i2u259_41:
  5859  002C28  EF2A  F016         	goto	i2l226
  5860  002C2C                     i2u259_40:
  5861  002C2C                     
  5862                           ;interrupt.c: 6:     {;interrupt.c: 7:         read_button();
  5863  002C2C  EC73  F018         	call	_read_button	;wreg free
  5864                           
  5865                           ;interrupt.c: 8:         read_button_increase();
  5866  002C30  EC43  F018         	call	_read_button_increase	;wreg free
  5867  002C34                     
  5868                           ;interrupt.c: 9:         if (time_out_dht>0) time_out_dht--;
  5869  002C34  505D               	movf	_time_out_dht^0,w,c
  5870  002C36  105E               	iorwf	(_time_out_dht+1)^0,w,c
  5871  002C38  B4D8               	btfsc	status,2,c
  5872  002C3A  EF21  F016         	goto	i2u260_41
  5873  002C3E  EF23  F016         	goto	i2u260_40
  5874  002C42                     i2u260_41:
  5875  002C42  EF26  F016         	goto	i2l3327
  5876  002C46                     i2u260_40:
  5877  002C46  065D               	decf	_time_out_dht^0,f,c
  5878  002C48  A0D8               	btfss	status,0,c
  5879  002C4A  065E               	decf	(_time_out_dht+1)^0,f,c
  5880  002C4C                     i2l3327:
  5881                           
  5882                           ;interrupt.c: 10:         timer_ISR();
  5883  002C4C  ECC1  F019         	call	_timer_ISR	;wreg free
  5884  002C50                     
  5885                           ;interrupt.c: 11:         TMR0_IRS();
  5886  002C50  EC54  F01A         	call	_TMR0_IRS	;wreg free
  5887  002C54                     i2l226:
  5888  002C54  C067  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
  5889  002C58  C066  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
  5890  002C5C  C065  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
  5891  002C60  C064  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
  5892  002C64  C063  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
  5893  002C68  C062  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
  5894  002C6C  C061  FFEA         	movff	??_INTERRUPT_InterruptManager+1,fsr0h
  5895  002C70  C060  FFE9         	movff	??_INTERRUPT_InterruptManager,fsr0l
  5896  002C74  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5897  002C76  0011               	retfie		f
  5898  002C78                     __end_of_INTERRUPT_InterruptManager:
  5899                           	opt callstack 0
  5900                           
  5901 ;; *************** function _timer_ISR *****************
  5902 ;; Defined at:
  5903 ;;		line 37 in file "clock.c"
  5904 ;; Parameters:    Size  Location     Type
  5905 ;;		None
  5906 ;; Auto vars:     Size  Location     Type
  5907 ;;		None
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  1    wreg      void 
  5910 ;; Registers used:
  5911 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5921 ;;Total ram usage:        0 bytes
  5922 ;; Hardware stack levels used:    1
  5923 ;; Hardware stack levels required when called:    4
  5924 ;; This function calls:
  5925 ;;		_UPDATE_TIMER
  5926 ;; This function is called by:
  5927 ;;		_INTERRUPT_InterruptManager
  5928 ;; This function uses a non-reentrant model
  5929 ;;
  5930                           
  5931                           	psect	text35
  5932  003382                     __ptext35:
  5933                           	opt callstack 0
  5934  003382                     _timer_ISR:
  5935                           	opt callstack 19
  5936  003382                     
  5937                           ;clock.c: 39:     if (no_q<1000 && no_funcs != 0)UPDATE_TIMER();
  5938  003382  0100               	movlb	0	; () banked
  5939  003384  BFD1               	btfsc	(_no_q+1)& (0+255),7,b
  5940  003386  EFD0  F019         	goto	i2u218_40
  5941  00338A  0EE8               	movlw	232
  5942  00338C  5DD0               	subwf	_no_q& (0+255),w,b
  5943  00338E  0E03               	movlw	3
  5944  003390  59D1               	subwfb	(_no_q+1)& (0+255),w,b
  5945  003392  B0D8               	btfsc	status,0,c
  5946  003394  EFCE  F019         	goto	i2u218_41
  5947  003398  EFD0  F019         	goto	i2u218_40
  5948  00339C                     i2u218_41:
  5949  00339C  EFDB  F019         	goto	i2l149
  5950  0033A0                     i2u218_40:
  5951  0033A0                     
  5952                           ; BSR set to: 0
  5953  0033A0  51E8               	movf	_no_funcs& (0+255),w,b
  5954  0033A2  11E9               	iorwf	(_no_funcs+1)& (0+255),w,b
  5955  0033A4  B4D8               	btfsc	status,2,c
  5956  0033A6  EFD7  F019         	goto	i2u219_41
  5957  0033AA  EFD9  F019         	goto	i2u219_40
  5958  0033AE                     i2u219_41:
  5959  0033AE  EFDB  F019         	goto	i2l149
  5960  0033B2                     i2u219_40:
  5961  0033B2                     
  5962                           ; BSR set to: 0
  5963  0033B2  ECC2  F00F         	call	_UPDATE_TIMER	;wreg free
  5964  0033B6                     i2l149:
  5965  0033B6  0012               	return		;funcret
  5966  0033B8                     __end_of_timer_ISR:
  5967                           	opt callstack 0
  5968                           
  5969 ;; *************** function _UPDATE_TIMER *****************
  5970 ;; Defined at:
  5971 ;;		line 66 in file "linked_list.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;		None
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;  period          4   80[COMRAM] long 
  5976 ;;  delay           4   76[COMRAM] long 
  5977 ;;  function        3   84[COMRAM] PTR FTN()void 
  5978 ;;		 -> get_temp_humid(1), check_button(1), heater_heatpumper(1), NULL(0), 
  5979 ;;  temp_head       2   90[COMRAM] int 
  5980 ;; Return value:  Size  Location     Type
  5981 ;;                  1    wreg      void 
  5982 ;; Registers used:
  5983 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5984 ;; Tracked objects:
  5985 ;;		On entry : 0/0
  5986 ;;		On exit  : 0/0
  5987 ;;		Unchanged: 0/0
  5988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5990 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5991 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5992 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;Total ram usage:       20 bytes
  5994 ;; Hardware stack levels used:    1
  5995 ;; Hardware stack levels required when called:    3
  5996 ;; This function calls:
  5997 ;;		_clean_node
  5998 ;;		_enqueue
  5999 ;;		i2_ADD_NODE
  6000 ;;		i2___wmul
  6001 ;; This function is called by:
  6002 ;;		_timer_ISR
  6003 ;; This function uses a non-reentrant model
  6004 ;;
  6005                           
  6006                           	psect	text36
  6007  001F84                     __ptext36:
  6008                           	opt callstack 0
  6009  001F84                     _UPDATE_TIMER:
  6010                           	opt callstack 19
  6011  001F84                     
  6012                           ;linked_list.c: 68:     if (array[head].delay != 0) array[head].delay = array[head].dela
      +                          y -10;
  6013  001F84  C0F1  F001         	movff	_head,i2___wmul@multiplier
  6014  001F88  C0F2  F002         	movff	_head+1,i2___wmul@multiplier+1
  6015  001F8C  0E00               	movlw	0
  6016  001F8E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6017  001F90  0E0D               	movlw	13
  6018  001F92  6E03               	movwf	i2___wmul@multiplicand^0,c
  6019  001F94  EC09  F01A         	call	i2___wmul	;wreg free
  6020  001F98  0EE2               	movlw	low (_array+2)
  6021  001F9A  2401               	addwf	?i2___wmul^0,w,c
  6022  001F9C  6ED9               	movwf	fsr2l,c
  6023  001F9E  0E0C               	movlw	high (_array+2)
  6024  001FA0  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6025  001FA2  6EDA               	movwf	fsr2h,c
  6026  001FA4  50DE               	movf	postinc2,w,c
  6027  001FA6  10DE               	iorwf	postinc2,w,c
  6028  001FA8  10DE               	iorwf	postinc2,w,c
  6029  001FAA  10DE               	iorwf	postinc2,w,c
  6030  001FAC  B4D8               	btfsc	status,2,c
  6031  001FAE  EFDB  F00F         	goto	i2u200_41
  6032  001FB2  EFDD  F00F         	goto	i2u200_40
  6033  001FB6                     i2u200_41:
  6034  001FB6  EFAD  F010         	goto	i2l2901
  6035  001FBA                     i2u200_40:
  6036  001FBA  C0F1  F001         	movff	_head,i2___wmul@multiplier
  6037  001FBE  C0F2  F002         	movff	_head+1,i2___wmul@multiplier+1
  6038  001FC2  0E00               	movlw	0
  6039  001FC4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6040  001FC6  0E0D               	movlw	13
  6041  001FC8  6E03               	movwf	i2___wmul@multiplicand^0,c
  6042  001FCA  EC09  F01A         	call	i2___wmul	;wreg free
  6043  001FCE  0EE2               	movlw	low (_array+2)
  6044  001FD0  2401               	addwf	?i2___wmul^0,w,c
  6045  001FD2  6ED9               	movwf	fsr2l,c
  6046  001FD4  0E0C               	movlw	high (_array+2)
  6047  001FD6  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6048  001FD8  6EDA               	movwf	fsr2h,c
  6049  001FDA  0EF6               	movlw	246
  6050  001FDC  24DE               	addwf	postinc2,w,c
  6051  001FDE  6E49               	movwf	??_UPDATE_TIMER^0,c
  6052  001FE0  0EFF               	movlw	255
  6053  001FE2  20DE               	addwfc	postinc2,w,c
  6054  001FE4  6E4A               	movwf	(??_UPDATE_TIMER+1)^0,c
  6055  001FE6  0EFF               	movlw	255
  6056  001FE8  20DE               	addwfc	postinc2,w,c
  6057  001FEA  6E4B               	movwf	(??_UPDATE_TIMER+2)^0,c
  6058  001FEC  0EFF               	movlw	255
  6059  001FEE  20DE               	addwfc	postinc2,w,c
  6060  001FF0  6E4C               	movwf	(??_UPDATE_TIMER+3)^0,c
  6061  001FF2  C0F1  F001         	movff	_head,i2___wmul@multiplier
  6062  001FF6  C0F2  F002         	movff	_head+1,i2___wmul@multiplier+1
  6063  001FFA  0E00               	movlw	0
  6064  001FFC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6065  001FFE  0E0D               	movlw	13
  6066  002000  6E03               	movwf	i2___wmul@multiplicand^0,c
  6067  002002  EC09  F01A         	call	i2___wmul	;wreg free
  6068  002006  0EE2               	movlw	low (_array+2)
  6069  002008  2401               	addwf	?i2___wmul^0,w,c
  6070  00200A  6ED9               	movwf	fsr2l,c
  6071  00200C  0E0C               	movlw	high (_array+2)
  6072  00200E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6073  002010  6EDA               	movwf	fsr2h,c
  6074  002012  C049  FFDE         	movff	??_UPDATE_TIMER,postinc2
  6075  002016  C04A  FFDE         	movff	??_UPDATE_TIMER+1,postinc2
  6076  00201A  C04B  FFDE         	movff	??_UPDATE_TIMER+2,postinc2
  6077  00201E  C04C  FFDE         	movff	??_UPDATE_TIMER+3,postinc2
  6078  002022  EFC8  F010         	goto	i2l324
  6079  002026                     i2l2895:
  6080                           
  6081                           ;linked_list.c: 72:         {;linked_list.c: 73:             enqueue(array[head].functio
      +                          n);
  6082  002026  C0F1  F001         	movff	_head,i2___wmul@multiplier
  6083  00202A  C0F2  F002         	movff	_head+1,i2___wmul@multiplier+1
  6084  00202E  0E00               	movlw	0
  6085  002030  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6086  002032  0E0D               	movlw	13
  6087  002034  6E03               	movwf	i2___wmul@multiplicand^0,c
  6088  002036  EC09  F01A         	call	i2___wmul	;wreg free
  6089  00203A  0EEA               	movlw	low (_array+10)
  6090  00203C  2401               	addwf	?i2___wmul^0,w,c
  6091  00203E  6ED9               	movwf	fsr2l,c
  6092  002040  0E0C               	movlw	high (_array+10)
  6093  002042  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6094  002044  6EDA               	movwf	fsr2h,c
  6095  002046  CFDE F058          	movff	postinc2,_UPDATE_TIMER$2273
  6096  00204A  CFDE F059          	movff	postinc2,_UPDATE_TIMER$2273+1
  6097  00204E  CFDD F05A          	movff	postdec2,_UPDATE_TIMER$2273+2
  6098                           
  6099                           ;linked_list.c: 72:         {;linked_list.c: 73:             enqueue(array[head].functio
      +                          n);
  6100  002052  C058  F007         	movff	_UPDATE_TIMER$2273,enqueue@function
  6101  002056  C059  F008         	movff	_UPDATE_TIMER$2273+1,enqueue@function+1
  6102  00205A  C05A  F009         	movff	_UPDATE_TIMER$2273+2,enqueue@function+2
  6103  00205E  EC5A  F015         	call	_enqueue	;wreg free
  6104                           
  6105                           ;linked_list.c: 74:             timestamp_t delay = array[head].period;
  6106  002062  C0F1  F001         	movff	_head,i2___wmul@multiplier
  6107  002066  C0F2  F002         	movff	_head+1,i2___wmul@multiplier+1
  6108  00206A  0E00               	movlw	0
  6109  00206C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6110  00206E  0E0D               	movlw	13
  6111  002070  6E03               	movwf	i2___wmul@multiplicand^0,c
  6112  002072  EC09  F01A         	call	i2___wmul	;wreg free
  6113  002076  0EE6               	movlw	low (_array+6)
  6114  002078  2401               	addwf	?i2___wmul^0,w,c
  6115  00207A  6ED9               	movwf	fsr2l,c
  6116  00207C  0E0C               	movlw	high (_array+6)
  6117  00207E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6118  002080  6EDA               	movwf	fsr2h,c
  6119  002082  CFDE F04D          	movff	postinc2,UPDATE_TIMER@delay
  6120  002086  CFDE F04E          	movff	postinc2,UPDATE_TIMER@delay+1
  6121  00208A  CFDE F04F          	movff	postinc2,UPDATE_TIMER@delay+2
  6122  00208E  CFDE F050          	movff	postinc2,UPDATE_TIMER@delay+3
  6123                           
  6124                           ;linked_list.c: 75:             timestamp_t period = array[head].period;
  6125  002092  C0F1  F001         	movff	_head,i2___wmul@multiplier
  6126  002096  C0F2  F002         	movff	_head+1,i2___wmul@multiplier+1
  6127  00209A  0E00               	movlw	0
  6128  00209C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6129  00209E  0E0D               	movlw	13
  6130  0020A0  6E03               	movwf	i2___wmul@multiplicand^0,c
  6131  0020A2  EC09  F01A         	call	i2___wmul	;wreg free
  6132  0020A6  0EE6               	movlw	low (_array+6)
  6133  0020A8  2401               	addwf	?i2___wmul^0,w,c
  6134  0020AA  6ED9               	movwf	fsr2l,c
  6135  0020AC  0E0C               	movlw	high (_array+6)
  6136  0020AE  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6137  0020B0  6EDA               	movwf	fsr2h,c
  6138  0020B2  CFDE F051          	movff	postinc2,UPDATE_TIMER@period
  6139  0020B6  CFDE F052          	movff	postinc2,UPDATE_TIMER@period+1
  6140  0020BA  CFDE F053          	movff	postinc2,UPDATE_TIMER@period+2
  6141  0020BE  CFDE F054          	movff	postinc2,UPDATE_TIMER@period+3
  6142                           
  6143                           ;linked_list.c: 76:             FUNCTION_PTR function = array[head].function;
  6144  0020C2  C0F1  F001         	movff	_head,i2___wmul@multiplier
  6145  0020C6  C0F2  F002         	movff	_head+1,i2___wmul@multiplier+1
  6146  0020CA  0E00               	movlw	0
  6147  0020CC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6148  0020CE  0E0D               	movlw	13
  6149  0020D0  6E03               	movwf	i2___wmul@multiplicand^0,c
  6150  0020D2  EC09  F01A         	call	i2___wmul	;wreg free
  6151  0020D6  0EEA               	movlw	low (_array+10)
  6152  0020D8  2401               	addwf	?i2___wmul^0,w,c
  6153  0020DA  6ED9               	movwf	fsr2l,c
  6154  0020DC  0E0C               	movlw	high (_array+10)
  6155  0020DE  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6156  0020E0  6EDA               	movwf	fsr2h,c
  6157  0020E2  CFDE F055          	movff	postinc2,UPDATE_TIMER@function
  6158  0020E6  CFDE F056          	movff	postinc2,UPDATE_TIMER@function+1
  6159  0020EA  CFDD F057          	movff	postdec2,UPDATE_TIMER@function+2
  6160  0020EE                     
  6161                           ;linked_list.c: 77:             int temp_head = head;
  6162  0020EE  C0F1  F05B         	movff	_head,UPDATE_TIMER@temp_head
  6163  0020F2  C0F2  F05C         	movff	_head+1,UPDATE_TIMER@temp_head+1
  6164                           
  6165                           ;linked_list.c: 79:             head = array[head].next;
  6166  0020F6  C0F1  F001         	movff	_head,i2___wmul@multiplier
  6167  0020FA  C0F2  F002         	movff	_head+1,i2___wmul@multiplier+1
  6168  0020FE  0E00               	movlw	0
  6169  002100  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6170  002102  0E0D               	movlw	13
  6171  002104  6E03               	movwf	i2___wmul@multiplicand^0,c
  6172  002106  EC09  F01A         	call	i2___wmul	;wreg free
  6173  00210A  0EE0               	movlw	low _array
  6174  00210C  2401               	addwf	?i2___wmul^0,w,c
  6175  00210E  6ED9               	movwf	fsr2l,c
  6176  002110  0E0C               	movlw	high _array
  6177  002112  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6178  002114  6EDA               	movwf	fsr2h,c
  6179  002116  CFDE F0F1          	movff	postinc2,_head
  6180  00211A  CFDD F0F2          	movff	postdec2,_head+1
  6181                           
  6182                           ;linked_list.c: 80:             clean_node(temp_head);
  6183  00211E  C05B  F007         	movff	UPDATE_TIMER@temp_head,clean_node@index
  6184  002122  C05C  F008         	movff	UPDATE_TIMER@temp_head+1,clean_node@index+1
  6185  002126  EC28  F013         	call	_clean_node	;wreg free
  6186  00212A                     
  6187                           ;linked_list.c: 82:             ADD_NODE(delay , period , function);
  6188  00212A  C04D  F01B         	movff	UPDATE_TIMER@delay,i2ADD_NODE@delay
  6189  00212E  C04E  F01C         	movff	UPDATE_TIMER@delay+1,i2ADD_NODE@delay+1
  6190  002132  C04F  F01D         	movff	UPDATE_TIMER@delay+2,i2ADD_NODE@delay+2
  6191  002136  C050  F01E         	movff	UPDATE_TIMER@delay+3,i2ADD_NODE@delay+3
  6192  00213A  C051  F01F         	movff	UPDATE_TIMER@period,i2ADD_NODE@period
  6193  00213E  C052  F020         	movff	UPDATE_TIMER@period+1,i2ADD_NODE@period+1
  6194  002142  C053  F021         	movff	UPDATE_TIMER@period+2,i2ADD_NODE@period+2
  6195  002146  C054  F022         	movff	UPDATE_TIMER@period+3,i2ADD_NODE@period+3
  6196  00214A  C055  F023         	movff	UPDATE_TIMER@function,i2ADD_NODE@function
  6197  00214E  C056  F024         	movff	UPDATE_TIMER@function+1,i2ADD_NODE@function+1
  6198  002152  C057  F025         	movff	UPDATE_TIMER@function+2,i2ADD_NODE@function+2
  6199  002156  EC73  F00A         	call	i2_ADD_NODE	;wreg free
  6200  00215A                     i2l2901:
  6201                           
  6202                           ;linked_list.c: 71:         while (array[head].delay ==0)
  6203  00215A  C0F1  F001         	movff	_head,i2___wmul@multiplier
  6204  00215E  C0F2  F002         	movff	_head+1,i2___wmul@multiplier+1
  6205  002162  0E00               	movlw	0
  6206  002164  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6207  002166  0E0D               	movlw	13
  6208  002168  6E03               	movwf	i2___wmul@multiplicand^0,c
  6209  00216A  EC09  F01A         	call	i2___wmul	;wreg free
  6210  00216E  0EE2               	movlw	low (_array+2)
  6211  002170  2401               	addwf	?i2___wmul^0,w,c
  6212  002172  6ED9               	movwf	fsr2l,c
  6213  002174  0E0C               	movlw	high (_array+2)
  6214  002176  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6215  002178  6EDA               	movwf	fsr2h,c
  6216  00217A  50DE               	movf	postinc2,w,c
  6217  00217C  10DE               	iorwf	postinc2,w,c
  6218  00217E  10DE               	iorwf	postinc2,w,c
  6219  002180  10DE               	iorwf	postinc2,w,c
  6220  002182  B4D8               	btfsc	status,2,c
  6221  002184  EFC6  F010         	goto	i2u201_41
  6222  002188  EFC8  F010         	goto	i2u201_40
  6223  00218C                     i2u201_41:
  6224  00218C  EF13  F010         	goto	i2l2895
  6225  002190                     i2u201_40:
  6226  002190                     i2l324:
  6227  002190  0012               	return		;funcret
  6228  002192                     __end_of_UPDATE_TIMER:
  6229                           	opt callstack 0
  6230                           
  6231 ;; *************** function i2_ADD_NODE *****************
  6232 ;; Defined at:
  6233 ;;		line 15 in file "linked_list.c"
  6234 ;; Parameters:    Size  Location     Type
  6235 ;;  delay           4   26[COMRAM] long 
  6236 ;;  period          4   30[COMRAM] long 
  6237 ;;  function        3   34[COMRAM] PTR FTN()void 
  6238 ;;		 -> get_temp_humid(1), check_button(1), heater_heatpumper(1), NULL(0), 
  6239 ;; Auto vars:     Size  Location     Type
  6240 ;;  ADD_NODE       13   55[COMRAM] struct Node
  6241 ;;  ADD_NODE        2   70[COMRAM] int 
  6242 ;;  ADD_NODE        2   68[COMRAM] int 
  6243 ;;  ADD_NODE        2   53[COMRAM] int 
  6244 ;;  ADD_NODE        2   51[COMRAM] int 
  6245 ;;  ADD_NODE        2   49[COMRAM] int 
  6246 ;; Return value:  Size  Location     Type
  6247 ;;                  2   26[COMRAM] int 
  6248 ;; Registers used:
  6249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6250 ;; Tracked objects:
  6251 ;;		On entry : 0/0
  6252 ;;		On exit  : 0/0
  6253 ;;		Unchanged: 0/0
  6254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6255 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6256 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6257 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6258 ;;      Totals:        46       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6259 ;;Total ram usage:       46 bytes
  6260 ;; Hardware stack levels used:    1
  6261 ;; Hardware stack levels required when called:    2
  6262 ;; This function calls:
  6263 ;;		i2___wmul
  6264 ;;		i2_add
  6265 ;;		i2_create_node
  6266 ;;		i2_return_index
  6267 ;; This function is called by:
  6268 ;;		_UPDATE_TIMER
  6269 ;; This function uses a non-reentrant model
  6270 ;;
  6271                           
  6272                           	psect	text37
  6273  0014E6                     __ptext37:
  6274                           	opt callstack 0
  6275  0014E6                     i2_ADD_NODE:
  6276                           	opt callstack 19
  6277  0014E6                     
  6278                           ;linked_list.c: 15: int ADD_NODE(timestamp_t delay , timestamp_t period , FUNCTION_PTR f
      +                          unction );linked_list.c: 16: {;linked_list.c: 17:     struct Node temp = create_node(del
      +                          ay , period , function);
  6279  0014E6  C01B  F001         	movff	i2ADD_NODE@delay,i2create_node@delay
  6280  0014EA  C01C  F002         	movff	i2ADD_NODE@delay+1,i2create_node@delay+1
  6281  0014EE  C01D  F003         	movff	i2ADD_NODE@delay+2,i2create_node@delay+2
  6282  0014F2  C01E  F004         	movff	i2ADD_NODE@delay+3,i2create_node@delay+3
  6283  0014F6  C01F  F005         	movff	i2ADD_NODE@period,i2create_node@period
  6284  0014FA  C020  F006         	movff	i2ADD_NODE@period+1,i2create_node@period+1
  6285  0014FE  C021  F007         	movff	i2ADD_NODE@period+2,i2create_node@period+2
  6286  001502  C022  F008         	movff	i2ADD_NODE@period+3,i2create_node@period+3
  6287  001506  C023  F009         	movff	i2ADD_NODE@function,i2create_node@function
  6288  00150A  C024  F00A         	movff	i2ADD_NODE@function+1,i2create_node@function+1
  6289  00150E  C025  F00B         	movff	i2ADD_NODE@function+2,i2create_node@function+2
  6290  001512  EC43  F019         	call	i2_create_node	;wreg free
  6291  001516  EE20  F038         	lfsr	2,i2ADD_NODE@temp
  6292  00151A  0E0C               	movlw	12
  6293  00151C                     i2u175_41:
  6294  00151C  CFEB FFDB          	movff	plusw0,plusw2
  6295  001520  06E8               	decf	wreg,f,c
  6296  001522  E2FC               	bc	i2u175_41
  6297  001524                     
  6298                           ;linked_list.c: 18:     int index = return_index();
  6299  001524  ECBC  F016         	call	i2_return_index	;wreg free
  6300  001528  C001  F047         	movff	?i2_return_index,i2ADD_NODE@index
  6301  00152C  C002  F048         	movff	?i2_return_index+1,i2ADD_NODE@index+1
  6302  001530                     
  6303                           ;linked_list.c: 19:     if (index != -1)
  6304  001530  2847               	incf	i2ADD_NODE@index^0,w,c
  6305  001532  E108               	bnz	i2u176_40
  6306  001534  2848               	incf	(i2ADD_NODE@index+1)^0,w,c
  6307  001536  B4D8               	btfsc	status,2,c
  6308  001538  EFA0  F00A         	goto	i2u176_41
  6309  00153C  EFA2  F00A         	goto	i2u176_40
  6310  001540                     i2u176_41:
  6311  001540  EFA5  F00C         	goto	i2l304
  6312  001544                     i2u176_40:
  6313  001544                     
  6314                           ;linked_list.c: 20:     {;linked_list.c: 21:         if (head == -1)
  6315  001544  0100               	movlb	0	; () banked
  6316  001546  29F1               	incf	_head& (0+255),w,b
  6317  001548  E106               	bnz	i2u177_41
  6318  00154A  29F2               	incf	(_head+1)& (0+255),w,b
  6319  00154C  A4D8               	btfss	status,2,c
  6320  00154E  EFAB  F00A         	goto	i2u177_41
  6321  001552  EFAD  F00A         	goto	i2u177_40
  6322  001556                     i2u177_41:
  6323  001556  EFC4  F00A         	goto	i2l303
  6324  00155A                     i2u177_40:
  6325  00155A                     
  6326                           ; BSR set to: 0
  6327                           ;linked_list.c: 22:         {;linked_list.c: 23:             head =index;
  6328  00155A  C047  F0F1         	movff	i2ADD_NODE@index,_head
  6329  00155E  C048  F0F2         	movff	i2ADD_NODE@index+1,_head+1
  6330  001562                     
  6331                           ; BSR set to: 0
  6332                           ;linked_list.c: 24:             add(temp , head);
  6333  001562  EE20  F038         	lfsr	2,i2ADD_NODE@temp
  6334  001566  EE00  F007         	lfsr	0,i2add@temp
  6335  00156A  0E0C               	movlw	12
  6336  00156C                     i2u178_41:
  6337  00156C  CFDB FFEB          	movff	plusw2,plusw0
  6338  001570  06E8               	decf	wreg,f,c
  6339  001572  E2FC               	bc	i2u178_41
  6340  001574  C0F1  F014         	movff	_head,i2add@index
  6341  001578  C0F2  F015         	movff	_head+1,i2add@index+1
  6342  00157C  ECEF  F013         	call	i2_add	;wreg free
  6343  001580  EFA5  F00C         	goto	i2l304
  6344  001584                     i2l2741:
  6345                           
  6346                           ; BSR set to: 0
  6347                           ;linked_list.c: 25:             return index;;	Return value of i2_ADD_NODE is never used
  6348  001584  EFA5  F00C         	goto	i2l304
  6349  001588                     i2l303:
  6350                           
  6351                           ; BSR set to: 0
  6352                           ;linked_list.c: 28:         {;linked_list.c: 29:             int loc = head;
  6353  001588  C0F1  F045         	movff	_head,i2ADD_NODE@loc
  6354  00158C  C0F2  F046         	movff	_head+1,i2ADD_NODE@loc+1
  6355                           
  6356                           ;linked_list.c: 30:             int pre = head;
  6357  001590  C0F1  F036         	movff	_head,i2ADD_NODE@pre
  6358  001594  C0F2  F037         	movff	_head+1,i2ADD_NODE@pre+1
  6359  001598                     
  6360                           ; BSR set to: 0
  6361                           ;linked_list.c: 31:             int loop = 1;
  6362  001598  0E00               	movlw	0
  6363  00159A  6E33               	movwf	(i2ADD_NODE@loop+1)^0,c
  6364  00159C  0E01               	movlw	1
  6365  00159E  6E32               	movwf	i2ADD_NODE@loop^0,c
  6366                           
  6367                           ;linked_list.c: 32:             while (loop<no_funcs && temp.delay >= array[loc].delay)
  6368  0015A0  EF10  F00B         	goto	i2l2753
  6369  0015A4                     i2l307:
  6370                           
  6371                           ;linked_list.c: 33:             {;linked_list.c: 34:                 pre = loc;
  6372  0015A4  C045  F036         	movff	i2ADD_NODE@loc,i2ADD_NODE@pre
  6373  0015A8  C046  F037         	movff	i2ADD_NODE@loc+1,i2ADD_NODE@pre+1
  6374  0015AC                     
  6375                           ;linked_list.c: 35:                 loc = array[loc].next;
  6376  0015AC  C045  F001         	movff	i2ADD_NODE@loc,i2___wmul@multiplier
  6377  0015B0  C046  F002         	movff	i2ADD_NODE@loc+1,i2___wmul@multiplier+1
  6378  0015B4  0E00               	movlw	0
  6379  0015B6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6380  0015B8  0E0D               	movlw	13
  6381  0015BA  6E03               	movwf	i2___wmul@multiplicand^0,c
  6382  0015BC  EC09  F01A         	call	i2___wmul	;wreg free
  6383  0015C0  0EE0               	movlw	low _array
  6384  0015C2  2401               	addwf	?i2___wmul^0,w,c
  6385  0015C4  6ED9               	movwf	fsr2l,c
  6386  0015C6  0E0C               	movlw	high _array
  6387  0015C8  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6388  0015CA  6EDA               	movwf	fsr2h,c
  6389  0015CC  CFDE F045          	movff	postinc2,i2ADD_NODE@loc
  6390  0015D0  CFDD F046          	movff	postdec2,i2ADD_NODE@loc+1
  6391  0015D4                     
  6392                           ;linked_list.c: 36:                 loop ++;
  6393  0015D4  4A32               	infsnz	i2ADD_NODE@loop^0,f,c
  6394  0015D6  2A33               	incf	(i2ADD_NODE@loop+1)^0,f,c
  6395  0015D8                     
  6396                           ;linked_list.c: 37:                 temp.delay = temp.delay - array[pre].delay;
  6397  0015D8  C036  F001         	movff	i2ADD_NODE@pre,i2___wmul@multiplier
  6398  0015DC  C037  F002         	movff	i2ADD_NODE@pre+1,i2___wmul@multiplier+1
  6399  0015E0  0E00               	movlw	0
  6400  0015E2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6401  0015E4  0E0D               	movlw	13
  6402  0015E6  6E03               	movwf	i2___wmul@multiplicand^0,c
  6403  0015E8  EC09  F01A         	call	i2___wmul	;wreg free
  6404  0015EC  0EE2               	movlw	low (_array+2)
  6405  0015EE  2401               	addwf	?i2___wmul^0,w,c
  6406  0015F0  6ED9               	movwf	fsr2l,c
  6407  0015F2  0E0C               	movlw	high (_array+2)
  6408  0015F4  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6409  0015F6  6EDA               	movwf	fsr2h,c
  6410  0015F8  CFDE F026          	movff	postinc2,??i2_ADD_NODE
  6411  0015FC  CFDE F027          	movff	postinc2,??i2_ADD_NODE+1
  6412  001600  CFDE F028          	movff	postinc2,??i2_ADD_NODE+2
  6413  001604  CFDE F029          	movff	postinc2,??i2_ADD_NODE+3
  6414  001608  5026               	movf	??i2_ADD_NODE^0,w,c
  6415  00160A  5C3A               	subwf	(i2ADD_NODE@temp+2)^0,w,c
  6416  00160C  6E3A               	movwf	(i2ADD_NODE@temp+2)^0,c
  6417  00160E  5027               	movf	(??i2_ADD_NODE+1)^0,w,c
  6418  001610  583B               	subwfb	(i2ADD_NODE@temp+3)^0,w,c
  6419  001612  6E3B               	movwf	(i2ADD_NODE@temp+3)^0,c
  6420  001614  5028               	movf	(??i2_ADD_NODE+2)^0,w,c
  6421  001616  583C               	subwfb	(i2ADD_NODE@temp+4)^0,w,c
  6422  001618  6E3C               	movwf	(i2ADD_NODE@temp+4)^0,c
  6423  00161A  5029               	movf	(??i2_ADD_NODE+3)^0,w,c
  6424  00161C  583D               	subwfb	(i2ADD_NODE@temp+5)^0,w,c
  6425  00161E  6E3D               	movwf	(i2ADD_NODE@temp+5)^0,c
  6426  001620                     i2l2753:
  6427                           
  6428                           ;linked_list.c: 32:             while (loop<no_funcs && temp.delay >= array[loc].delay)
  6429  001620  0100               	movlb	0	; () banked
  6430  001622  51E8               	movf	_no_funcs& (0+255),w,b
  6431  001624  5C32               	subwf	i2ADD_NODE@loop^0,w,c
  6432  001626  5033               	movf	(i2ADD_NODE@loop+1)^0,w,c
  6433  001628  0A80               	xorlw	128
  6434  00162A  6E26               	movwf	??i2_ADD_NODE^0,c
  6435  00162C  51E9               	movf	(_no_funcs+1)& (0+255),w,b
  6436  00162E  0A80               	xorlw	128
  6437  001630  5826               	subwfb	??i2_ADD_NODE^0,w,c
  6438  001632  B0D8               	btfsc	status,0,c
  6439  001634  EF1E  F00B         	goto	i2u179_41
  6440  001638  EF20  F00B         	goto	i2u179_40
  6441  00163C                     i2u179_41:
  6442  00163C  EF43  F00B         	goto	i2l2757
  6443  001640                     i2u179_40:
  6444  001640                     
  6445                           ; BSR set to: 0
  6446  001640  C045  F001         	movff	i2ADD_NODE@loc,i2___wmul@multiplier
  6447  001644  C046  F002         	movff	i2ADD_NODE@loc+1,i2___wmul@multiplier+1
  6448  001648  0E00               	movlw	0
  6449  00164A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6450  00164C  0E0D               	movlw	13
  6451  00164E  6E03               	movwf	i2___wmul@multiplicand^0,c
  6452  001650  EC09  F01A         	call	i2___wmul	;wreg free
  6453  001654  0EE2               	movlw	low (_array+2)
  6454  001656  2401               	addwf	?i2___wmul^0,w,c
  6455  001658  6ED9               	movwf	fsr2l,c
  6456  00165A  0E0C               	movlw	high (_array+2)
  6457  00165C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6458  00165E  6EDA               	movwf	fsr2h,c
  6459  001660  50DE               	movf	postinc2,w,c
  6460  001662  5C3A               	subwf	(i2ADD_NODE@temp+2)^0,w,c
  6461  001664  50DE               	movf	postinc2,w,c
  6462  001666  583B               	subwfb	(i2ADD_NODE@temp+3)^0,w,c
  6463  001668  50DE               	movf	postinc2,w,c
  6464  00166A  583C               	subwfb	(i2ADD_NODE@temp+4)^0,w,c
  6465  00166C  503D               	movf	(i2ADD_NODE@temp+5)^0,w,c
  6466  00166E  0A80               	xorlw	128
  6467  001670  6E2A               	movwf	(??i2_ADD_NODE+4)^0,c
  6468  001672  50DE               	movf	postinc2,w,c
  6469  001674  0A80               	xorlw	128
  6470  001676  582A               	subwfb	(??i2_ADD_NODE+4)^0,w,c
  6471  001678  B0D8               	btfsc	status,0,c
  6472  00167A  EF41  F00B         	goto	i2u180_41
  6473  00167E  EF43  F00B         	goto	i2u180_40
  6474  001682                     i2u180_41:
  6475  001682  EFD2  F00A         	goto	i2l307
  6476  001686                     i2u180_40:
  6477  001686                     i2l2757:
  6478                           
  6479                           ;linked_list.c: 39:             if (loc == head)
  6480  001686  0100               	movlb	0	; () banked
  6481  001688  51F1               	movf	_head& (0+255),w,b
  6482  00168A  1845               	xorwf	i2ADD_NODE@loc^0,w,c
  6483  00168C  E107               	bnz	i2u181_41
  6484  00168E  51F2               	movf	(_head+1)& (0+255),w,b
  6485  001690  1846               	xorwf	(i2ADD_NODE@loc+1)^0,w,c
  6486  001692  A4D8               	btfss	status,2,c
  6487  001694  EF4E  F00B         	goto	i2u181_41
  6488  001698  EF50  F00B         	goto	i2u181_40
  6489  00169C                     i2u181_41:
  6490  00169C  EFE1  F00B         	goto	i2l2769
  6491  0016A0                     i2u181_40:
  6492  0016A0                     
  6493                           ; BSR set to: 0
  6494                           ;linked_list.c: 40:             {;linked_list.c: 41:                 add(temp , index);
  6495  0016A0  EE20  F038         	lfsr	2,i2ADD_NODE@temp
  6496  0016A4  EE00  F007         	lfsr	0,i2add@temp
  6497  0016A8  0E0C               	movlw	12
  6498  0016AA                     i2u182_41:
  6499  0016AA  CFDB FFEB          	movff	plusw2,plusw0
  6500  0016AE  06E8               	decf	wreg,f,c
  6501  0016B0  E2FC               	bc	i2u182_41
  6502  0016B2  C047  F014         	movff	i2ADD_NODE@index,i2add@index
  6503  0016B6  C048  F015         	movff	i2ADD_NODE@index+1,i2add@index+1
  6504  0016BA  ECEF  F013         	call	i2_add	;wreg free
  6505  0016BE                     
  6506                           ;linked_list.c: 42:                 array[index].next = head;
  6507  0016BE  C047  F001         	movff	i2ADD_NODE@index,i2___wmul@multiplier
  6508  0016C2  C048  F002         	movff	i2ADD_NODE@index+1,i2___wmul@multiplier+1
  6509  0016C6  0E00               	movlw	0
  6510  0016C8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6511  0016CA  0E0D               	movlw	13
  6512  0016CC  6E03               	movwf	i2___wmul@multiplicand^0,c
  6513  0016CE  EC09  F01A         	call	i2___wmul	;wreg free
  6514  0016D2  0EE0               	movlw	low _array
  6515  0016D4  2401               	addwf	?i2___wmul^0,w,c
  6516  0016D6  6ED9               	movwf	fsr2l,c
  6517  0016D8  0E0C               	movlw	high _array
  6518  0016DA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6519  0016DC  6EDA               	movwf	fsr2h,c
  6520  0016DE  C0F1  FFDE         	movff	_head,postinc2
  6521  0016E2  C0F2  FFDD         	movff	_head+1,postdec2
  6522  0016E6                     
  6523                           ;linked_list.c: 43:                 head = index;
  6524  0016E6  C047  F0F1         	movff	i2ADD_NODE@index,_head
  6525  0016EA  C048  F0F2         	movff	i2ADD_NODE@index+1,_head+1
  6526  0016EE                     
  6527                           ;linked_list.c: 44:                 int next = array[index].next;
  6528  0016EE  C047  F001         	movff	i2ADD_NODE@index,i2___wmul@multiplier
  6529  0016F2  C048  F002         	movff	i2ADD_NODE@index+1,i2___wmul@multiplier+1
  6530  0016F6  0E00               	movlw	0
  6531  0016F8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6532  0016FA  0E0D               	movlw	13
  6533  0016FC  6E03               	movwf	i2___wmul@multiplicand^0,c
  6534  0016FE  EC09  F01A         	call	i2___wmul	;wreg free
  6535  001702  0EE0               	movlw	low _array
  6536  001704  2401               	addwf	?i2___wmul^0,w,c
  6537  001706  6ED9               	movwf	fsr2l,c
  6538  001708  0E0C               	movlw	high _array
  6539  00170A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6540  00170C  6EDA               	movwf	fsr2h,c
  6541  00170E  CFDE F034          	movff	postinc2,i2ADD_NODE@next
  6542  001712  CFDD F035          	movff	postdec2,i2ADD_NODE@next+1
  6543  001716                     
  6544                           ;linked_list.c: 45:                 array[next].delay = array[next].delay - array[index]
      +                          .delay;
  6545  001716  C047  F001         	movff	i2ADD_NODE@index,i2___wmul@multiplier
  6546  00171A  C048  F002         	movff	i2ADD_NODE@index+1,i2___wmul@multiplier+1
  6547  00171E  0E00               	movlw	0
  6548  001720  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6549  001722  0E0D               	movlw	13
  6550  001724  6E03               	movwf	i2___wmul@multiplicand^0,c
  6551  001726  EC09  F01A         	call	i2___wmul	;wreg free
  6552  00172A  0EE2               	movlw	low (_array+2)
  6553  00172C  2401               	addwf	?i2___wmul^0,w,c
  6554  00172E  6ED9               	movwf	fsr2l,c
  6555  001730  0E0C               	movlw	high (_array+2)
  6556  001732  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6557  001734  6EDA               	movwf	fsr2h,c
  6558  001736  CFDE F026          	movff	postinc2,??i2_ADD_NODE
  6559  00173A  CFDE F027          	movff	postinc2,??i2_ADD_NODE+1
  6560  00173E  CFDE F028          	movff	postinc2,??i2_ADD_NODE+2
  6561  001742  CFDE F029          	movff	postinc2,??i2_ADD_NODE+3
  6562  001746  C034  F001         	movff	i2ADD_NODE@next,i2___wmul@multiplier
  6563  00174A  C035  F002         	movff	i2ADD_NODE@next+1,i2___wmul@multiplier+1
  6564  00174E  0E00               	movlw	0
  6565  001750  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6566  001752  0E0D               	movlw	13
  6567  001754  6E03               	movwf	i2___wmul@multiplicand^0,c
  6568  001756  EC09  F01A         	call	i2___wmul	;wreg free
  6569  00175A  0EE2               	movlw	low (_array+2)
  6570  00175C  2401               	addwf	?i2___wmul^0,w,c
  6571  00175E  6ED9               	movwf	fsr2l,c
  6572  001760  0E0C               	movlw	high (_array+2)
  6573  001762  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6574  001764  6EDA               	movwf	fsr2h,c
  6575  001766  CFDE F02A          	movff	postinc2,??i2_ADD_NODE+4
  6576  00176A  CFDE F02B          	movff	postinc2,??i2_ADD_NODE+5
  6577  00176E  CFDE F02C          	movff	postinc2,??i2_ADD_NODE+6
  6578  001772  CFDE F02D          	movff	postinc2,??i2_ADD_NODE+7
  6579  001776  5026               	movf	??i2_ADD_NODE^0,w,c
  6580  001778  5C2A               	subwf	(??i2_ADD_NODE+4)^0,w,c
  6581  00177A  6E2E               	movwf	(??i2_ADD_NODE+8)^0,c
  6582  00177C  5027               	movf	(??i2_ADD_NODE+1)^0,w,c
  6583  00177E  582B               	subwfb	(??i2_ADD_NODE+5)^0,w,c
  6584  001780  6E2F               	movwf	(??i2_ADD_NODE+9)^0,c
  6585  001782  5028               	movf	(??i2_ADD_NODE+2)^0,w,c
  6586  001784  582C               	subwfb	(??i2_ADD_NODE+6)^0,w,c
  6587  001786  6E30               	movwf	(??i2_ADD_NODE+10)^0,c
  6588  001788  5029               	movf	(??i2_ADD_NODE+3)^0,w,c
  6589  00178A  582D               	subwfb	(??i2_ADD_NODE+7)^0,w,c
  6590  00178C  6E31               	movwf	(??i2_ADD_NODE+11)^0,c
  6591  00178E  C034  F001         	movff	i2ADD_NODE@next,i2___wmul@multiplier
  6592  001792  C035  F002         	movff	i2ADD_NODE@next+1,i2___wmul@multiplier+1
  6593  001796  0E00               	movlw	0
  6594  001798  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6595  00179A  0E0D               	movlw	13
  6596  00179C  6E03               	movwf	i2___wmul@multiplicand^0,c
  6597  00179E  EC09  F01A         	call	i2___wmul	;wreg free
  6598  0017A2  0EE2               	movlw	low (_array+2)
  6599  0017A4  2401               	addwf	?i2___wmul^0,w,c
  6600  0017A6  6ED9               	movwf	fsr2l,c
  6601  0017A8  0E0C               	movlw	high (_array+2)
  6602  0017AA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6603  0017AC  6EDA               	movwf	fsr2h,c
  6604  0017AE  C02E  FFDE         	movff	??i2_ADD_NODE+8,postinc2
  6605  0017B2  C02F  FFDE         	movff	??i2_ADD_NODE+9,postinc2
  6606  0017B6  C030  FFDE         	movff	??i2_ADD_NODE+10,postinc2
  6607  0017BA  C031  FFDE         	movff	??i2_ADD_NODE+11,postinc2
  6608                           
  6609                           ;linked_list.c: 46:             }
  6610  0017BE  EFA5  F00C         	goto	i2l304
  6611  0017C2                     i2l2769:
  6612                           
  6613                           ; BSR set to: 0
  6614  0017C2  2845               	incf	i2ADD_NODE@loc^0,w,c
  6615  0017C4  E108               	bnz	i2u183_40
  6616  0017C6  2846               	incf	(i2ADD_NODE@loc+1)^0,w,c
  6617  0017C8  B4D8               	btfsc	status,2,c
  6618  0017CA  EFE9  F00B         	goto	i2u183_41
  6619  0017CE  EFEB  F00B         	goto	i2u183_40
  6620  0017D2                     i2u183_41:
  6621  0017D2  EF78  F00C         	goto	i2l2779
  6622  0017D6                     i2u183_40:
  6623  0017D6                     
  6624                           ; BSR set to: 0
  6625                           ;linked_list.c: 48:                 add(temp , index);
  6626  0017D6  EE20  F038         	lfsr	2,i2ADD_NODE@temp
  6627  0017DA  EE00  F007         	lfsr	0,i2add@temp
  6628  0017DE  0E0C               	movlw	12
  6629  0017E0                     i2u184_41:
  6630  0017E0  CFDB FFEB          	movff	plusw2,plusw0
  6631  0017E4  06E8               	decf	wreg,f,c
  6632  0017E6  E2FC               	bc	i2u184_41
  6633  0017E8  C047  F014         	movff	i2ADD_NODE@index,i2add@index
  6634  0017EC  C048  F015         	movff	i2ADD_NODE@index+1,i2add@index+1
  6635  0017F0  ECEF  F013         	call	i2_add	;wreg free
  6636  0017F4                     
  6637                           ;linked_list.c: 49:                 array[pre].next = index;
  6638  0017F4  C036  F001         	movff	i2ADD_NODE@pre,i2___wmul@multiplier
  6639  0017F8  C037  F002         	movff	i2ADD_NODE@pre+1,i2___wmul@multiplier+1
  6640  0017FC  0E00               	movlw	0
  6641  0017FE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6642  001800  0E0D               	movlw	13
  6643  001802  6E03               	movwf	i2___wmul@multiplicand^0,c
  6644  001804  EC09  F01A         	call	i2___wmul	;wreg free
  6645  001808  0EE0               	movlw	low _array
  6646  00180A  2401               	addwf	?i2___wmul^0,w,c
  6647  00180C  6ED9               	movwf	fsr2l,c
  6648  00180E  0E0C               	movlw	high _array
  6649  001810  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6650  001812  6EDA               	movwf	fsr2h,c
  6651  001814  C047  FFDE         	movff	i2ADD_NODE@index,postinc2
  6652  001818  C048  FFDD         	movff	i2ADD_NODE@index+1,postdec2
  6653  00181C                     
  6654                           ;linked_list.c: 50:                 array[index].next = loc;
  6655  00181C  C047  F001         	movff	i2ADD_NODE@index,i2___wmul@multiplier
  6656  001820  C048  F002         	movff	i2ADD_NODE@index+1,i2___wmul@multiplier+1
  6657  001824  0E00               	movlw	0
  6658  001826  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6659  001828  0E0D               	movlw	13
  6660  00182A  6E03               	movwf	i2___wmul@multiplicand^0,c
  6661  00182C  EC09  F01A         	call	i2___wmul	;wreg free
  6662  001830  0EE0               	movlw	low _array
  6663  001832  2401               	addwf	?i2___wmul^0,w,c
  6664  001834  6ED9               	movwf	fsr2l,c
  6665  001836  0E0C               	movlw	high _array
  6666  001838  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6667  00183A  6EDA               	movwf	fsr2h,c
  6668  00183C  C045  FFDE         	movff	i2ADD_NODE@loc,postinc2
  6669  001840  C046  FFDD         	movff	i2ADD_NODE@loc+1,postdec2
  6670  001844                     
  6671                           ;linked_list.c: 51:                 array[loc].delay = array[loc].delay - array[index].d
      +                          elay;
  6672  001844  C047  F001         	movff	i2ADD_NODE@index,i2___wmul@multiplier
  6673  001848  C048  F002         	movff	i2ADD_NODE@index+1,i2___wmul@multiplier+1
  6674  00184C  0E00               	movlw	0
  6675  00184E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6676  001850  0E0D               	movlw	13
  6677  001852  6E03               	movwf	i2___wmul@multiplicand^0,c
  6678  001854  EC09  F01A         	call	i2___wmul	;wreg free
  6679  001858  0EE2               	movlw	low (_array+2)
  6680  00185A  2401               	addwf	?i2___wmul^0,w,c
  6681  00185C  6ED9               	movwf	fsr2l,c
  6682  00185E  0E0C               	movlw	high (_array+2)
  6683  001860  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6684  001862  6EDA               	movwf	fsr2h,c
  6685  001864  CFDE F026          	movff	postinc2,??i2_ADD_NODE
  6686  001868  CFDE F027          	movff	postinc2,??i2_ADD_NODE+1
  6687  00186C  CFDE F028          	movff	postinc2,??i2_ADD_NODE+2
  6688  001870  CFDE F029          	movff	postinc2,??i2_ADD_NODE+3
  6689  001874  C045  F001         	movff	i2ADD_NODE@loc,i2___wmul@multiplier
  6690  001878  C046  F002         	movff	i2ADD_NODE@loc+1,i2___wmul@multiplier+1
  6691  00187C  0E00               	movlw	0
  6692  00187E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6693  001880  0E0D               	movlw	13
  6694  001882  6E03               	movwf	i2___wmul@multiplicand^0,c
  6695  001884  EC09  F01A         	call	i2___wmul	;wreg free
  6696  001888  0EE2               	movlw	low (_array+2)
  6697  00188A  2401               	addwf	?i2___wmul^0,w,c
  6698  00188C  6ED9               	movwf	fsr2l,c
  6699  00188E  0E0C               	movlw	high (_array+2)
  6700  001890  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6701  001892  6EDA               	movwf	fsr2h,c
  6702  001894  CFDE F02A          	movff	postinc2,??i2_ADD_NODE+4
  6703  001898  CFDE F02B          	movff	postinc2,??i2_ADD_NODE+5
  6704  00189C  CFDE F02C          	movff	postinc2,??i2_ADD_NODE+6
  6705  0018A0  CFDE F02D          	movff	postinc2,??i2_ADD_NODE+7
  6706  0018A4  5026               	movf	??i2_ADD_NODE^0,w,c
  6707  0018A6  5C2A               	subwf	(??i2_ADD_NODE+4)^0,w,c
  6708  0018A8  6E2E               	movwf	(??i2_ADD_NODE+8)^0,c
  6709  0018AA  5027               	movf	(??i2_ADD_NODE+1)^0,w,c
  6710  0018AC  582B               	subwfb	(??i2_ADD_NODE+5)^0,w,c
  6711  0018AE  6E2F               	movwf	(??i2_ADD_NODE+9)^0,c
  6712  0018B0  5028               	movf	(??i2_ADD_NODE+2)^0,w,c
  6713  0018B2  582C               	subwfb	(??i2_ADD_NODE+6)^0,w,c
  6714  0018B4  6E30               	movwf	(??i2_ADD_NODE+10)^0,c
  6715  0018B6  5029               	movf	(??i2_ADD_NODE+3)^0,w,c
  6716  0018B8  582D               	subwfb	(??i2_ADD_NODE+7)^0,w,c
  6717  0018BA  6E31               	movwf	(??i2_ADD_NODE+11)^0,c
  6718  0018BC  C045  F001         	movff	i2ADD_NODE@loc,i2___wmul@multiplier
  6719  0018C0  C046  F002         	movff	i2ADD_NODE@loc+1,i2___wmul@multiplier+1
  6720  0018C4  0E00               	movlw	0
  6721  0018C6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6722  0018C8  0E0D               	movlw	13
  6723  0018CA  6E03               	movwf	i2___wmul@multiplicand^0,c
  6724  0018CC  EC09  F01A         	call	i2___wmul	;wreg free
  6725  0018D0  0EE2               	movlw	low (_array+2)
  6726  0018D2  2401               	addwf	?i2___wmul^0,w,c
  6727  0018D4  6ED9               	movwf	fsr2l,c
  6728  0018D6  0E0C               	movlw	high (_array+2)
  6729  0018D8  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6730  0018DA  6EDA               	movwf	fsr2h,c
  6731  0018DC  C02E  FFDE         	movff	??i2_ADD_NODE+8,postinc2
  6732  0018E0  C02F  FFDE         	movff	??i2_ADD_NODE+9,postinc2
  6733  0018E4  C030  FFDE         	movff	??i2_ADD_NODE+10,postinc2
  6734  0018E8  C031  FFDE         	movff	??i2_ADD_NODE+11,postinc2
  6735                           
  6736                           ;linked_list.c: 53:             }
  6737  0018EC  EFA5  F00C         	goto	i2l304
  6738  0018F0                     i2l2779:
  6739                           
  6740                           ; BSR set to: 0
  6741  0018F0  2845               	incf	i2ADD_NODE@loc^0,w,c
  6742  0018F2  E106               	bnz	i2u185_41
  6743  0018F4  2846               	incf	(i2ADD_NODE@loc+1)^0,w,c
  6744  0018F6  A4D8               	btfss	status,2,c
  6745  0018F8  EF80  F00C         	goto	i2u185_41
  6746  0018FC  EF82  F00C         	goto	i2u185_40
  6747  001900                     i2u185_41:
  6748  001900  EFC2  F00A         	goto	i2l2741
  6749  001904                     i2u185_40:
  6750  001904                     
  6751                           ; BSR set to: 0
  6752                           ;linked_list.c: 55:             {;linked_list.c: 56:                 add(temp , index);
  6753  001904  EE20  F038         	lfsr	2,i2ADD_NODE@temp
  6754  001908  EE00  F007         	lfsr	0,i2add@temp
  6755  00190C  0E0C               	movlw	12
  6756  00190E                     i2u186_41:
  6757  00190E  CFDB FFEB          	movff	plusw2,plusw0
  6758  001912  06E8               	decf	wreg,f,c
  6759  001914  E2FC               	bc	i2u186_41
  6760  001916  C047  F014         	movff	i2ADD_NODE@index,i2add@index
  6761  00191A  C048  F015         	movff	i2ADD_NODE@index+1,i2add@index+1
  6762  00191E  ECEF  F013         	call	i2_add	;wreg free
  6763  001922                     
  6764                           ;linked_list.c: 57:                 array[pre].next = index;
  6765  001922  C036  F001         	movff	i2ADD_NODE@pre,i2___wmul@multiplier
  6766  001926  C037  F002         	movff	i2ADD_NODE@pre+1,i2___wmul@multiplier+1
  6767  00192A  0E00               	movlw	0
  6768  00192C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6769  00192E  0E0D               	movlw	13
  6770  001930  6E03               	movwf	i2___wmul@multiplicand^0,c
  6771  001932  EC09  F01A         	call	i2___wmul	;wreg free
  6772  001936  0EE0               	movlw	low _array
  6773  001938  2401               	addwf	?i2___wmul^0,w,c
  6774  00193A  6ED9               	movwf	fsr2l,c
  6775  00193C  0E0C               	movlw	high _array
  6776  00193E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6777  001940  6EDA               	movwf	fsr2h,c
  6778  001942  C047  FFDE         	movff	i2ADD_NODE@index,postinc2
  6779  001946  C048  FFDD         	movff	i2ADD_NODE@index+1,postdec2
  6780  00194A                     i2l304:
  6781  00194A  0012               	return		;funcret
  6782  00194C                     __end_ofi2_ADD_NODE:
  6783                           	opt callstack 0
  6784                           
  6785 ;; *************** function i2_return_index *****************
  6786 ;; Defined at:
  6787 ;;		line 115 in file "linked_list.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;		None
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;  return_index    2    4[COMRAM] int 
  6792 ;; Return value:  Size  Location     Type
  6793 ;;                  2    0[COMRAM] int 
  6794 ;; Registers used:
  6795 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6796 ;; Tracked objects:
  6797 ;;		On entry : 0/0
  6798 ;;		On exit  : 0/0
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6801 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6802 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6803 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6804 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6805 ;;Total ram usage:        6 bytes
  6806 ;; Hardware stack levels used:    1
  6807 ;; This function calls:
  6808 ;;		Nothing
  6809 ;; This function is called by:
  6810 ;;		i2_ADD_NODE
  6811 ;; This function uses a non-reentrant model
  6812 ;;
  6813                           
  6814                           	psect	text38
  6815  002D78                     __ptext38:
  6816                           	opt callstack 0
  6817  002D78                     i2_return_index:
  6818                           	opt callstack 20
  6819  002D78                     
  6820                           ;linked_list.c: 117:     for (int i = 0 ; i<20 ; i++)
  6821  002D78  0E00               	movlw	0
  6822  002D7A  6E06               	movwf	(i2return_index@i+1)^0,c
  6823  002D7C  0E00               	movlw	0
  6824  002D7E  6E05               	movwf	i2return_index@i^0,c
  6825  002D80                     i2l2471:
  6826                           
  6827                           ;linked_list.c: 118:         if (check_index[i] ==0)
  6828  002D80  90D8               	bcf	status,0,c
  6829  002D82  3405               	rlcf	i2return_index@i^0,w,c
  6830  002D84  6ED9               	movwf	fsr2l,c
  6831  002D86  3406               	rlcf	(i2return_index@i+1)^0,w,c
  6832  002D88  6EDA               	movwf	fsr2h,c
  6833  002D8A  0E00               	movlw	low _check_index
  6834  002D8C  26D9               	addwf	fsr2l,f,c
  6835  002D8E  0E01               	movlw	high _check_index
  6836  002D90  22DA               	addwfc	fsr2h,f,c
  6837  002D92  50DE               	movf	postinc2,w,c
  6838  002D94  10DE               	iorwf	postinc2,w,c
  6839  002D96  A4D8               	btfss	status,2,c
  6840  002D98  EFD0  F016         	goto	i2u135_41
  6841  002D9C  EFD2  F016         	goto	i2u135_40
  6842  002DA0                     i2u135_41:
  6843  002DA0  EFE8  F016         	goto	i2l2481
  6844  002DA4                     i2u135_40:
  6845  002DA4                     
  6846                           ;linked_list.c: 119:         {;linked_list.c: 120:             check_index[i]=1;
  6847  002DA4  90D8               	bcf	status,0,c
  6848  002DA6  3405               	rlcf	i2return_index@i^0,w,c
  6849  002DA8  6ED9               	movwf	fsr2l,c
  6850  002DAA  3406               	rlcf	(i2return_index@i+1)^0,w,c
  6851  002DAC  6EDA               	movwf	fsr2h,c
  6852  002DAE  0E00               	movlw	low _check_index
  6853  002DB0  26D9               	addwf	fsr2l,f,c
  6854  002DB2  0E01               	movlw	high _check_index
  6855  002DB4  22DA               	addwfc	fsr2h,f,c
  6856  002DB6  0E01               	movlw	1
  6857  002DB8  6EDE               	movwf	postinc2,c
  6858  002DBA  0E00               	movlw	0
  6859  002DBC  6EDD               	movwf	postdec2,c
  6860  002DBE                     
  6861                           ;linked_list.c: 121:             no_funcs++;
  6862  002DBE  0100               	movlb	0	; () banked
  6863  002DC0  4BE8               	infsnz	_no_funcs& (0+255),f,b
  6864  002DC2  2BE9               	incf	(_no_funcs+1)& (0+255),f,b
  6865  002DC4                     
  6866                           ; BSR set to: 0
  6867                           ;linked_list.c: 122:             return i;
  6868  002DC4  C005  F001         	movff	i2return_index@i,?i2_return_index
  6869  002DC8  C006  F002         	movff	i2return_index@i+1,?i2_return_index+1
  6870  002DCC  EFFA  F016         	goto	i2l340
  6871  002DD0                     i2l2481:
  6872  002DD0  4A05               	infsnz	i2return_index@i^0,f,c
  6873  002DD2  2A06               	incf	(i2return_index@i+1)^0,f,c
  6874  002DD4  BE06               	btfsc	(i2return_index@i+1)^0,7,c
  6875  002DD6  EFF6  F016         	goto	i2u136_41
  6876  002DDA  5006               	movf	(i2return_index@i+1)^0,w,c
  6877  002DDC  E109               	bnz	i2u136_40
  6878  002DDE  0E14               	movlw	20
  6879  002DE0  5C05               	subwf	i2return_index@i^0,w,c
  6880  002DE2  A0D8               	btfss	status,0,c
  6881  002DE4  EFF6  F016         	goto	i2u136_41
  6882  002DE8  EFF8  F016         	goto	i2u136_40
  6883  002DEC                     i2u136_41:
  6884  002DEC  EFC0  F016         	goto	i2l2471
  6885  002DF0                     i2u136_40:
  6886  002DF0                     
  6887                           ;linked_list.c: 124:     return -1;
  6888  002DF0  6801               	setf	?i2_return_index^0,c
  6889  002DF2  6802               	setf	(?i2_return_index+1)^0,c
  6890  002DF4                     i2l340:
  6891  002DF4  0012               	return		;funcret
  6892  002DF6                     __end_ofi2_return_index:
  6893                           	opt callstack 0
  6894                           
  6895 ;; *************** function i2_create_node *****************
  6896 ;; Defined at:
  6897 ;;		line 137 in file "linked_list.c"
  6898 ;; Parameters:    Size  Location     Type
  6899 ;;  delay           4    0[COMRAM] long 
  6900 ;;  period          4    4[COMRAM] long 
  6901 ;;  function        3    8[COMRAM] PTR FTN()void 
  6902 ;;		 -> get_temp_humid(1), check_button(1), heater_heatpumper(1), NULL(0), 
  6903 ;; Auto vars:     Size  Location     Type
  6904 ;;  create_node    13   13[COMRAM] struct Node
  6905 ;; Return value:  Size  Location     Type
  6906 ;;                  13    0[COMRAM] struct Node
  6907 ;; Registers used:
  6908 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  6909 ;; Tracked objects:
  6910 ;;		On entry : 0/0
  6911 ;;		On exit  : 0/0
  6912 ;;		Unchanged: 0/0
  6913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6914 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6915 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6917 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6918 ;;Total ram usage:       26 bytes
  6919 ;; Hardware stack levels used:    1
  6920 ;; This function calls:
  6921 ;;		Nothing
  6922 ;; This function is called by:
  6923 ;;		i2_ADD_NODE
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           	psect	text39
  6928  003286                     __ptext39:
  6929                           	opt callstack 0
  6930  003286                     i2_create_node:
  6931                           	opt callstack 20
  6932  003286                     
  6933                           ;linked_list.c: 138:     struct Node temp;;linked_list.c: 139:     temp.next = -1;
  6934  003286  680E               	setf	i2create_node@temp^0,c
  6935  003288  680F               	setf	(i2create_node@temp+1)^0,c
  6936                           
  6937                           ;linked_list.c: 140:     temp.delay = delay;
  6938  00328A  C001  F010         	movff	i2create_node@delay,i2create_node@temp+2
  6939  00328E  C002  F011         	movff	i2create_node@delay+1,i2create_node@temp+3
  6940  003292  C003  F012         	movff	i2create_node@delay+2,i2create_node@temp+4
  6941  003296  C004  F013         	movff	i2create_node@delay+3,i2create_node@temp+5
  6942                           
  6943                           ;linked_list.c: 141:     temp.period = period;
  6944  00329A  C005  F014         	movff	i2create_node@period,i2create_node@temp+6
  6945  00329E  C006  F015         	movff	i2create_node@period+1,i2create_node@temp+7
  6946  0032A2  C007  F016         	movff	i2create_node@period+2,i2create_node@temp+8
  6947  0032A6  C008  F017         	movff	i2create_node@period+3,i2create_node@temp+9
  6948  0032AA                     
  6949                           ;linked_list.c: 142:     temp.function = function;
  6950  0032AA  C009  F018         	movff	i2create_node@function,i2create_node@temp+10
  6951  0032AE  C00A  F019         	movff	i2create_node@function+1,i2create_node@temp+11
  6952  0032B2  C00B  F01A         	movff	i2create_node@function+2,i2create_node@temp+12
  6953  0032B6                     
  6954                           ;linked_list.c: 143:     return temp;
  6955  0032B6  EE20  F00E         	lfsr	2,i2create_node@temp
  6956  0032BA  EE00  F001         	lfsr	0,?i2_create_node
  6957  0032BE  0E0C               	movlw	12
  6958  0032C0                     i2u137_41:
  6959  0032C0  CFDB FFEB          	movff	plusw2,plusw0
  6960  0032C4  06E8               	decf	wreg,f,c
  6961  0032C6  E2FC               	bc	i2u137_41
  6962  0032C8  0012               	return		;funcret
  6963  0032CA                     __end_ofi2_create_node:
  6964                           	opt callstack 0
  6965                           
  6966 ;; *************** function i2_add *****************
  6967 ;; Defined at:
  6968 ;;		line 107 in file "linked_list.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;  temp           13    6[COMRAM] struct Node
  6971 ;;  index           2   19[COMRAM] int 
  6972 ;; Auto vars:     Size  Location     Type
  6973 ;;		None
  6974 ;; Return value:  Size  Location     Type
  6975 ;;                  1    wreg      void 
  6976 ;; Registers used:
  6977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6978 ;; Tracked objects:
  6979 ;;		On entry : 0/0
  6980 ;;		On exit  : 0/0
  6981 ;;		Unchanged: 0/0
  6982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6983 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6986 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6987 ;;Total ram usage:       15 bytes
  6988 ;; Hardware stack levels used:    1
  6989 ;; Hardware stack levels required when called:    1
  6990 ;; This function calls:
  6991 ;;		i2___wmul
  6992 ;; This function is called by:
  6993 ;;		i2_ADD_NODE
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           	psect	text40
  6998  0027DE                     __ptext40:
  6999                           	opt callstack 0
  7000  0027DE                     i2_add:
  7001                           	opt callstack 19
  7002  0027DE                     
  7003                           ;linked_list.c: 107: void add(struct Node temp , int index);linked_list.c: 108: {;linked
      +                          _list.c: 109:     array[index].next = temp.next;
  7004  0027DE  C014  F001         	movff	i2add@index,i2___wmul@multiplier
  7005  0027E2  C015  F002         	movff	i2add@index+1,i2___wmul@multiplier+1
  7006  0027E6  0E00               	movlw	0
  7007  0027E8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  7008  0027EA  0E0D               	movlw	13
  7009  0027EC  6E03               	movwf	i2___wmul@multiplicand^0,c
  7010  0027EE  EC09  F01A         	call	i2___wmul	;wreg free
  7011  0027F2  0EE0               	movlw	low _array
  7012  0027F4  2401               	addwf	?i2___wmul^0,w,c
  7013  0027F6  6ED9               	movwf	fsr2l,c
  7014  0027F8  0E0C               	movlw	high _array
  7015  0027FA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  7016  0027FC  6EDA               	movwf	fsr2h,c
  7017  0027FE  C007  FFDE         	movff	i2add@temp,postinc2
  7018  002802  C008  FFDD         	movff	i2add@temp+1,postdec2
  7019  002806                     
  7020                           ;linked_list.c: 110:  array[index].delay = temp.delay;
  7021  002806  EE20  F009         	lfsr	2,i2add@temp+2
  7022  00280A  C014  F001         	movff	i2add@index,i2___wmul@multiplier
  7023  00280E  C015  F002         	movff	i2add@index+1,i2___wmul@multiplier+1
  7024  002812  0E00               	movlw	0
  7025  002814  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  7026  002816  0E0D               	movlw	13
  7027  002818  6E03               	movwf	i2___wmul@multiplicand^0,c
  7028  00281A  EC09  F01A         	call	i2___wmul	;wreg free
  7029  00281E  0EE2               	movlw	low (_array+2)
  7030  002820  2401               	addwf	?i2___wmul^0,w,c
  7031  002822  6EE1               	movwf	fsr1l,c
  7032  002824  0E0C               	movlw	high (_array+2)
  7033  002826  2002               	addwfc	(?i2___wmul+1)^0,w,c
  7034  002828  6EE2               	movwf	fsr1h,c
  7035  00282A  CFDE FFE6          	movff	postinc2,postinc1
  7036  00282E  CFDE FFE6          	movff	postinc2,postinc1
  7037  002832  CFDE FFE6          	movff	postinc2,postinc1
  7038  002836  CFDE FFE6          	movff	postinc2,postinc1
  7039  00283A                     
  7040                           ;linked_list.c: 111:  array[index].period = temp.period;
  7041  00283A  EE20  F00D         	lfsr	2,i2add@temp+6
  7042  00283E  C014  F001         	movff	i2add@index,i2___wmul@multiplier
  7043  002842  C015  F002         	movff	i2add@index+1,i2___wmul@multiplier+1
  7044  002846  0E00               	movlw	0
  7045  002848  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  7046  00284A  0E0D               	movlw	13
  7047  00284C  6E03               	movwf	i2___wmul@multiplicand^0,c
  7048  00284E  EC09  F01A         	call	i2___wmul	;wreg free
  7049  002852  0EE6               	movlw	low (_array+6)
  7050  002854  2401               	addwf	?i2___wmul^0,w,c
  7051  002856  6EE1               	movwf	fsr1l,c
  7052  002858  0E0C               	movlw	high (_array+6)
  7053  00285A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  7054  00285C  6EE2               	movwf	fsr1h,c
  7055  00285E  CFDE FFE6          	movff	postinc2,postinc1
  7056  002862  CFDE FFE6          	movff	postinc2,postinc1
  7057  002866  CFDE FFE6          	movff	postinc2,postinc1
  7058  00286A  CFDE FFE6          	movff	postinc2,postinc1
  7059  00286E                     
  7060                           ;linked_list.c: 112:  array[index].function = temp.function;
  7061  00286E  EE20  F011         	lfsr	2,i2add@temp+10
  7062  002872  C014  F001         	movff	i2add@index,i2___wmul@multiplier
  7063  002876  C015  F002         	movff	i2add@index+1,i2___wmul@multiplier+1
  7064  00287A  0E00               	movlw	0
  7065  00287C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  7066  00287E  0E0D               	movlw	13
  7067  002880  6E03               	movwf	i2___wmul@multiplicand^0,c
  7068  002882  EC09  F01A         	call	i2___wmul	;wreg free
  7069  002886  0EEA               	movlw	low (_array+10)
  7070  002888  2401               	addwf	?i2___wmul^0,w,c
  7071  00288A  6EE1               	movwf	fsr1l,c
  7072  00288C  0E0C               	movlw	high (_array+10)
  7073  00288E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  7074  002890  6EE2               	movwf	fsr1h,c
  7075  002892  CFDE FFE6          	movff	postinc2,postinc1
  7076  002896  CFDE FFE6          	movff	postinc2,postinc1
  7077  00289A  CFDE FFE6          	movff	postinc2,postinc1
  7078  00289E  0012               	return		;funcret
  7079  0028A0                     __end_ofi2_add:
  7080                           	opt callstack 0
  7081                           
  7082 ;; *************** function _enqueue *****************
  7083 ;; Defined at:
  7084 ;;		line 169 in file "linked_list.c"
  7085 ;; Parameters:    Size  Location     Type
  7086 ;;  function        3    6[COMRAM] PTR FTN()void 
  7087 ;;		 -> get_temp_humid(1), check_button(1), heater_heatpumper(1), NULL(0), 
  7088 ;; Auto vars:     Size  Location     Type
  7089 ;;		None
  7090 ;; Return value:  Size  Location     Type
  7091 ;;                  1    wreg      void 
  7092 ;; Registers used:
  7093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7094 ;; Tracked objects:
  7095 ;;		On entry : 0/0
  7096 ;;		On exit  : 0/0
  7097 ;;		Unchanged: 0/0
  7098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7099 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7102 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7103 ;;Total ram usage:        3 bytes
  7104 ;; Hardware stack levels used:    1
  7105 ;; Hardware stack levels required when called:    1
  7106 ;; This function calls:
  7107 ;;		i2___awmod
  7108 ;;		i2___wmul
  7109 ;; This function is called by:
  7110 ;;		_UPDATE_TIMER
  7111 ;; This function uses a non-reentrant model
  7112 ;;
  7113                           
  7114                           	psect	text41
  7115  002AB4                     __ptext41:
  7116                           	opt callstack 0
  7117  002AB4                     _enqueue:
  7118                           	opt callstack 20
  7119  002AB4                     
  7120                           ;linked_list.c: 169: void enqueue(FUNCTION_PTR function);linked_list.c: 170: {;linked_li
      +                          st.c: 171:     if (front ==-1)
  7121  002AB4  0100               	movlb	0	; () banked
  7122  002AB6  29D4               	incf	_front& (0+255),w,b
  7123  002AB8  E106               	bnz	i2u150_41
  7124  002ABA  29D5               	incf	(_front+1)& (0+255),w,b
  7125  002ABC  A4D8               	btfss	status,2,c
  7126  002ABE  EF63  F015         	goto	i2u150_41
  7127  002AC2  EF65  F015         	goto	i2u150_40
  7128  002AC6                     i2u150_41:
  7129  002AC6  EF87  F015         	goto	i2l2597
  7130  002ACA                     i2u150_40:
  7131  002ACA                     
  7132                           ; BSR set to: 0
  7133                           ;linked_list.c: 172:     {;linked_list.c: 173:         front =0;
  7134  002ACA  0E00               	movlw	0
  7135  002ACC  6FD5               	movwf	(_front+1)& (0+255),b
  7136  002ACE  0E00               	movlw	0
  7137  002AD0  6FD4               	movwf	_front& (0+255),b
  7138                           
  7139                           ;linked_list.c: 174:         rear = 0;
  7140  002AD2  0E00               	movlw	0
  7141  002AD4  6FD3               	movwf	(_rear+1)& (0+255),b
  7142  002AD6  0E00               	movlw	0
  7143  002AD8  6FD2               	movwf	_rear& (0+255),b
  7144  002ADA                     
  7145                           ; BSR set to: 0
  7146                           ;linked_list.c: 175:         no_q ++;
  7147  002ADA  4BD0               	infsnz	_no_q& (0+255),f,b
  7148  002ADC  2BD1               	incf	(_no_q+1)& (0+255),f,b
  7149  002ADE                     
  7150                           ; BSR set to: 0
  7151                           ;linked_list.c: 176:         queue[front] = function;
  7152  002ADE  C0D4  F001         	movff	_front,i2___wmul@multiplier
  7153  002AE2  C0D5  F002         	movff	_front+1,i2___wmul@multiplier+1
  7154  002AE6  0E00               	movlw	0
  7155  002AE8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  7156  002AEA  0E03               	movlw	3
  7157  002AEC  6E03               	movwf	i2___wmul@multiplicand^0,c
  7158  002AEE  EC09  F01A         	call	i2___wmul	;wreg free
  7159  002AF2  0E28               	movlw	low _queue
  7160  002AF4  2401               	addwf	?i2___wmul^0,w,c
  7161  002AF6  6ED9               	movwf	fsr2l,c
  7162  002AF8  0E01               	movlw	high _queue
  7163  002AFA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  7164  002AFC  6EDA               	movwf	fsr2h,c
  7165  002AFE  C007  FFDE         	movff	enqueue@function,postinc2
  7166  002B02  C008  FFDE         	movff	enqueue@function+1,postinc2
  7167  002B06  C009  FFDE         	movff	enqueue@function+2,postinc2
  7168                           
  7169                           ;linked_list.c: 177:     }
  7170  002B0A  EFB0  F015         	goto	i2l361
  7171  002B0E                     i2l2597:
  7172                           
  7173                           ; BSR set to: 0
  7174                           ;linked_list.c: 179:     {;linked_list.c: 180:         rear = (rear +1)%1000;
  7175  002B0E  0E01               	movlw	1
  7176  002B10  25D2               	addwf	_rear& (0+255),w,b
  7177  002B12  6E01               	movwf	i2___awmod@dividend^0,c
  7178  002B14  0E00               	movlw	0
  7179  002B16  21D3               	addwfc	(_rear+1)& (0+255),w,b
  7180  002B18  6E02               	movwf	(i2___awmod@dividend+1)^0,c
  7181  002B1A  0E03               	movlw	3
  7182  002B1C  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  7183  002B1E  0EE8               	movlw	232
  7184  002B20  6E03               	movwf	i2___awmod@divisor^0,c
  7185  002B22  EC02  F015         	call	i2___awmod	;wreg free
  7186  002B26  C001  F0D2         	movff	?i2___awmod,_rear
  7187  002B2A  C002  F0D3         	movff	?i2___awmod+1,_rear+1
  7188  002B2E                     
  7189                           ;linked_list.c: 181:         no_q ++;
  7190  002B2E  0100               	movlb	0	; () banked
  7191  002B30  4BD0               	infsnz	_no_q& (0+255),f,b
  7192  002B32  2BD1               	incf	(_no_q+1)& (0+255),f,b
  7193  002B34                     
  7194                           ; BSR set to: 0
  7195                           ;linked_list.c: 182:         queue[rear] = function;
  7196  002B34  C0D2  F001         	movff	_rear,i2___wmul@multiplier
  7197  002B38  C0D3  F002         	movff	_rear+1,i2___wmul@multiplier+1
  7198  002B3C  0E00               	movlw	0
  7199  002B3E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  7200  002B40  0E03               	movlw	3
  7201  002B42  6E03               	movwf	i2___wmul@multiplicand^0,c
  7202  002B44  EC09  F01A         	call	i2___wmul	;wreg free
  7203  002B48  0E28               	movlw	low _queue
  7204  002B4A  2401               	addwf	?i2___wmul^0,w,c
  7205  002B4C  6ED9               	movwf	fsr2l,c
  7206  002B4E  0E01               	movlw	high _queue
  7207  002B50  2002               	addwfc	(?i2___wmul+1)^0,w,c
  7208  002B52  6EDA               	movwf	fsr2h,c
  7209  002B54  C007  FFDE         	movff	enqueue@function,postinc2
  7210  002B58  C008  FFDE         	movff	enqueue@function+1,postinc2
  7211  002B5C  C009  FFDE         	movff	enqueue@function+2,postinc2
  7212  002B60                     i2l361:
  7213  002B60  0012               	return		;funcret
  7214  002B62                     __end_of_enqueue:
  7215                           	opt callstack 0
  7216                           
  7217 ;; *************** function i2___awmod *****************
  7218 ;; Defined at:
  7219 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;  dividend        2    0[COMRAM] int 
  7222 ;;  divisor         2    2[COMRAM] int 
  7223 ;; Auto vars:     Size  Location     Type
  7224 ;;  __awmod         1    5[COMRAM] unsigned char 
  7225 ;;  __awmod         1    4[COMRAM] unsigned char 
  7226 ;; Return value:  Size  Location     Type
  7227 ;;                  2    0[COMRAM] int 
  7228 ;; Registers used:
  7229 ;;		wreg, status,2, status,0
  7230 ;; Tracked objects:
  7231 ;;		On entry : 0/0
  7232 ;;		On exit  : 0/0
  7233 ;;		Unchanged: 0/0
  7234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7235 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7236 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7238 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7239 ;;Total ram usage:        6 bytes
  7240 ;; Hardware stack levels used:    1
  7241 ;; This function calls:
  7242 ;;		Nothing
  7243 ;; This function is called by:
  7244 ;;		_enqueue
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           	psect	text42
  7249  002A04                     __ptext42:
  7250                           	opt callstack 0
  7251  002A04                     i2___awmod:
  7252                           	opt callstack 20
  7253  002A04  0E00               	movlw	0
  7254  002A06  6E06               	movwf	i2___awmod@sign^0,c
  7255  002A08  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
  7256  002A0A  EF0B  F015         	goto	i2u138_40
  7257  002A0E  EF09  F015         	goto	i2u138_41
  7258  002A12                     i2u138_41:
  7259  002A12  EF11  F015         	goto	i2l2501
  7260  002A16                     i2u138_40:
  7261  002A16  6C01               	negf	i2___awmod@dividend^0,c
  7262  002A18  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  7263  002A1A  B0D8               	btfsc	status,0,c
  7264  002A1C  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  7265  002A1E  0E01               	movlw	1
  7266  002A20  6E06               	movwf	i2___awmod@sign^0,c
  7267  002A22                     i2l2501:
  7268  002A22  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
  7269  002A24  EF18  F015         	goto	i2u139_40
  7270  002A28  EF16  F015         	goto	i2u139_41
  7271  002A2C                     i2u139_41:
  7272  002A2C  EF1C  F015         	goto	i2l2505
  7273  002A30                     i2u139_40:
  7274  002A30  6C03               	negf	i2___awmod@divisor^0,c
  7275  002A32  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  7276  002A34  B0D8               	btfsc	status,0,c
  7277  002A36  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  7278  002A38                     i2l2505:
  7279  002A38  5003               	movf	i2___awmod@divisor^0,w,c
  7280  002A3A  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  7281  002A3C  B4D8               	btfsc	status,2,c
  7282  002A3E  EF23  F015         	goto	i2u140_41
  7283  002A42  EF25  F015         	goto	i2u140_40
  7284  002A46                     i2u140_41:
  7285  002A46  EF49  F015         	goto	i2l2521
  7286  002A4A                     i2u140_40:
  7287  002A4A  0E01               	movlw	1
  7288  002A4C  6E05               	movwf	i2___awmod@counter^0,c
  7289  002A4E  EF2D  F015         	goto	i2l2511
  7290  002A52                     i2l2509:
  7291  002A52  90D8               	bcf	status,0,c
  7292  002A54  3603               	rlcf	i2___awmod@divisor^0,f,c
  7293  002A56  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  7294  002A58  2A05               	incf	i2___awmod@counter^0,f,c
  7295  002A5A                     i2l2511:
  7296  002A5A  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  7297  002A5C  EF32  F015         	goto	i2u141_41
  7298  002A60  EF34  F015         	goto	i2u141_40
  7299  002A64                     i2u141_41:
  7300  002A64  EF29  F015         	goto	i2l2509
  7301  002A68                     i2u141_40:
  7302  002A68                     i2l2513:
  7303  002A68  5003               	movf	i2___awmod@divisor^0,w,c
  7304  002A6A  5C01               	subwf	i2___awmod@dividend^0,w,c
  7305  002A6C  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  7306  002A6E  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  7307  002A70  A0D8               	btfss	status,0,c
  7308  002A72  EF3D  F015         	goto	i2u142_41
  7309  002A76  EF3F  F015         	goto	i2u142_40
  7310  002A7A                     i2u142_41:
  7311  002A7A  EF43  F015         	goto	i2l2517
  7312  002A7E                     i2u142_40:
  7313  002A7E  5003               	movf	i2___awmod@divisor^0,w,c
  7314  002A80  5E01               	subwf	i2___awmod@dividend^0,f,c
  7315  002A82  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  7316  002A84  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  7317  002A86                     i2l2517:
  7318  002A86  90D8               	bcf	status,0,c
  7319  002A88  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  7320  002A8A  3203               	rrcf	i2___awmod@divisor^0,f,c
  7321  002A8C  2E05               	decfsz	i2___awmod@counter^0,f,c
  7322  002A8E  EF34  F015         	goto	i2l2513
  7323  002A92                     i2l2521:
  7324  002A92  5006               	movf	i2___awmod@sign^0,w,c
  7325  002A94  B4D8               	btfsc	status,2,c
  7326  002A96  EF4F  F015         	goto	i2u143_41
  7327  002A9A  EF51  F015         	goto	i2u143_40
  7328  002A9E                     i2u143_41:
  7329  002A9E  EF55  F015         	goto	i2l2525
  7330  002AA2                     i2u143_40:
  7331  002AA2  6C01               	negf	i2___awmod@dividend^0,c
  7332  002AA4  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  7333  002AA6  B0D8               	btfsc	status,0,c
  7334  002AA8  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  7335  002AAA                     i2l2525:
  7336  002AAA  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  7337  002AAE  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  7338  002AB2  0012               	return		;funcret
  7339  002AB4                     __end_ofi2___awmod:
  7340                           	opt callstack 0
  7341                           
  7342 ;; *************** function _clean_node *****************
  7343 ;; Defined at:
  7344 ;;		line 127 in file "linked_list.c"
  7345 ;; Parameters:    Size  Location     Type
  7346 ;;  index           2    6[COMRAM] int 
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;		None
  7349 ;; Return value:  Size  Location     Type
  7350 ;;                  1    wreg      void 
  7351 ;; Registers used:
  7352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7353 ;; Tracked objects:
  7354 ;;		On entry : 0/0
  7355 ;;		On exit  : 0/0
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7361 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7362 ;;Total ram usage:        2 bytes
  7363 ;; Hardware stack levels used:    1
  7364 ;; Hardware stack levels required when called:    1
  7365 ;; This function calls:
  7366 ;;		i2___wmul
  7367 ;; This function is called by:
  7368 ;;		_UPDATE_TIMER
  7369 ;;		_REMOVE_NODE
  7370 ;; This function uses a non-reentrant model
  7371 ;;
  7372                           
  7373                           	psect	text43
  7374  002650                     __ptext43:
  7375                           	opt callstack 0
  7376  002650                     _clean_node:
  7377                           	opt callstack 20
  7378  002650                     
  7379                           ;linked_list.c: 127: void clean_node(int index);linked_list.c: 128: {;linked_list.c: 129
      +                          :     array[index].next=-1;
  7380  002650  C007  F001         	movff	clean_node@index,i2___wmul@multiplier
  7381  002654  C008  F002         	movff	clean_node@index+1,i2___wmul@multiplier+1
  7382  002658  0E00               	movlw	0
  7383  00265A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  7384  00265C  0E0D               	movlw	13
  7385  00265E  6E03               	movwf	i2___wmul@multiplicand^0,c
  7386  002660  EC09  F01A         	call	i2___wmul	;wreg free
  7387  002664  0EE0               	movlw	low _array
  7388  002666  2401               	addwf	?i2___wmul^0,w,c
  7389  002668  6ED9               	movwf	fsr2l,c
  7390  00266A  0E0C               	movlw	high _array
  7391  00266C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  7392  00266E  6EDA               	movwf	fsr2h,c
  7393  002670  0EFF               	movlw	255
  7394  002672  6EDE               	movwf	postinc2,c
  7395  002674  0EFF               	movlw	255
  7396  002676  6EDD               	movwf	postdec2,c
  7397                           
  7398                           ;linked_list.c: 130:     array[index].delay = 0;
  7399  002678  C007  F001         	movff	clean_node@index,i2___wmul@multiplier
  7400  00267C  C008  F002         	movff	clean_node@index+1,i2___wmul@multiplier+1
  7401  002680  0E00               	movlw	0
  7402  002682  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  7403  002684  0E0D               	movlw	13
  7404  002686  6E03               	movwf	i2___wmul@multiplicand^0,c
  7405  002688  EC09  F01A         	call	i2___wmul	;wreg free
  7406  00268C  0EE2               	movlw	low (_array+2)
  7407  00268E  2401               	addwf	?i2___wmul^0,w,c
  7408  002690  6ED9               	movwf	fsr2l,c
  7409  002692  0E0C               	movlw	high (_array+2)
  7410  002694  2002               	addwfc	(?i2___wmul+1)^0,w,c
  7411  002696  6EDA               	movwf	fsr2h,c
  7412  002698  6ADE               	clrf	postinc2,c
  7413  00269A  6ADE               	clrf	postinc2,c
  7414  00269C  6ADE               	clrf	postinc2,c
  7415  00269E  6ADD               	clrf	postdec2,c
  7416                           
  7417                           ;linked_list.c: 131:     array[index].period = 0;
  7418  0026A0  C007  F001         	movff	clean_node@index,i2___wmul@multiplier
  7419  0026A4  C008  F002         	movff	clean_node@index+1,i2___wmul@multiplier+1
  7420  0026A8  0E00               	movlw	0
  7421  0026AA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  7422  0026AC  0E0D               	movlw	13
  7423  0026AE  6E03               	movwf	i2___wmul@multiplicand^0,c
  7424  0026B0  EC09  F01A         	call	i2___wmul	;wreg free
  7425  0026B4  0EE6               	movlw	low (_array+6)
  7426  0026B6  2401               	addwf	?i2___wmul^0,w,c
  7427  0026B8  6ED9               	movwf	fsr2l,c
  7428  0026BA  0E0C               	movlw	high (_array+6)
  7429  0026BC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  7430  0026BE  6EDA               	movwf	fsr2h,c
  7431  0026C0  6ADE               	clrf	postinc2,c
  7432  0026C2  6ADE               	clrf	postinc2,c
  7433  0026C4  6ADE               	clrf	postinc2,c
  7434  0026C6  6ADD               	clrf	postdec2,c
  7435                           
  7436                           ;linked_list.c: 132:     array[index].function = ((void*)0);
  7437  0026C8  C007  F001         	movff	clean_node@index,i2___wmul@multiplier
  7438  0026CC  C008  F002         	movff	clean_node@index+1,i2___wmul@multiplier+1
  7439  0026D0  0E00               	movlw	0
  7440  0026D2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  7441  0026D4  0E0D               	movlw	13
  7442  0026D6  6E03               	movwf	i2___wmul@multiplicand^0,c
  7443  0026D8  EC09  F01A         	call	i2___wmul	;wreg free
  7444  0026DC  0EEA               	movlw	low (_array+10)
  7445  0026DE  2401               	addwf	?i2___wmul^0,w,c
  7446  0026E0  6ED9               	movwf	fsr2l,c
  7447  0026E2  0E0C               	movlw	high (_array+10)
  7448  0026E4  2002               	addwfc	(?i2___wmul+1)^0,w,c
  7449  0026E6  6EDA               	movwf	fsr2h,c
  7450  0026E8  0E00               	movlw	0
  7451  0026EA  6EDE               	movwf	postinc2,c
  7452  0026EC  0E00               	movlw	0
  7453  0026EE  6EDE               	movwf	postinc2,c
  7454  0026F0  0E00               	movlw	0
  7455  0026F2  6EDE               	movwf	postinc2,c
  7456  0026F4                     
  7457                           ;linked_list.c: 133:     check_index[index] = 0;
  7458  0026F4  90D8               	bcf	status,0,c
  7459  0026F6  3407               	rlcf	clean_node@index^0,w,c
  7460  0026F8  6ED9               	movwf	fsr2l,c
  7461  0026FA  3408               	rlcf	(clean_node@index+1)^0,w,c
  7462  0026FC  6EDA               	movwf	fsr2h,c
  7463  0026FE  0E00               	movlw	low _check_index
  7464  002700  26D9               	addwf	fsr2l,f,c
  7465  002702  0E01               	movlw	high _check_index
  7466  002704  22DA               	addwfc	fsr2h,f,c
  7467  002706  0E00               	movlw	0
  7468  002708  6EDE               	movwf	postinc2,c
  7469  00270A  0E00               	movlw	0
  7470  00270C  6EDD               	movwf	postdec2,c
  7471  00270E                     
  7472                           ;linked_list.c: 134:     no_funcs --;
  7473  00270E  0100               	movlb	0	; () banked
  7474  002710  07E8               	decf	_no_funcs& (0+255),f,b
  7475  002712  A0D8               	btfss	status,0,c
  7476  002714  07E9               	decf	(_no_funcs+1)& (0+255),f,b
  7477  002716                     
  7478                           ; BSR set to: 0
  7479  002716  0012               	return		;funcret
  7480  002718                     __end_of_clean_node:
  7481                           	opt callstack 0
  7482                           
  7483 ;; *************** function i2___wmul *****************
  7484 ;; Defined at:
  7485 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  7486 ;; Parameters:    Size  Location     Type
  7487 ;;  multiplier      2    0[COMRAM] unsigned int 
  7488 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7489 ;; Auto vars:     Size  Location     Type
  7490 ;;  __wmul          2    4[COMRAM] unsigned int 
  7491 ;; Return value:  Size  Location     Type
  7492 ;;                  2    0[COMRAM] unsigned int 
  7493 ;; Registers used:
  7494 ;;		wreg, status,2, status,0, prodl, prodh
  7495 ;; Tracked objects:
  7496 ;;		On entry : 0/0
  7497 ;;		On exit  : 0/0
  7498 ;;		Unchanged: 0/0
  7499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7500 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7501 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7503 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7504 ;;Total ram usage:        6 bytes
  7505 ;; Hardware stack levels used:    1
  7506 ;; This function calls:
  7507 ;;		Nothing
  7508 ;; This function is called by:
  7509 ;;		_UPDATE_TIMER
  7510 ;;		_clean_node
  7511 ;;		_enqueue
  7512 ;;		i2_ADD_NODE
  7513 ;;		i2_add
  7514 ;; This function uses a non-reentrant model
  7515 ;;
  7516                           
  7517                           	psect	text44
  7518  003412                     __ptext44:
  7519                           	opt callstack 0
  7520  003412                     i2___wmul:
  7521                           	opt callstack 21
  7522  003412  5001               	movf	i2___wmul@multiplier^0,w,c
  7523  003414  0203               	mulwf	i2___wmul@multiplicand^0,c
  7524  003416  CFF3 F005          	movff	prodl,i2___wmul@product
  7525  00341A  CFF4 F006          	movff	prodh,i2___wmul@product+1
  7526  00341E  5001               	movf	i2___wmul@multiplier^0,w,c
  7527  003420  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  7528  003422  50F3               	movf	243,w,c
  7529  003424  2606               	addwf	(i2___wmul@product+1)^0,f,c
  7530  003426  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  7531  003428  0203               	mulwf	i2___wmul@multiplicand^0,c
  7532  00342A  50F3               	movf	243,w,c
  7533  00342C  2606               	addwf	(i2___wmul@product+1)^0,f,c
  7534  00342E  C005  F001         	movff	i2___wmul@product,?i2___wmul
  7535  003432  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  7536  003436  0012               	return		;funcret
  7537  003438                     __end_ofi2___wmul:
  7538                           	opt callstack 0
  7539                           
  7540 ;; *************** function _read_button_increase *****************
  7541 ;; Defined at:
  7542 ;;		line 26 in file "interrupt.c"
  7543 ;; Parameters:    Size  Location     Type
  7544 ;;		None
  7545 ;; Auto vars:     Size  Location     Type
  7546 ;;		None
  7547 ;; Return value:  Size  Location     Type
  7548 ;;                  1    wreg      void 
  7549 ;; Registers used:
  7550 ;;		wreg, status,2, status,0
  7551 ;; Tracked objects:
  7552 ;;		On entry : 0/0
  7553 ;;		On exit  : 0/0
  7554 ;;		Unchanged: 0/0
  7555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7558 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7559 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7560 ;;Total ram usage:        1 bytes
  7561 ;; Hardware stack levels used:    1
  7562 ;; This function calls:
  7563 ;;		Nothing
  7564 ;; This function is called by:
  7565 ;;		_INTERRUPT_InterruptManager
  7566 ;; This function uses a non-reentrant model
  7567 ;;
  7568                           
  7569                           	psect	text45
  7570  003086                     __ptext45:
  7571                           	opt callstack 0
  7572  003086                     _read_button_increase:
  7573                           	opt callstack 23
  7574  003086                     
  7575                           ;interrupt.c: 28:     inc_but_1 = inc_but_2;
  7576  003086  C0C8  F0CA         	movff	_inc_but_2,_inc_but_1
  7577  00308A  C0C9  F0CB         	movff	_inc_but_2+1,_inc_but_1+1
  7578  00308E                     
  7579                           ;interrupt.c: 29:     inc_but_2 = PORTBbits.RB0;
  7580  00308E  B081               	btfsc	129,0,c	;volatile
  7581  003090  EF4C  F018         	goto	i2u223_41
  7582  003094  EF50  F018         	goto	i2u223_40
  7583  003098                     i2u223_41:
  7584  003098  6A01               	clrf	??_read_button_increase^0,c
  7585  00309A  2A01               	incf	??_read_button_increase^0,f,c
  7586  00309C  EF51  F018         	goto	i2u223_48
  7587  0030A0                     i2u223_40:
  7588  0030A0  6A01               	clrf	??_read_button_increase^0,c
  7589  0030A2                     i2u223_48:
  7590  0030A2  5001               	movf	??_read_button_increase^0,w,c
  7591  0030A4  0100               	movlb	0	; () banked
  7592  0030A6  6FC8               	movwf	_inc_but_2& (0+255),b
  7593  0030A8  6BC9               	clrf	(_inc_but_2+1)& (0+255),b
  7594  0030AA                     
  7595                           ; BSR set to: 0
  7596                           ;interrupt.c: 30:     if (first_state == second_state && PORTBbits.RB0 == 0) inc_but = 1
      +                          ;
  7597  0030AA  51CC               	movf	_second_state& (0+255),w,b
  7598  0030AC  19CE               	xorwf	_first_state& (0+255),w,b
  7599  0030AE  E107               	bnz	i2u224_41
  7600  0030B0  51CD               	movf	(_second_state+1)& (0+255),w,b
  7601  0030B2  19CF               	xorwf	(_first_state+1)& (0+255),w,b
  7602  0030B4  A4D8               	btfss	status,2,c
  7603  0030B6  EF5F  F018         	goto	i2u224_41
  7604  0030BA  EF61  F018         	goto	i2u224_40
  7605  0030BE                     i2u224_41:
  7606  0030BE  EF6E  F018         	goto	i2l3053
  7607  0030C2                     i2u224_40:
  7608  0030C2                     
  7609                           ; BSR set to: 0
  7610  0030C2  B081               	btfsc	129,0,c	;volatile
  7611  0030C4  EF66  F018         	goto	i2u225_41
  7612  0030C8  EF68  F018         	goto	i2u225_40
  7613  0030CC                     i2u225_41:
  7614  0030CC  EF6E  F018         	goto	i2l3053
  7615  0030D0                     i2u225_40:
  7616  0030D0                     
  7617                           ; BSR set to: 0
  7618  0030D0  0E00               	movlw	0
  7619  0030D2  6FD7               	movwf	(_inc_but+1)& (0+255),b
  7620  0030D4  0E01               	movlw	1
  7621  0030D6  6FD6               	movwf	_inc_but& (0+255),b
  7622  0030D8  EF72  F018         	goto	i2l236
  7623  0030DC                     i2l3053:
  7624                           
  7625                           ; BSR set to: 0
  7626  0030DC  0E00               	movlw	0
  7627  0030DE  6FD7               	movwf	(_inc_but+1)& (0+255),b
  7628  0030E0  0E00               	movlw	0
  7629  0030E2  6FD6               	movwf	_inc_but& (0+255),b
  7630  0030E4                     i2l236:
  7631                           
  7632                           ; BSR set to: 0
  7633  0030E4  0012               	return		;funcret
  7634  0030E6                     __end_of_read_button_increase:
  7635                           	opt callstack 0
  7636                           
  7637 ;; *************** function _read_button *****************
  7638 ;; Defined at:
  7639 ;;		line 19 in file "interrupt.c"
  7640 ;; Parameters:    Size  Location     Type
  7641 ;;		None
  7642 ;; Auto vars:     Size  Location     Type
  7643 ;;		None
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  1    wreg      void 
  7646 ;; Registers used:
  7647 ;;		wreg, status,2, status,0
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7655 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7656 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7657 ;;Total ram usage:        1 bytes
  7658 ;; Hardware stack levels used:    1
  7659 ;; This function calls:
  7660 ;;		Nothing
  7661 ;; This function is called by:
  7662 ;;		_INTERRUPT_InterruptManager
  7663 ;; This function uses a non-reentrant model
  7664 ;;
  7665                           
  7666                           	psect	text46
  7667  0030E6                     __ptext46:
  7668                           	opt callstack 0
  7669  0030E6                     _read_button:
  7670                           	opt callstack 23
  7671  0030E6                     
  7672                           ;interrupt.c: 21:     first_state = second_state;
  7673  0030E6  C0CC  F0CE         	movff	_second_state,_first_state
  7674  0030EA  C0CD  F0CF         	movff	_second_state+1,_first_state+1
  7675  0030EE                     
  7676                           ;interrupt.c: 22:     second_state = PORTAbits.RA5;
  7677  0030EE  BA80               	btfsc	128,5,c	;volatile
  7678  0030F0  EF7C  F018         	goto	i2u220_41
  7679  0030F4  EF80  F018         	goto	i2u220_40
  7680  0030F8                     i2u220_41:
  7681  0030F8  6A01               	clrf	??_read_button^0,c
  7682  0030FA  2A01               	incf	??_read_button^0,f,c
  7683  0030FC  EF81  F018         	goto	i2u220_48
  7684  003100                     i2u220_40:
  7685  003100  6A01               	clrf	??_read_button^0,c
  7686  003102                     i2u220_48:
  7687  003102  5001               	movf	??_read_button^0,w,c
  7688  003104  0100               	movlb	0	; () banked
  7689  003106  6FCC               	movwf	_second_state& (0+255),b
  7690  003108  6BCD               	clrf	(_second_state+1)& (0+255),b
  7691  00310A                     
  7692                           ; BSR set to: 0
  7693                           ;interrupt.c: 23:     if (first_state == second_state && PORTAbits.RA5 == 0) state_but =
      +                           1;
  7694  00310A  51CC               	movf	_second_state& (0+255),w,b
  7695  00310C  19CE               	xorwf	_first_state& (0+255),w,b
  7696  00310E  E107               	bnz	i2u221_41
  7697  003110  51CD               	movf	(_second_state+1)& (0+255),w,b
  7698  003112  19CF               	xorwf	(_first_state+1)& (0+255),w,b
  7699  003114  A4D8               	btfss	status,2,c
  7700  003116  EF8F  F018         	goto	i2u221_41
  7701  00311A  EF91  F018         	goto	i2u221_40
  7702  00311E                     i2u221_41:
  7703  00311E  EF9E  F018         	goto	i2l3041
  7704  003122                     i2u221_40:
  7705  003122                     
  7706                           ; BSR set to: 0
  7707  003122  BA80               	btfsc	128,5,c	;volatile
  7708  003124  EF96  F018         	goto	i2u222_41
  7709  003128  EF98  F018         	goto	i2u222_40
  7710  00312C                     i2u222_41:
  7711  00312C  EF9E  F018         	goto	i2l3041
  7712  003130                     i2u222_40:
  7713  003130                     
  7714                           ; BSR set to: 0
  7715  003130  0E00               	movlw	0
  7716  003132  6FD9               	movwf	(_state_but+1)& (0+255),b
  7717  003134  0E01               	movlw	1
  7718  003136  6FD8               	movwf	_state_but& (0+255),b
  7719  003138  EFA2  F018         	goto	i2l231
  7720  00313C                     i2l3041:
  7721                           
  7722                           ; BSR set to: 0
  7723  00313C  0E00               	movlw	0
  7724  00313E  6FD9               	movwf	(_state_but+1)& (0+255),b
  7725  003140  0E00               	movlw	0
  7726  003142  6FD8               	movwf	_state_but& (0+255),b
  7727  003144                     i2l231:
  7728                           
  7729                           ; BSR set to: 0
  7730  003144  0012               	return		;funcret
  7731  003146                     __end_of_read_button:
  7732                           	opt callstack 0
  7733                           
  7734 ;; *************** function _TMR0_IRS *****************
  7735 ;; Defined at:
  7736 ;;		line 11 in file "timer0.c"
  7737 ;; Parameters:    Size  Location     Type
  7738 ;;		None
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;		None
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  1    wreg      void 
  7743 ;; Registers used:
  7744 ;;		wreg, status,2
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7754 ;;Total ram usage:        0 bytes
  7755 ;; Hardware stack levels used:    1
  7756 ;; This function calls:
  7757 ;;		Nothing
  7758 ;; This function is called by:
  7759 ;;		_INTERRUPT_InterruptManager
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           
  7763                           	psect	text47
  7764  0034A8                     __ptext47:
  7765                           	opt callstack 0
  7766  0034A8                     _TMR0_IRS:
  7767                           	opt callstack 23
  7768  0034A8                     
  7769                           ;timer0.c: 13:     INTCONbits.TMR0IF = 0;
  7770  0034A8  94F2               	bcf	242,2,c	;volatile
  7771  0034AA                     
  7772                           ;timer0.c: 14:     TMR0 = 0xB2;
  7773  0034AA  0E00               	movlw	0
  7774  0034AC  6ED7               	movwf	215,c	;volatile
  7775  0034AE  0EB2               	movlw	178
  7776  0034B0  6ED6               	movwf	214,c	;volatile
  7777  0034B2  0012               	return		;funcret
  7778  0034B4                     __end_of_TMR0_IRS:
  7779                           	opt callstack 0
  7780                           
  7781                           	psect	text48
  7782  000000                     __ptext48:
  7783                           	opt callstack 0
  7784  000000                     
  7785                           	psect	rparam
  7786  0000                     
  7787                           	psect	temp
  7788  00005F                     btemp:
  7789                           	opt callstack 0
  7790  00005F                     	ds	1
  7791  0000                     int$flags	set	btemp
  7792  0000                     wtemp8	set	btemp+1
  7793  0000                     ttemp5	set	btemp+1
  7794  0000                     ttemp6	set	btemp+4
  7795  0000                     ttemp7	set	btemp+8
  7796                           tosu	equ	0xFFF
  7797                           tosh	equ	0xFFE
  7798                           tosl	equ	0xFFD
  7799                           stkptr	equ	0xFFC
  7800                           pclatu	equ	0xFFB
  7801                           pclath	equ	0xFFA
  7802                           pcl	equ	0xFF9
  7803                           tblptru	equ	0xFF8
  7804                           tblptrh	equ	0xFF7
  7805                           tblptrl	equ	0xFF6
  7806                           tablat	equ	0xFF5
  7807                           prodh	equ	0xFF4
  7808                           prodl	equ	0xFF3
  7809                           indf0	equ	0xFEF
  7810                           postinc0	equ	0xFEE
  7811                           postdec0	equ	0xFED
  7812                           preinc0	equ	0xFEC
  7813                           plusw0	equ	0xFEB
  7814                           fsr0h	equ	0xFEA
  7815                           fsr0l	equ	0xFE9
  7816                           wreg	equ	0xFE8
  7817                           indf1	equ	0xFE7
  7818                           postinc1	equ	0xFE6
  7819                           postdec1	equ	0xFE5
  7820                           preinc1	equ	0xFE4
  7821                           plusw1	equ	0xFE3
  7822                           fsr1h	equ	0xFE2
  7823                           fsr1l	equ	0xFE1
  7824                           bsr	equ	0xFE0
  7825                           indf2	equ	0xFDF
  7826                           postinc2	equ	0xFDE
  7827                           postdec2	equ	0xFDD
  7828                           preinc2	equ	0xFDC
  7829                           plusw2	equ	0xFDB
  7830                           fsr2h	equ	0xFDA
  7831                           fsr2l	equ	0xFD9
  7832                           status	equ	0xFD8


Data Sizes:
    Strings     79
    Constant    0
    Data        8
    BSS         3347
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      94
    BANK0           160     96     149
    BANK1           256      0      40
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    UPDATE_TIMER$2273	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    ?i2_create_node.function	PTR FTN()void  size(3) Largest target is 0
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    i2create_node@temp.function	PTR FTN()void  size(3) Largest target is 0
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    i2add@temp.function	PTR FTN()void  size(3) Largest target is 0
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    i2ADD_NODE@temp.function	PTR FTN()void  size(3) Largest target is 0
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    UPDATE_TIMER$2209	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    ?_create_node.function	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    main@function	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    enqueue@function	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    sp__dequeue	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    dequeue@temp	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    queue	PTR FTN()void [1000] size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    create_node@function	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    temp.function	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    temp.function	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    UPDATE_TIMER@function	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    ADD_NODE@function	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    temp.function	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    S370Node$function	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    array.function	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), NULL(NULL[0]), 

    register_timer@function	PTR FTN()void  size(3) Largest target is 1
		 -> get_temp_humid(), check_button(), heater_heatpumper(), 

    printLCD_string@array	PTR unsigned char  size(2) Largest target is 17
		 -> STR_13(CODE[17]), STR_12(CODE[7]), STR_11(CODE[17]), STR_10(CODE[6]), 
		 -> STR_9(CODE[17]), STR_8(CODE[6]), STR_7(CODE[15]), STR_6(CODE[17]), 
		 -> STR_5(CODE[7]), STR_4(CODE[17]), STR_3(CODE[6]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    LCDPutStr@ptr	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_13(CODE[17]), STR_12(CODE[7]), STR_11(CODE[17]), STR_10(CODE[6]), 
		 -> STR_9(CODE[17]), STR_8(CODE[6]), STR_7(CODE[15]), STR_6(CODE[17]), 
		 -> STR_5(CODE[7]), STR_4(CODE[17]), STR_3(CODE[6]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _timer_ISR->_UPDATE_TIMER
    _UPDATE_TIMER->i2_ADD_NODE
    i2_ADD_NODE->i2_create_node
    i2_add->i2___wmul
    _enqueue->i2___awmod
    _enqueue->i2___wmul
    _clean_node->i2___wmul

Critical Paths under _main in BANK0

    _main->_register_timer
    _register_timer->_ADD_NODE
    _ADD_NODE->_create_node
    _add->___wmul
    _heater_heatpumper->_printLCD_string
    _readDHT->_getByte
    _print_temp_humid->_printLCD_char
    _dequeue->_init_queue
    _check_button->_printLCD_string
    _printLCD_string->_LCDPutStr
    _LCDPutStr->_LCDPutChar
    _printLCD_char->___awdiv
    _LCDPutChar->_WritePort_BBSPI
    _SYSTEM_INITIALIZATION->_LCDInit
    _SYSTEM_INITIALIZATION->_init_queue
    _init_queue->___wmul
    _LCDInit->_LCDPutInst
    _Port_BBSPIInit->_SendByteBBSPI
    _LCDPutInst->_WritePort_BBSPI
    _WritePort_BBSPI->_SendByteBBSPI
    _LINKED_LIST_INITIALIZATION->___wmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   84052
                                             93 BANK0      3     3      0
         _LINKED_LIST_INITIALIZATION
              _SYSTEM_INITIALIZATION
                       _check_button *
                            _dequeue
                     _get_temp_humid *
                  _heater_heatpumper *
                     _register_timer
                       _start_timers
 ---------------------------------------------------------------------------------
 (1) _start_timers                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _register_timer                                      13     2     11   16080
                                             80 BANK0     13     2     11
                           _ADD_NODE
 ---------------------------------------------------------------------------------
 (2) _ADD_NODE                                            46    35     11   15301
                                             34 BANK0     46    35     11
                             ___wmul
                                _add
                        _create_node
                       _return_index
 ---------------------------------------------------------------------------------
 (3) _return_index                                         6     4      2     112
                                              8 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _create_node                                         26    13     13     389
                                              8 BANK0     26    13     13
 ---------------------------------------------------------------------------------
 (3) _add                                                 15     0     15    7158
                                             14 BANK0     15     0     15
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _heater_heatpumper                                    0     0      0   15960
                         _LCDPutInst
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                      _printLCD_char
                    _printLCD_string
 ---------------------------------------------------------------------------------
 (1) _get_temp_humid                                       0     0      0    9072
                   _print_temp_humid
                            _readDHT
 ---------------------------------------------------------------------------------
 (2) _readDHT                                              4     4      0     160
                                             12 BANK0      4     4      0
                            _getByte
 ---------------------------------------------------------------------------------
 (3) _getByte                                              4     4      0     114
                                              8 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _print_temp_humid                                     0     0      0    8912
                            ___awdiv
                            ___awmod
                      _printLCD_char
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              8 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _dequeue                                              6     3      3   13859
                                             16 BANK0      6     3      3
                            ___awmod
                             ___wmul
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1004
                                              8 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _check_button                                         0     0      0   14200
                         _LCDPutInst
                            ___lwdiv
                            ___lwmod
                      _printLCD_char
                    _printLCD_string
 ---------------------------------------------------------------------------------
 (2) _printLCD_string                                      4     0      4    4015
                                             17 BANK0      4     0      4
                         _LCDPutInst
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (3) _LCDPutStr                                            2     0      2    1085
                                             15 BANK0      2     0      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _printLCD_char                                        4     0      4    7152
                                             16 BANK0      4     0      4
                         _LCDPutChar
                         _LCDPutInst
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _LCDPutChar                                           2     2      0     888
                                             13 BANK0      2     2      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4    1223
                                              8 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                              8 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_INITIALIZATION                                0     0      0    8353
                            _LCDInit
                _TMR0_INITIALIZATION
                _TMR1_INITIALIZATION
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           2     2      0    6439
                                             14 BANK0      2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _TMR1_INITIALIZATION                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_INITIALIZATION                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0    1914
                                             15 BANK0      1     1      0
                          _InitBBSPI
                         _LCDPutInst
                     _Port_BBSPIInit
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _Port_BBSPIInit                                       1     1      0     160
                                             11 BANK0      1     1      0
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (3) _LCDPutInst                                           2     2      0     888
                                             13 BANK0      2     2      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (5) _WritePort_BBSPI                                      2     1      1     866
                                             11 BANK0      2     1      1
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (6) _SendByteBBSPI                                        3     3      0     138
                                              8 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _InitBBSPI                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LINKED_LIST_INITIALIZATION                           2     2      0    6505
                                             14 BANK0      2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    6371
                                              8 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           8     8      0   11897
                                              0 BANK0      8     8      0
                           _TMR0_IRS
                        _read_button
               _read_button_increase
                          _timer_ISR
 ---------------------------------------------------------------------------------
 (8) _timer_ISR                                            0     0      0   11897
                       _UPDATE_TIMER
 ---------------------------------------------------------------------------------
 (9) _UPDATE_TIMER                                        20    20      0   11897
                                             72 COMRAM    20    20      0
                         _clean_node
                            _enqueue
                         i2_ADD_NODE
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) i2_ADD_NODE                                         46    35     11    5427
                                             26 COMRAM    46    35     11
                           i2___wmul
                              i2_add
                      i2_create_node
                     i2_return_index
 ---------------------------------------------------------------------------------
 (11) i2_return_index                                      6     4      2     112
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (11) i2_create_node                                      26    13     13     239
                                              0 COMRAM    26    13     13
 ---------------------------------------------------------------------------------
 (11) i2_add                                              15     0     15    2262
                                              6 COMRAM    15     0     15
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) _enqueue                                             3     0      3    2343
                                              6 COMRAM     3     0      3
                          i2___awmod
                           i2___wmul
 ---------------------------------------------------------------------------------
 (11) i2___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) _clean_node                                          2     0      2    2137
                                              6 COMRAM     2     0      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) i2___wmul                                            6     2      4    1875
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _read_button_increase                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _read_button                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR0_IRS                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LINKED_LIST_INITIALIZATION
     ___wmul
   _SYSTEM_INITIALIZATION
     _LCDInit
       _InitBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _Port_BBSPIInit
         _SendByteBBSPI
       _WritePort_BBSPI
         _SendByteBBSPI
     _TMR0_INITIALIZATION
     _TMR1_INITIALIZATION
     _init_queue
       ___wmul
   _check_button *
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     ___lwdiv
     ___lwmod
     _printLCD_char
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       ___awdiv (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
     _printLCD_string
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutStr
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
   _dequeue *
     ___awmod
     ___wmul
     _init_queue
       ___wmul
   _get_temp_humid *
     _print_temp_humid
       ___awdiv
       ___awmod
       _printLCD_char
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
         _LCDPutInst
           _WritePort_BBSPI
             _SendByteBBSPI
         ___awdiv (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
     _readDHT
       _getByte
   _heater_heatpumper *
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
     _printLCD_char
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       ___awdiv (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
     _printLCD_string
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutStr
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
   _register_timer *
     _ADD_NODE
       ___wmul
       _add
         ___wmul
       _create_node
       _return_index
   _start_timers *

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_IRS
   _read_button
   _read_button_increase
   _timer_ISR
     _UPDATE_TIMER
       _clean_node
         i2___wmul
       _enqueue
         i2___awmod
         i2___wmul
       i2_ADD_NODE
         i2___wmul
         i2_add
           i2___wmul
         i2_create_node
         i2_return_index
       i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0     CBC      37       82.8%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      28       7       15.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     60      95       5       93.1%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11B      32        0.0%
DATA                 0      0     DD7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Nov 25 09:53:21 2019

        __end_of_TMR1_INITIALIZATION 3498                __size_of_start_timers 0004  
                                 l30 3486                                   l33 2E7A  
                                 l42 3474                                   l35 2E8E  
                                 l51 301E                                   l27 31F2  
                        ?_LCDPutChar 0001                                   l36 2E90  
                                 l45 3456                                   l62 3346  
                                 l39 2EE0                                   l48 2F4A  
                                 l57 3308                                   l68 323E  
                       ___awdiv@sign 006D                          ?_LCDPutInst 0001  
                ___wmul@multiplicand 006A                      ??_printLCD_char 0074  
                         i2add@index 0014                SendByteBBSPI@bitcount 0069  
                                l302 14E0                                  l303 10F8  
                                l312 14DC                                  l304 14E4  
                                l129 34BE                                  l307 1114  
                                l139 33E8                                  l340 2D76  
                                l502 1D12                                  l334 264E  
                                l351 2FB4                                  l505 3380  
                                l346 3284                                  l338 2D72  
                                l355 2CF8                                  l700 3496  
                                l481 1F82                                  l706 3410  
                                l299 2582                                  l653 23AC  
                                l582 34A6                                  l663 21D8  
                                l672 2250                                  l657 2388  
                                l666 22A4                                  l682 2BEC  
                                l685 2BE8                                  l950 2A02  
                                l937 27DC                                  l689 2950  
               __end_of_check_button 1D14                                  _add 2584  
                        ?i2_ADD_NODE 001B                         ___awmod@sign 006D  
            ??_SYSTEM_INITIALIZATION 0070                                  tosl 000FFD  
                                wreg 000FE8                      i2ADD_NODE@delay 001B  
                  ?_print_temp_humid 0001                      i2ADD_NODE@index 0047  
                      return_index@i 006C                      __end_of_LCDInit 31F4  
                       __CFG_LVP$OFF 000000                         __CFG_WDT$OFF 000000  
                               ?_add 006E                                 l1204 2E6A  
                               l1214 3084                                 l1207 307C  
                               l3001 3034                                 l3011 3070  
                               l3003 303C                                 l3013 3076  
                               l3005 3044                                 l3101 1D88  
                               l3007 3052                                 l3111 1DD4  
                               l3103 1D94                                 l3015 34BC  
                               l2401 2EBE                                 l3009 3068  
                               l3113 1DDC                                 l3105 1DA4  
                               l3201 1B42                                 l3017 33B8  
                               l2411 2ECE                                 l2403 2EC0  
                               l3131 1ED8                                 l3123 1E02  
                               l3115 1DEC                                 l3211 1BAE  
                               l3203 1B54                                 l2413 2ED0  
                               l2405 2EC2                                 l1197 2E62  
                               l3141 1F62                                 l3133 1EEA  
                               l3125 1E72                                 l3117 1DF0  
                               l3109 1DBC                                 l3221 1C66  
                               l3213 1BDC                                 l3205 1B64  
                               l3063 24B6                                 l3055 24A0  
                               l2407 2EC4                                 l2415 343C  
                               l2431 2FC6                                 l3071 2CA8  
                               l3143 1F78                                 l3135 1EF0  
                               l3127 1E84                                 l3231 1CF8  
                               l3223 1C94                                 l3207 1B6A  
                               l3215 1C18                                 l3151 1982  
                               l3065 2562                                 l3057 24A6  
                               l2409 2EC6                                 l2417 343E  
                               l2433 2FD8                                 l3241 3352  
                               l2441 2EE6                                 l3073 2CAE  
                               l3137 1F06                                 l3129 1EC8  
                               l3233 1D0A                                 l3225 1CC2  
                               l3217 1C28                                 l3209 1B80  
                               l3161 19FE                                 l3153 1986  
                               l3145 194C                                 l2451 33EA  
                               l3067 2566                                 l2371 2E74  
                               l2419 3454                                 l2435 2FF4  
                               l2427 2FBA                                 l2531 345C  
                               l3251 3360                                 l3243 3356  
                               l3235 3348                                 l2443 2EF2  
                               l3075 2CC0                                 l3083 2CD4  
                               l3139 1F34                                 l3091 1D28  
                               l3219 1C50                                 l3227 1CD8  
                               l3171 1A34                                 l3163 1A14  
                               l3155 198C                                 l3147 1960  
                               l3331 23AE                                 l2453 3408  
                               l2381 2EA6                                 l2437 3000  
                               l2429 2FBA                                 l2533 345E  
                               l3261 337C                                 l3253 3362  
                               l3245 3358                                 l3237 334C  
                               l2445 2F04                                 l2541 32E2  
                               l2701 2972                                 l3077 2CC4  
                               l3069 2C78                                 l3093 1D42  
                               l3229 1CE6                                 l3181 1A6C  
                               l3173 1A4A                                 l3157 19A2  
                               l3165 1A1A                                 l3149 1972  
                               l3341 2450                                 l3333 23B6  
                               l2391 2EB4                                 l2383 2EAC  
                               l2535 3472                                 l3255 336C  
                               l3247 335A                                 l3239 334E  
                               l2447 2F20                                 l2439 2EE6  
                               l2551 322E                                 l2543 32E8  
                               l2711 29AA                                 l2703 2980  
                               l2631 2346                                 l2623 22D0  
                               l2615 22AC                                 l3095 1D52  
                               l3271 2B92                                 l3263 2B62  
                               l3183 1A82                                 l3167 1A2A  
                               l3175 1A50                                 l3191 1AF6  
                               l3159 19D0                                 l3343 246C  
                               l3335 23E8                                 l2529 3476  
                               l2393 2EB6                                 l2385 2EAE  
                               l2377 2E88                                 l2369 2E70  
                               l2801 31B0                                 l3257 3374  
                               l3249 335C                                 l2449 2F2C  
                               l2545 31F4                                 l2537 32CA  
                               l2713 29B8                                 l2721 29E2  
                               l2705 2988                                 l2641 2396  
                               l2633 2366                                 l2625 22F4  
                               l2617 22B8                                 l2609 22A6  
                               l3097 1D68                                 l3089 1D14  
                               l3281 2BCA                                 l3273 2B9A  
                               l3265 2B76                                 l3185 1AB0  
                               l3177 1A62                                 l3169 1A2E  
                               l3193 1B04                                 l2553 3240  
                               l2561 2CFA                                 l3345 247C  
                               l3337 241A                                 l2395 2EB8  
                               l2387 2EB0                                 l2379 2E9E  
                               l2811 31E0                                 l2803 31B6  
                               l3259 3378                                 l2547 3208  
                               l2539 32CE                                 l2723 29F2  
                               l2715 29CE                                 l2707 299A  
                               l2651 271E                                 l2643 239A  
                               l2635 2372                                 l2627 22FA  
                               l2619 22CA                                 l3099 1D80  
                               l3283 2BE0                                 l3275 2BA0  
                               l3195 1B16                                 l3187 1ADE  
                               l3179 1A66                                 l2555 3266  
                               l2571 2D42                                 l3339 244C  
                               l2397 2EBA                                 l2389 2EB2  
                               l2813 31E6                                 l2805 31C2  
                               l2549 321C                                 l2821 3324  
                               l2725 29FA                                 l2717 29D6  
                               l2709 29A2                                 l2661 274E  
                               l2653 272C                                 l2645 23AA  
                               l2629 2320                                 l3277 2BB6  
                               l3269 2B8E                                 l3197 1B28  
                               l3189 1AF4                                 l2581 2584  
                               l2557 3272                                 l2573 2D46  
                               l2399 2EBC                                 l2815 31EC  
                               l2807 31D4                                 l2911 2F66  
                               l2903 2F4C                                 l2823 3334  
                               l2719 29DC                                 l2671 277C  
                               l2663 2752                                 l2655 2734  
                               l3279 2BC2                                 l3199 1B30  
                               l2583 25B0                                 l2567 2D04  
                               l2831 109C                                 l2809 31DA  
                               l2921 3488                                 l2913 2F94  
                               l2905 2F56                                 l2825 333A  
                               l2817 330A                                 l2681 27B0  
                               l2673 278A                                 l2665 275A  
                               l2657 2738                                 l2649 2718  
                               l2585 25E6                                 l2569 2D28  
                               l2577 2D52                                 l2833 10B2  
                               l2923 348C                                 l2915 2F98  
                               l2819 331E                                 l2683 27B6  
                               l2675 2790                                 l2667 276C  
                               l2659 2746                                 l2931 21B2  
                               l2587 261C                                 l2579 2D56  
                               l2851 114A                                 l2835 10C6  
                               l2827 1052                                 l2917 3498  
                               l2693 2952                                 l2677 27A6  
                               l2669 2774                                 l2685 27BC  
                               l2941 21E6                                 l2933 21B4  
                               l2925 2192                                 l2861 1230  
                               l2853 1194                                 l2845 1108  
                               l2837 10CE                                 l2829 1090  
                               l2791 31A4                                 l2919 34A4  
                               l2695 2958                                 l2687 27CC  
                               l2679 27AE                                 l2951 222E  
                               l2943 21F2                                 l2935 21C0  
                               l2927 2196                                 l2871 1354  
                               l2863 125C                                 l2855 11B2  
                               l2847 111C                                 l2839 10EC  
                               l2793 31A6                                 l2697 2966  
                               l2689 27D4                                 l2961 2286  
                               l2953 223A                                 l2937 21D2  
                               l2929 21A8                                 l2881 148E  
                               l2873 1372                                 l2865 1264  
                               l2857 11FA                                 l2849 1146  
                               l2795 31A8                                 l2699 296E  
                               l2963 2290                                 l2883 14AC  
                               l2875 139E                                 l2867 128E  
                               l2859 1212                                 l2797 31A8  
                               l2789 31A0                                 l2981 2E12  
                               l2965 22A2                                 l2949 2208  
                               l2877 13C8                                 l2869 1340  
                               l2799 31AA                                 l2991 2E4C  
                               l2983 2E1A                                 l2975 28A0  
                               l2959 225E                                 l2879 147A  
                               l2993 2E54                                 l2985 2E22  
                               l2977 2DF6                                 l2995 2E56  
                               l2987 2E30                                 l2979 2E00  
                               l2997 2E5C                                 l2989 2E36  
                               l2999 3020                      ?_get_temp_humid 0001  
                               STR_1 1001                                 STR_2 1012  
                               STR_3 104A                                 STR_4 1023  
                               STR_5 1043                                 STR_6 1023  
                 ??_print_temp_humid 0074                                 STR_7 1034  
                               STR_8 104A                                 STR_9 1023  
                               u2020 2FB4                                 u2100 225E  
                               u2021 2FB0                                 u2101 225A  
                               u2110 22A2                                 u2030 21D2  
                               u2111 229E                                 u2031 21CE  
                               u1320 2E88                                 u2120 2E12  
                               u2040 21E6                                 u1321 2E84  
                               u2121 2E0E                                 u2041 21E2  
                               u1330 2E9E                                 u2130 2E30  
                               u2050 2204                                 u1331 2E9A  
                               u2131 2E2C                                 u2051 2200  
                               u1340 2EE0                                 u2140 2E4C  
                               u2060 2218                                 u2300 1D52  
                               u1341 2EDC                                 u2141 2E48  
                               u2061 2212                                 u2301 1D4E  
                               u2150 3034                                 u1510 22CA  
                               u2070 221A                                 u2310 1D68  
                               u2151 3030                                 u1511 22C6  
                               u2311 1D64                                 u2160 3052  
                               u1440 3308                                 u1600 2384  
                               u1520 22E0                                 u2080 222E  
                               u2320 1DA4                                 u2400 1972  
                               u2161 304E                                 u1441 3304  
                               u1601 2380                                 u1521 22DA  
                               u2081 222A                                 u2321 1DA0  
                               u2401 196E                                 u2170 3068  
                               u1450 3208                                 u1610 2396  
                               u1530 22E2                                 u2090 224C  
                               u2330 1DD4                                 u2410 1982  
                               u2171 3064                                 u1451 3204  
                               u1611 2392                                 u2091 2248  
                               u2331 1DD0                                 u2411 197E  
                               u2260 2582                                 u1460 322E  
                               u1700 2980                                 u1620 23AA  
                               u1540 22F4                                 u2340 1DEC  
                               u2500 1CF8                                 u2420 1A2A  
                               u2261 257E                                 u1461 322A  
                               u1701 297C                                 u1621 23A6  
                               u1541 22F0                                 u2341 1DE8  
                               u2501 1CF4                                 u2421 1A26  
                               u1710 299A                                 u2270 2CC0  
                               u1630 272C                                 u1550 230A  
                               u2350 1E02                                 u2510 1D0A  
                               u2430 1A62                                 u1711 2996  
                               u2271 2CBC                                 u1631 2728  
                               u1551 2304                                 u2351 1DFE  
                               u2511 1D06                                 u2431 1A5E  
                               u1471 327C                                 u1720 29B8  
                               u1640 2746                                 u1560 230C  
                               u2360 1E84                                 u2280 1D28  
                               u2520 2B76                                 u2440 1B16  
                               u1480 2D28                                 u1721 29B4  
                               u1641 2742                                 u2361 1E80  
                               u2281 1D24                                 u2521 2B72  
                               u2441 1B12                                 u1481 2D24  
                               u1730 29CE                                 u1650 276C  
                               u1570 2320                                 u2370 1ED8  
                               u2290 1D42                                 u2530 2B8A  
                               u2450 1B28                                 u1490 2D72  
                               u2610 246C                                 u1731 29CA  
                               u1651 2768                                 u1571 231C  
                               u2371 1ED4                                 u2291 1D3E  
                               u2531 2B86                                 u2451 1B24  
                               u1491 2D6E                                 u2611 2468  
                               u1740 29F2                                 u1660 278A  
                               u2380 1EEA                                 u2540 2BB6  
                               u2460 1B42                                 u1900 10C6  
                               u1741 29EE                                 u1661 2786  
                               u2381 1EE6                                 u2541 2BB2  
                               u2461 1B3E                                 u1901 10C2  
                               u1670 27A6                                 u2550 2BE0  
                               u2470 1B54                                 u2390 1960  
                               u1671 27A2                                 u2551 2BDC  
                               u2471 1B50                                 u2391 195C  
                               u1911 10D8                                 u1680 27CC  
                               u1584 2334                                 u2480 1B64  
                               u1920 11B2                                 u1681 27C8  
                               u1585 2330                                 u2481 1B60  
                               u1921 11AE                                 u1690 2966  
                               u1594 235A                                 u2490 1C28  
                               u1930 11FA                                 u2707 2FCE  
                               u1691 2962                                 u1595 2356  
                               u2491 1C24                                 u1931 11F6  
                               u1940 1212                                 u2628 2482  
                               u2717 2FEA                                 u2637 219E  
                               u1941 120E                                 u2629 2498  
                               u1870 331E                                 u2727 3008  
                               u1871 331A                                 u2647 21AC  
                               u1951 121C                                 u1960 1354  
                               u2657 22F6                                 u1961 1350  
                               u1881 1088                                 u1890 10B2  
                               u2667 2EFA                                 u1971 135E  
                               u1891 10AE                                 u1980 148E  
                               u2677 2F16                                 u1981 148A  
                               u2687 2F34                                 u1991 1498  
                               u2697 31CA                                 _TMR0 000FD6  
       __end_of_read_button_increase 30E6                  _TMR0_INITIALIZATION 3498  
                               _fan3 00EC                                 _head 00F1  
                               _main 23AE                     __end_of_ADD_NODE 14E6  
                               _rear 00D2                                 _no_q 00D0  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr2h 000FDA                                 fsr0l 000FE9  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               btemp 005F                         _start_timers 34BC  
                   ?_WritePort_BBSPI 006B                                 prodh 000FF4  
                               prodl 000FF3                                 start 000E  
                 __size_of_LCDPutStr 0040                        __CFG_IESO$OFF 000000  
                      __CFG_MCLRE$ON 000000                         ___param_bank 000000  
                              ??_add 007D                  i2create_node@period 0005  
                   i2ADD_NODE@period 001F                    ??_printLCD_string 0075  
               ?_TMR0_INITIALIZATION 0001                                ?_main 0001  
                    __end_of___awdiv 27DE                                STR_10 104A  
                              STR_11 1023                                STR_12 1043  
                              STR_13 1023                      __end_of___awmod 2A04  
                              _T0CON 000FD5                      ___awdiv@divisor 006A  
                              _T1CON 000FCD                      __end_of___lwdiv 2E6C  
                    __end_of___lwmod 3086                                i2l231 3144  
                              i2l303 1588                                i2l304 194A  
                              i2l226 2C54                                i2l307 15A4  
                              i2l236 30E4                                i2l340 2DF4  
                              i2l324 2190                                i2l149 33B6  
                              i2l334 289E                                i2l343 2716  
                              i2l361 2B60                                i2l346 32C8  
                              i2l338 2DF0                                i2l706 3436  
                              i2l585 34B2                                i2l950 2AB2  
                    ___awdiv@counter 006C                                _TMR1H 000FCF  
                              _TMR1L 000FCE                                i2_add 27DE  
                    create_node@temp 0075                 printLCD_string@array 0073  
                      __CFG_PWRT$OFF 000000                         main@function 00BD  
                    __end_of_getByte 23AE                       __CFG_FCMEN$OFF 000000  
       ??_LINKED_LIST_INITIALIZATION 006E                      __end_of_dequeue 2CFA  
                   __end_of_TMR0_IRS 34B4              __size_of_Port_BBSPIInit 001E  
                       ?_read_button 0001                      __end_of_readDHT 22A6  
                              _array 0CE0                      __end_of_enqueue 2B62  
                              _count 00F3                                _front 00D4  
                              _humid 00E6                                _queue 0128  
                              _state 00EA                       __CFG_BOREN$OFF 000000  
                              pclath 000FFA                                tablat 000FF5  
                __size_of_LCDPutChar 006A                     __end_ofi2___wmul 3438  
                              plusw0 000FEB                                plusw2 000FDB  
                __size_of_LCDPutInst 006A                                ttemp5 0060  
                              ttemp6 0063                                ttemp7 0067  
                              status 000FD8                                wtemp8 0060  
                        readDHT@temp 006F                   __size_ofi2___awmod 00B0  
                __size_ofi2_ADD_NODE 0466                      __initialization 3146  
                       __end_of_main 24A0  __size_of_LINKED_LIST_INITIALIZATION 00E4  
              ??_TMR0_INITIALIZATION 0068          ?_INTERRUPT_InterruptManager 0001  
                     i2_return_index 2D78                               ??_main 00BD  
                      __activetblptr 000003                            ??_LCDInit 006F  
                       LCDPutChar@ch 006E                               ?i2_add 0007  
                  __end_of_LCDPutStr 330A                               _ADCON1 000FC1  
                 __size_of_InitBBSPI 0012                     ___awdiv@dividend 0068  
                       LCDPutInst@ch 006E                       _register_timer 33B8  
                             i2l3031 30E6                               i2l2065 34A8  
                             i2l3041 313C                               i2l3033 30EE  
                             i2l3025 3382                               i2l2067 34AA  
                             i2l3035 310A                               i2l3051 30D0  
                             i2l3043 3086                               i2l3027 33A0  
                             i2l3037 3122                               i2l3053 30DC  
                             i2l3045 308E                               i2l2421 3412  
                             i2l2501 2A22                               i2l3029 33B2  
                             i2l3039 3130                               i2l3047 30AA  
                             i2l2423 342E                               i2l2511 2A5A  
                             i2l2503 2A30                               i2l3049 30C2  
                             i2l2513 2A68                               i2l2521 2A92  
                             i2l2505 2A38                               i2l2601 2B34  
                             i2l3321 2C2C                               i2l2603 2650  
                             i2l2523 2AA2                               i2l2515 2A7E  
                             i2l2507 2A4A                               i2l3323 2C34  
                             i2l2605 26F4                               i2l2525 2AAA  
                             i2l2517 2A86                               i2l2509 2A52  
                             i2l2461 283A                               i2l3325 2C46  
                             i2l3317 2C10                               i2l2607 270E  
                             i2l2519 2A8C                               i2l2463 286E  
                             i2l2471 2D80                               i2l3327 2C4C  
                             i2l3319 2C1E                               i2l2457 27DE  
                             i2l2473 2DA4                               i2l2481 2DD0  
                             i2l2465 2D78                               i2l3329 2C50  
                             i2l2459 2806                               i2l2483 2DD4  
                             i2l2475 2DBE                               i2l2731 1524  
                             i2l2493 2A04                               i2l2485 3286  
                             i2l2477 2DC4                               i2l2741 1584  
                             i2l2733 1530                               i2l2901 215A  
                             i2l2495 2A08                               i2l2591 2ACA  
                             i2l2487 32AA                               i2l2751 15D8  
                             i2l2735 1544                               i2l2497 2A16  
                             i2l2593 2ADA                               i2l2489 32B6  
                             i2l2761 16BE                               i2l2753 1620  
                             i2l2745 1598                               i2l2737 155A  
                             i2l2729 14E6                               i2l2499 2A1E  
                             i2l2595 2ADE                               i2l2771 17D6  
                             i2l2763 16E6                               i2l2755 1640  
                             i2l2747 15AC                               i2l2739 1562  
                             i2l2597 2B0E                               i2l2589 2AB4  
                             i2l2781 1904                               i2l2773 17F4  
                             i2l2765 16EE                               i2l2757 1686  
                             i2l2749 15D4                               i2l2599 2B2E  
                             i2l2783 1922                               i2l2775 181C  
                             i2l2767 1716                               i2l2759 16A0  
                             i2l2777 1844                               i2l2769 17C2  
                             i2l2779 18F0                               i2l2891 1F84  
                             i2l2893 1FBA                               i2l2895 2026  
                             i2l2897 20EE                               i2l2899 212A  
                  _temperature_value 00E2                               _OSCCON 000FD3  
                   create_node@delay 0068                         LCDPutStr@ptr 006F  
               __size_of_create_node 0046                       __CFG_XINST$OFF 000000  
                    _time_each_state 00EF                               ___wmul 33EA  
                          ??___awdiv 006C                            ??___awmod 006C  
              __size_of_check_button 03C8                            ??___lwdiv 006C  
                          ??___lwmod 006C               __end_ofi2_return_index 2DF6  
                             clear_0 316E                               clear_1 3180  
                             clear_2 318C                     ___awdiv@quotient 006E  
                    ___awmod@divisor 006A                               _temper 00E4  
                          ??_getByte 0068                      ___awmod@counter 006C  
                          ??_dequeue 0073                 _read_button_increase 3086  
                          ??_readDHT 006C                            ??_enqueue 000A  
             __size_ofi2_create_node 0044                            ?_ADD_NODE 0082  
             Port_BBSPIInit@port_dir 006B                    __end_ofi2___awmod 2AB4  
                  UPDATE_TIMER@delay 004D                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                          init_queue@i 006E  
             __end_of_register_timer 33EA                       i2___awmod@sign 0006  
                     ADD_NODE@period 0086                           __accesstop 0060  
            __end_of__initialization 3196                        ___rparam_used 000001  
                       _check_button 194C                        i2ADD_NODE@loc 0045  
                      i2ADD_NODE@pre 0036                    _heater_heatpumper 1D14  
             __size_of_SendByteBBSPI 0076                      clean_node@index 0007  
                      __end_ofi2_add 28A0                   ?_heater_heatpumper 0001  
                     __pcstackCOMRAM 0001                         __pidataBANK0 34B4  
                          ?_TMR0_IRS 0001                    __end_of_InitBBSPI 3488  
                       ??_LCDPutChar 006D                      ?i2_return_index 0001  
                       ??_LCDPutInst 006D                ?_read_button_increase 0001  
                ??_heater_heatpumper 0075                            ?i2___wmul 0001  
                       ??i2_ADD_NODE 0026                           ??_ADD_NODE 008D  
 __end_of_LINKED_LIST_INITIALIZATION 2584           _LINKED_LIST_INITIALIZATION 24A0  
                            ??i2_add 0016                      __CFG_OSC$INTIO7 000000  
                   ??_get_temp_humid 0074                i2create_node@function 0009  
                     _Port_BBSPIInit 3458                   i2ADD_NODE@function 0023  
     __size_of_SYSTEM_INITIALIZATION 003A        __end_of_SYSTEM_INITIALIZATION 3382  
                    ?_register_timer 00B0                         ADD_NODE@next 009B  
                       ADD_NODE@loop 0099                         ADD_NODE@temp 009F  
               __size_of_read_button 0060                           __pbssBANK0 00C0  
                         __pbssBANK1 0100            __end_of_heater_heatpumper 1F84  
                 __end_of_LCDPutChar 2F4C                      _printLCD_string 330A  
                 __end_of_LCDPutInst 3020                        i2_create_node 3286  
                         _clean_node 2650            __size_of_print_temp_humid 00B2  
                 __end_ofi2_ADD_NODE 194C                              ?___wmul 0068  
                         ??_TMR0_IRS 0001                           ??i2___wmul 0005  
              __end_of_printLCD_char 3240               __end_of_Port_BBSPIInit 3476  
                 __size_of_timer_ISR 0036         __size_of_TMR1_INITIALIZATION 0010  
                            _LCDInit 31A0                        _SendByteBBSPI 2E6C  
                            _OSCTUNE 000F9B                printLCD_char@position 0072  
                  create_node@period 006C                     WritePort_BBSPI@a 006B  
                     ?i2_create_node 0001                        ?_UPDATE_TIMER 0001  
               register_timer@period 00B4                              __Hparam 0000  
                            __Lparam 0000                              ___awdiv 2718  
                            ___awmod 2952                      __size_of___wmul 0028  
                            ___lwdiv 2DF6                              add@temp 006E  
                            ___lwmod 3020             __size_of_WritePort_BBSPI 0020  
                       __psmallconst 1000               ??_read_button_increase 0001  
                            __pcinit 3146                           _init_queue 2F4C  
                            __ramtop 1000                              _getByte 22A6  
                            __ptext0 23AE                              __ptext1 34BC  
                            __ptext2 33B8                              __ptext3 1052  
                            __ptext4 2CFA                              __ptext5 3240  
                            __ptext6 2584                              __ptext7 194C  
                            __ptext8 2B62                              __ptext9 1D14  
                            _dequeue 2C78                              _inc_but 00D6  
                            _readDHT 2192                       ?_SendByteBBSPI 0001  
                    ?_Port_BBSPIInit 0001                              _enqueue 2AB4  
          check_button@check_but_inc 00C4                         __size_of_add 00CC  
                   ___awmod@dividend 0068                    _UPDATE_TIMER$2273 0058  
            __end_of_printLCD_string 3348                            _LCDPutStr 32CA  
                     __pintcode_body 2BEE                 end_of_initialization 3196  
         __size_of_heater_heatpumper 0270                       ??_UPDATE_TIMER 0049  
                            int_func 2BEE                  i2___wmul@multiplier 0001  
                    i2return_index@i 0005                    __end_of_timer_ISR 33B8  
                        ?_clean_node 0007          __end_of_TMR0_INITIALIZATION 34A8  
                 UPDATE_TIMER@period 0051                              postdec1 000FE5  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc1 000FE6                              postinc2 000FDE  
                      ?_return_index 0068                            _PORTAbits 000F80  
                          _PORTBbits 000F81                            _PORTDbits 000F83  
                          _TRISAbits 000F92                  create_node@function 0070  
                          _TRISBbits 000F93                            _TRISCbits 000F94  
                          _TRISDbits 000F95                            _TRISFbits 000F97  
                  __size_of_ADD_NODE 0494                           ?_LCDPutStr 006F  
                          i2___awmod 2A04                            i2add@temp 0007  
                    ??i2_create_node 000E                  SendByteBBSPI@output 0068  
                      ??_create_node 0075                       i2ADD_NODE@next 0034  
                     i2ADD_NODE@loop 0032                       i2ADD_NODE@temp 0038  
                   ??i2_return_index 0003                     _print_temp_humid 28A0  
                 i2create_node@delay 0001                       ??_return_index 006A  
                     __end_of___wmul 3412                  printLCD_string@line 0071  
                        ?_init_queue 0001                    __size_of_TMR0_IRS 000C  
                    ??_SendByteBBSPI 0068                            _InitBBSPI 3476  
                   ??_register_timer 00BB                     i2___wmul@product 0005  
                  ??_WritePort_BBSPI 006C          ?_LINKED_LIST_INITIALIZATION 0001  
                start_initialization 3146                    __size_ofi2___wmul 0026  
                        __end_of_add 2650                  __size_of_clean_node 00C8  
                   ?_printLCD_string 0071                           ?i2___awmod 0001  
             register_timer@function 00B8                        ?_start_timers 0001  
                _TMR1_INITIALIZATION 3488                  __end_of_create_node 3286  
                           ??___wmul 006C                         _MAX_HUMIDITY 00DC  
                        __pdataBANK0 00ED                        ADD_NODE@delay 0082  
                      ADD_NODE@index 00AE                           ?_InitBBSPI 0001  
               __end_of_UPDATE_TIMER 2192                 ?_TMR1_INITIALIZATION 0001  
                           ?_LCDInit 0001                          __pbssBIGRAM 0128  
                        _check_index 0100                          __pbssCOMRAM 005D  
                      __pcstackBANK0 0060                        ??_read_button 0001  
                        ??_LCDPutStr 0071                _SYSTEM_INITIALIZATION 3348  
                     ??_start_timers 0068                  __size_of_init_queue 006A  
                        ADD_NODE@loc 00AC                          ADD_NODE@pre 009D  
                   ___lwdiv@dividend 0068                            __pintcode 0008  
                           ?___awdiv 0068                             ?___awmod 0068  
                           ?___lwdiv 0068                             ?___lwmod 0068  
                   ??_Port_BBSPIInit 006B         ??_INTERRUPT_InterruptManager 0060  
                           ?_getByte 0001                 fp__heater_heatpumper 0000  
                           ?_dequeue 0070                ??_TMR1_INITIALIZATION 0068  
                           ?_readDHT 0001                            _inc_but_1 00CA  
                          _inc_but_2 00C8                          __smallconst 1000  
                           ?_enqueue 0007                             _ADD_NODE 1052  
                register_timer@delay 00B0                       __size_ofi2_add 00C2  
                   ___lwdiv@quotient 006C      heater_heatpumper@check_off_temp 00ED  
                    enqueue@function 0007                          ??i2___awmod 0005  
               __end_of_return_index 2D78                      fp__check_button 0000  
                __end_of_read_button 3146                          _create_node 3240  
                     ___wmul@product 006C              __size_of_get_temp_humid 008C  
                           _LATAbits 000F89                             _FUNCTION 00EB  
                  fp__get_temp_humid 0000                             _LATCbits 000F8B  
                           _LATDbits 000F8C                             _LATFbits 000F8E  
                           _PIE1bits 000F9D               __size_of_printLCD_char 004C  
                           i2u200_40 1FBA                         ??_clean_node 0009  
                           i2u200_41 1FB6                             i2u201_40 2190  
                           i2u201_41 218C                             i2u220_40 3100  
                           i2u140_40 2A4A                             i2u220_41 30F8  
                           i2u140_41 2A46                             i2u221_40 3122  
                           i2u220_48 3102                             i2u141_40 2A68  
                           i2u221_41 311E                             i2u141_41 2A64  
                           i2u222_40 3130                             i2u142_40 2A7E  
                           i2u150_40 2ACA                             i2u222_41 312C  
                           i2u142_41 2A7A                             i2u150_41 2AC6  
                           i2u223_40 30A0                             i2u143_40 2AA2  
                           i2u135_40 2DA4                             i2u223_41 3098  
                           i2u143_41 2A9E                             i2u135_41 2DA0  
__size_of_INTERRUPT_InterruptManager 2C70                             i2u224_40 30C2  
                           i2u223_48 30A2                             i2u136_40 2DF0  
                           i2u224_41 30BE                             i2u136_41 2DEC  
                           i2u225_40 30D0                             i2u225_41 30CC  
                           i2u137_41 32C0                             i2u138_40 2A16  
                           i2u218_40 33A0                             i2u138_41 2A12  
                           i2u218_41 339C                             i2u139_40 2A30  
                           i2u219_40 33B2                             i2u139_41 2A2C  
                           i2u219_41 33AE                             i2u180_40 1686  
                           i2u260_40 2C46                             i2u180_41 1682  
                           i2u260_41 2C42                             i2u181_40 16A0  
                           i2u181_41 169C                             i2u182_41 16AA  
                           i2u183_40 17D6                             i2u183_41 17D2  
                           i2u175_41 151C                             i2u176_40 1544  
                           i2u184_41 17E0                             i2u176_41 1540  
                           i2u185_40 1904                             i2u177_40 155A  
                           i2u185_41 1900                             i2u177_41 1556  
                           _PIR1bits 000F9E                             i2u258_40 2C1E  
                           i2u186_41 190E                             i2u178_41 156C  
                           i2u258_41 2C1A                             i2u179_40 1640  
                           i2u259_40 2C2C                             i2u179_41 163C  
                           i2u259_41 2C28                            _timer_ISR 3382  
                           _TMR0_IRS 34A8                            _timestamp 00C0  
              UPDATE_TIMER@temp_head 005B                            _state_but 00D8  
      __size_of_read_button_increase 0060                    ___wmul@multiplier 0068  
                        ??_InitBBSPI 0068                   SendByteBBSPI@input 006A  
                           i2___wmul 3412                     __size_of_LCDInit 0054  
           __end_of_print_temp_humid 2952                    i2create_node@temp 000E  
                  printLCD_char@line 0070                   __end_of_clean_node 2718  
                          _turn_fan3 00DA               ?_SYSTEM_INITIALIZATION 0001  
                          copy_data0 315A                   i2___awmod@dividend 0001  
                        _first_state 00CE                        ?_check_button 0001  
                       _second_state 00CC                             __Hrparam 0000  
                           __Lrparam 0000                           ?_timer_ISR 0001  
                    _WritePort_BBSPI 3438                __size_of_UPDATE_TIMER 020E  
                   __size_of___awdiv 00C6                     __size_of___awmod 00B2  
              i2___wmul@multiplicand 0003                     __size_of___lwdiv 0076  
                   __size_of___lwmod 0066                         ??_init_queue 006E  
       __size_of_TMR0_INITIALIZATION 0010          LINKED_LIST_INITIALIZATION@i 006E  
                           add@index 007B                 __end_of_start_timers 34C0  
                   __size_of_getByte 0108                     __size_of_dequeue 0082  
                      _printLCD_char 31F4                     __size_of_readDHT 0114  
                   __size_of_enqueue 00AE                      ___lwdiv@divisor 006A  
                    ___lwdiv@counter 006E                          _read_button 30E6  
                           __ptext10 2192                             __ptext11 22A6  
                           __ptext20 3020                             __ptext12 28A0  
                           __ptext21 2DF6                             __ptext13 2718  
                           __ptext30 2E6C                             __ptext22 3348  
                           __ptext14 2C78                             __ptext31 3476  
                           __ptext23 2F4C                             __ptext15 2952  
                           __ptext40 27DE                             __ptext32 24A0  
                           __ptext24 3488                             __ptext16 330A  
                           __ptext41 2AB4                             __ptext33 33EA  
                           __ptext25 3498                             __ptext17 32CA  
                           __ptext42 2A04                             __ptext26 31A0  
                           __ptext18 31F4                             __ptext43 2650  
                           __ptext35 3382                             __ptext27 3458  
                           __ptext19 2EE2                             __ptext44 3412  
                           __ptext36 1F84                             __ptext28 2FB6  
                           __ptext45 3086                             __ptext37 14E6  
                           __ptext29 3438                             __ptext46 30E6  
                           __ptext38 2D78                             __ptext47 34A8  
                           __ptext39 3286                             __ptext48 0000  
                     printLCD_char@c 0073                       ??_check_button 0075  
              __end_ofi2_create_node 32CA                        __size_of_main 00F2  
                 __end_of_init_queue 2FB6                         _UPDATE_TIMER 1F84  
                           _no_funcs 00E8                 UPDATE_TIMER@function 0055  
                           getByte@i 006A                             getByte@j 006B  
                           int$flags 005F   __end_of_INTERRUPT_InterruptManager 2C78  
         _INTERRUPT_InterruptManager 0008                           _LCDPutChar 2EE2  
                         _LCDPutInst 2FB6          check_button@check_but_state 00C6  
                   readDHT@check_sum 006E                       ?_printLCD_char 0070  
              __end_of_SendByteBBSPI 2EE2                    i2___awmod@divisor 0003  
                  i2___awmod@counter 0005                __size_of_return_index 007E  
                         i2_ADD_NODE 14E6                           _INTCONbits 000FF2  
                           intlevel2 0000                       _get_temp_humid 2B62  
                   ___lwmod@dividend 0068              __end_of_WritePort_BBSPI 3458  
                       _time_out_dht 005D             __size_of_printLCD_string 003E  
                        ??_timer_ISR 005D                         _return_index 2CFA  
                    _MAX_TEMPERATURE 00DE                     ADD_NODE@function 008A  
            __size_ofi2_return_index 007E              WritePort_BBSPI@port_add 006C  
                    ___lwmod@divisor 006A                      ___lwmod@counter 006C  
                     _humidity_value 00E0               __end_of_get_temp_humid 2BEE  
            __size_of_register_timer 0032                          dequeue@temp 0073  
                       ?_create_node 0068  
